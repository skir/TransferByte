ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TCPWM_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	TCPWM_1_initVar
  18              		.bss
  19              		.type	TCPWM_1_initVar, %object
  20              		.size	TCPWM_1_initVar, 1
  21              	TCPWM_1_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.TCPWM_1_Init,"ax",%progbits
  24              		.align	2
  25              		.global	TCPWM_1_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	TCPWM_1_Init, %function
  29              	TCPWM_1_Init:
  30              	.LFB2:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\TCPWM_1.c"
   1:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/TCPWM_1.c **** * File Name: TCPWM_1.c
   3:.\Generated_Source\PSoC4/TCPWM_1.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/TCPWM_1.c **** *
   5:.\Generated_Source\PSoC4/TCPWM_1.c **** * Description:
   6:.\Generated_Source\PSoC4/TCPWM_1.c **** *  This file provides the source code to the API for the TCPWM_1
   7:.\Generated_Source\PSoC4/TCPWM_1.c **** *  component
   8:.\Generated_Source\PSoC4/TCPWM_1.c **** *
   9:.\Generated_Source\PSoC4/TCPWM_1.c **** * Note:
  10:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
  11:.\Generated_Source\PSoC4/TCPWM_1.c **** *
  12:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/TCPWM_1.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/TCPWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/TCPWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/TCPWM_1.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/TCPWM_1.c **** 
  19:.\Generated_Source\PSoC4/TCPWM_1.c **** #include "TCPWM_1.h"
  20:.\Generated_Source\PSoC4/TCPWM_1.c **** 
  21:.\Generated_Source\PSoC4/TCPWM_1.c **** uint8 TCPWM_1_initVar = 0u;
  22:.\Generated_Source\PSoC4/TCPWM_1.c **** 
  23:.\Generated_Source\PSoC4/TCPWM_1.c **** 
  24:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_Init
  26:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 2


  27:.\Generated_Source\PSoC4/TCPWM_1.c **** *
  28:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
  29:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Initialize/Restore default TCPWM_1 configuration.
  30:.\Generated_Source\PSoC4/TCPWM_1.c **** *
  31:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
  32:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
  33:.\Generated_Source\PSoC4/TCPWM_1.c **** *
  34:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
  35:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
  36:.\Generated_Source\PSoC4/TCPWM_1.c **** *
  37:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_Init(void)
  39:.\Generated_Source\PSoC4/TCPWM_1.c **** {
  32              		.loc 1 39 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40:.\Generated_Source\PSoC4/TCPWM_1.c **** 
  41:.\Generated_Source\PSoC4/TCPWM_1.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1__QUAD == TCPWM_1_CONFIG)
  43:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_CONTROL_REG = TCPWM_1_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/TCPWM_1.c ****         
  45:.\Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_TRIG_CONTROL1_REG  = TCPWM_1_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/TCPWM_1.c **** 
  48:.\Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_SetInterruptMode(TCPWM_1_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/TCPWM_1.c ****         
  51:.\Generated_Source\PSoC4/TCPWM_1.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_SetCounterMode(TCPWM_1_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_WritePeriod(TCPWM_1_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_WriteCounter(TCPWM_1_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif  /* (TCPWM_1__QUAD == TCPWM_1_CONFIG) */
  56:.\Generated_Source\PSoC4/TCPWM_1.c **** 
  57:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1__TIMER == TCPWM_1_CONFIG)
  58:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_CONTROL_REG = TCPWM_1_CTRL_TIMER_BASE_CONFIG;
  40              		.loc 1 58 0
  41 0004 084B     		ldr	r3, .L2
  42 0006 8022     		mov	r2, #128
  43 0008 9204     		lsl	r2, r2, #18
  44 000a 1A60     		str	r2, [r3]
  59:.\Generated_Source\PSoC4/TCPWM_1.c ****         
  60:.\Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_TRIG_CONTROL1_REG  = TCPWM_1_TIMER_SIGNALS_MODES;
  45              		.loc 1 61 0
  46 000c 074B     		ldr	r3, .L2+4
  47 000e 0C22     		mov	r2, #12
  48 0010 1A60     		str	r2, [r3]
  62:.\Generated_Source\PSoC4/TCPWM_1.c ****     
  63:.\Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_SetInterruptMode(TCPWM_1_TC_INTERRUPT_MASK);
  49              		.loc 1 64 0
  50 0012 0120     		mov	r0, #1
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 3


  51 0014 FFF7FEFF 		bl	TCPWM_1_SetInterruptMode
  65:.\Generated_Source\PSoC4/TCPWM_1.c ****         
  66:.\Generated_Source\PSoC4/TCPWM_1.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_WritePeriod(TCPWM_1_TC_PERIOD_VALUE );
  52              		.loc 1 67 0
  53 0018 2020     		mov	r0, #32
  54 001a FFF7FEFF 		bl	TCPWM_1_WritePeriod
  68:.\Generated_Source\PSoC4/TCPWM_1.c **** 
  69:.\Generated_Source\PSoC4/TCPWM_1.c ****         #if (TCPWM_1__COMPARE == TCPWM_1_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WriteCompare(TCPWM_1_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/TCPWM_1.c **** 
  72:.\Generated_Source\PSoC4/TCPWM_1.c ****             #if (1u == TCPWM_1_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_WriteCompareBuf(TCPWM_1_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/TCPWM_1.c ****             #endif  /* (1u == TCPWM_1_TC_COMPARE_SWAP) */
  76:.\Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (TCPWM_1__COMPARE == TCPWM_1_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/TCPWM_1.c **** 
  78:.\Generated_Source\PSoC4/TCPWM_1.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/TCPWM_1.c ****         #if (TCPWM_1_CY_TCPWM_V2 && TCPWM_1_TIMER_UPDOWN_CNT_USED && !TCPWM_1_CY_TCPWM_4000)
  80:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/TCPWM_1.c ****         #elif(TCPWM_1__COUNT_DOWN == TCPWM_1_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WriteCounter(TCPWM_1_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/TCPWM_1.c ****         #else
  84:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WriteCounter(0u);
  55              		.loc 1 84 0
  56 001e 0020     		mov	r0, #0
  57 0020 FFF7FEFF 		bl	TCPWM_1_WriteCounter
  85:.\Generated_Source\PSoC4/TCPWM_1.c ****         #endif /* (TCPWM_1_CY_TCPWM_V2 && TCPWM_1_TIMER_UPDOWN_CNT_USED && !TCPWM_1_CY_TCPWM_4000) 
  86:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif  /* (TCPWM_1__TIMER == TCPWM_1_CONFIG) */
  87:.\Generated_Source\PSoC4/TCPWM_1.c **** 
  88:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1__PWM_SEL == TCPWM_1_CONFIG)
  89:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_CONTROL_REG = TCPWM_1_CTRL_PWM_BASE_CONFIG;
  90:.\Generated_Source\PSoC4/TCPWM_1.c **** 
  91:.\Generated_Source\PSoC4/TCPWM_1.c ****         #if (TCPWM_1__PWM_PR == TCPWM_1_PWM_MODE)
  92:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_CONTROL_REG |= TCPWM_1_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WriteCounter(TCPWM_1_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/TCPWM_1.c ****         #else
  95:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_CONTROL_REG |= TCPWM_1_CTRL_PWM_ALIGN | TCPWM_1_CTRL_PWM_KILL_EVENT;
  96:.\Generated_Source\PSoC4/TCPWM_1.c ****             
  97:.\Generated_Source\PSoC4/TCPWM_1.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/TCPWM_1.c ****             #if (TCPWM_1_CY_TCPWM_V2 && TCPWM_1_PWM_UPDOWN_CNT_USED && !TCPWM_1_CY_TCPWM_4000)
  99:.\Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/TCPWM_1.c ****             #elif (TCPWM_1__RIGHT == TCPWM_1_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_WriteCounter(TCPWM_1_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/TCPWM_1.c ****             #else 
 103:.\Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_WriteCounter(0u);
 104:.\Generated_Source\PSoC4/TCPWM_1.c ****             #endif  /* (TCPWM_1_CY_TCPWM_V2 && TCPWM_1_PWM_UPDOWN_CNT_USED && !TCPWM_1_CY_TCPWM_400
 105:.\Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (TCPWM_1__PWM_PR == TCPWM_1_PWM_MODE) */
 106:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 107:.\Generated_Source\PSoC4/TCPWM_1.c ****         #if (TCPWM_1__PWM_DT == TCPWM_1_PWM_MODE)
 108:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_CONTROL_REG |= TCPWM_1_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (TCPWM_1__PWM_DT == TCPWM_1_PWM_MODE) */
 110:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 111:.\Generated_Source\PSoC4/TCPWM_1.c ****         #if (TCPWM_1__PWM == TCPWM_1_PWM_MODE)
 112:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_CONTROL_REG |= TCPWM_1_CTRL_PWM_PRESCALER;
 113:.\Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (TCPWM_1__PWM == TCPWM_1_PWM_MODE) */
 114:.\Generated_Source\PSoC4/TCPWM_1.c **** 
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 4


 115:.\Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_TRIG_CONTROL1_REG  = TCPWM_1_PWM_SIGNALS_MODES;
 117:.\Generated_Source\PSoC4/TCPWM_1.c ****     
 118:.\Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_SetInterruptMode(TCPWM_1_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 121:.\Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/TCPWM_1.c ****         #if (TCPWM_1__PWM_PR == TCPWM_1_PWM_MODE)
 123:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/TCPWM_1.c ****                     (TCPWM_1_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/TCPWM_1.c ****                     TCPWM_1_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/TCPWM_1.c ****                     TCPWM_1_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/TCPWM_1.c ****         #else
 128:.\Generated_Source\PSoC4/TCPWM_1.c ****             #if (TCPWM_1__LEFT == TCPWM_1_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_TRIG_CONTROL2_REG = TCPWM_1_PWM_MODE_LEFT;
 130:.\Generated_Source\PSoC4/TCPWM_1.c ****             #endif  /* ( TCPWM_1_PWM_LEFT == TCPWM_1_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 132:.\Generated_Source\PSoC4/TCPWM_1.c ****             #if (TCPWM_1__RIGHT == TCPWM_1_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_TRIG_CONTROL2_REG = TCPWM_1_PWM_MODE_RIGHT;
 134:.\Generated_Source\PSoC4/TCPWM_1.c ****             #endif  /* ( TCPWM_1_PWM_RIGHT == TCPWM_1_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 136:.\Generated_Source\PSoC4/TCPWM_1.c ****             #if (TCPWM_1__CENTER == TCPWM_1_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_TRIG_CONTROL2_REG = TCPWM_1_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/TCPWM_1.c ****             #endif  /* ( TCPWM_1_PWM_CENTER == TCPWM_1_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 140:.\Generated_Source\PSoC4/TCPWM_1.c ****             #if (TCPWM_1__ASYMMETRIC == TCPWM_1_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_TRIG_CONTROL2_REG = TCPWM_1_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/TCPWM_1.c ****             #endif  /* (TCPWM_1__ASYMMETRIC == TCPWM_1_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (TCPWM_1__PWM_PR == TCPWM_1_PWM_MODE) */
 144:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 145:.\Generated_Source\PSoC4/TCPWM_1.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_WritePeriod(TCPWM_1_PWM_PERIOD_VALUE );
 147:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_WriteCompare(TCPWM_1_PWM_COMPARE_VALUE);
 148:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 149:.\Generated_Source\PSoC4/TCPWM_1.c ****         #if (1u == TCPWM_1_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WriteCompareBuf(TCPWM_1_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (1u == TCPWM_1_PWM_COMPARE_SWAP) */
 153:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 154:.\Generated_Source\PSoC4/TCPWM_1.c ****         #if (1u == TCPWM_1_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WritePeriodBuf(TCPWM_1_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (1u == TCPWM_1_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif  /* (TCPWM_1__PWM_SEL == TCPWM_1_CONFIG) */
 159:.\Generated_Source\PSoC4/TCPWM_1.c ****     
 160:.\Generated_Source\PSoC4/TCPWM_1.c **** }
  58              		.loc 1 160 0
  59 0024 BD46     		mov	sp, r7
  60              		@ sp needed
  61 0026 80BD     		pop	{r7, pc}
  62              	.L3:
  63              		.align	2
  64              	.L2:
  65 0028 00012040 		.word	1075839232
  66 002c 24012040 		.word	1075839268
  67              		.cfi_endproc
  68              	.LFE2:
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 5


  69              		.size	TCPWM_1_Init, .-TCPWM_1_Init
  70              		.section	.text.TCPWM_1_Enable,"ax",%progbits
  71              		.align	2
  72              		.global	TCPWM_1_Enable
  73              		.code	16
  74              		.thumb_func
  75              		.type	TCPWM_1_Enable, %function
  76              	TCPWM_1_Enable:
  77              	.LFB3:
 161:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 162:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 163:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_Enable
 165:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 167:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 168:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Enables the TCPWM_1.
 169:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 170:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 171:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 172:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 173:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 174:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 175:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 176:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_Enable(void)
 178:.\Generated_Source\PSoC4/TCPWM_1.c **** {
  78              		.loc 1 178 0
  79              		.cfi_startproc
  80 0000 90B5     		push	{r4, r7, lr}
  81              		.cfi_def_cfa_offset 12
  82              		.cfi_offset 4, -12
  83              		.cfi_offset 7, -8
  84              		.cfi_offset 14, -4
  85 0002 83B0     		sub	sp, sp, #12
  86              		.cfi_def_cfa_offset 24
  87 0004 00AF     		add	r7, sp, #0
  88              		.cfi_def_cfa_register 7
 179:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 181:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
  89              		.loc 1 181 0
  90 0006 FC1D     		add	r4, r7, #7
  91 0008 FFF7FEFF 		bl	CyEnterCriticalSection
  92 000c 031C     		mov	r3, r0
  93 000e 2370     		strb	r3, [r4]
 182:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_BLOCK_CONTROL_REG |= TCPWM_1_MASK;
  94              		.loc 1 182 0
  95 0010 084B     		ldr	r3, .L5
  96 0012 084A     		ldr	r2, .L5
  97 0014 1268     		ldr	r2, [r2]
  98 0016 0121     		mov	r1, #1
  99 0018 0A43     		orr	r2, r1
 100 001a 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 101              		.loc 1 183 0
 102 001c FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 6


 103 001e 1B78     		ldrb	r3, [r3]
 104 0020 181C     		mov	r0, r3
 105 0022 FFF7FEFF 		bl	CyExitCriticalSection
 184:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 185:.\Generated_Source\PSoC4/TCPWM_1.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1__PWM_SEL == TCPWM_1_CONFIG)
 187:.\Generated_Source\PSoC4/TCPWM_1.c ****         #if (0u == TCPWM_1_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_TriggerCommand(TCPWM_1_MASK, TCPWM_1_CMD_START);
 189:.\Generated_Source\PSoC4/TCPWM_1.c ****         #endif /* (0u == TCPWM_1_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1__PWM_SEL == TCPWM_1_CONFIG) */
 191:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 192:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1__TIMER == TCPWM_1_CONFIG)
 193:.\Generated_Source\PSoC4/TCPWM_1.c ****         #if (0u == TCPWM_1_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_TriggerCommand(TCPWM_1_MASK, TCPWM_1_CMD_START);
 106              		.loc 1 194 0
 107 0026 0120     		mov	r0, #1
 108 0028 1821     		mov	r1, #24
 109 002a FFF7FEFF 		bl	TCPWM_1_TriggerCommand
 195:.\Generated_Source\PSoC4/TCPWM_1.c ****         #endif /* (0u == TCPWM_1_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1__TIMER == TCPWM_1_CONFIG) */
 197:.\Generated_Source\PSoC4/TCPWM_1.c ****     
 198:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1__QUAD == TCPWM_1_CONFIG)
 199:.\Generated_Source\PSoC4/TCPWM_1.c ****         #if (0u != TCPWM_1_QUAD_AUTO_START)
 200:.\Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_TriggerCommand(TCPWM_1_MASK, TCPWM_1_CMD_RELOAD);
 201:.\Generated_Source\PSoC4/TCPWM_1.c ****         #endif /* (0u != TCPWM_1_QUAD_AUTO_START) */
 202:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif  /* (TCPWM_1__QUAD == TCPWM_1_CONFIG) */
 203:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 110              		.loc 1 203 0
 111 002e BD46     		mov	sp, r7
 112 0030 03B0     		add	sp, sp, #12
 113              		@ sp needed
 114 0032 90BD     		pop	{r4, r7, pc}
 115              	.L6:
 116              		.align	2
 117              	.L5:
 118 0034 00002040 		.word	1075838976
 119              		.cfi_endproc
 120              	.LFE3:
 121              		.size	TCPWM_1_Enable, .-TCPWM_1_Enable
 122              		.section	.text.TCPWM_1_Start,"ax",%progbits
 123              		.align	2
 124              		.global	TCPWM_1_Start
 125              		.code	16
 126              		.thumb_func
 127              		.type	TCPWM_1_Start, %function
 128              	TCPWM_1_Start:
 129              	.LFB4:
 204:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 205:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 206:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 207:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_Start
 208:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 209:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 210:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 211:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Initializes the TCPWM_1 with default customizer
 212:.\Generated_Source\PSoC4/TCPWM_1.c **** *  values when called the first time and enables the TCPWM_1.
 213:.\Generated_Source\PSoC4/TCPWM_1.c **** *  For subsequent calls the configuration is left unchanged and the component is
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 7


 214:.\Generated_Source\PSoC4/TCPWM_1.c **** *  just enabled.
 215:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 216:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 217:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 218:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 219:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 220:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 221:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 222:.\Generated_Source\PSoC4/TCPWM_1.c **** * Global variables:
 223:.\Generated_Source\PSoC4/TCPWM_1.c **** *  TCPWM_1_initVar: global variable is used to indicate initial
 224:.\Generated_Source\PSoC4/TCPWM_1.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:.\Generated_Source\PSoC4/TCPWM_1.c **** *  to 1 the first time TCPWM_1_Start() is called. This allows
 226:.\Generated_Source\PSoC4/TCPWM_1.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:.\Generated_Source\PSoC4/TCPWM_1.c **** *  calls to the TCPWM_1_Start() routine.
 228:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 229:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 230:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_Start(void)
 231:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 130              		.loc 1 231 0
 131              		.cfi_startproc
 132 0000 80B5     		push	{r7, lr}
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 7, -8
 135              		.cfi_offset 14, -4
 136 0002 00AF     		add	r7, sp, #0
 137              		.cfi_def_cfa_register 7
 232:.\Generated_Source\PSoC4/TCPWM_1.c ****     if (0u == TCPWM_1_initVar)
 138              		.loc 1 232 0
 139 0004 064B     		ldr	r3, .L9
 140 0006 1B78     		ldrb	r3, [r3]
 141 0008 002B     		cmp	r3, #0
 142 000a 04D1     		bne	.L8
 233:.\Generated_Source\PSoC4/TCPWM_1.c ****     {
 234:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_Init();
 143              		.loc 1 234 0
 144 000c FFF7FEFF 		bl	TCPWM_1_Init
 235:.\Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_initVar = 1u;
 145              		.loc 1 235 0
 146 0010 034B     		ldr	r3, .L9
 147 0012 0122     		mov	r2, #1
 148 0014 1A70     		strb	r2, [r3]
 149              	.L8:
 236:.\Generated_Source\PSoC4/TCPWM_1.c ****     }
 237:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 238:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_Enable();
 150              		.loc 1 238 0
 151 0016 FFF7FEFF 		bl	TCPWM_1_Enable
 239:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 152              		.loc 1 239 0
 153 001a BD46     		mov	sp, r7
 154              		@ sp needed
 155 001c 80BD     		pop	{r7, pc}
 156              	.L10:
 157 001e C046     		.align	2
 158              	.L9:
 159 0020 00000000 		.word	TCPWM_1_initVar
 160              		.cfi_endproc
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 8


 161              	.LFE4:
 162              		.size	TCPWM_1_Start, .-TCPWM_1_Start
 163              		.section	.text.TCPWM_1_Stop,"ax",%progbits
 164              		.align	2
 165              		.global	TCPWM_1_Stop
 166              		.code	16
 167              		.thumb_func
 168              		.type	TCPWM_1_Stop, %function
 169              	TCPWM_1_Stop:
 170              	.LFB5:
 240:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 241:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 242:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 243:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_Stop
 244:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 245:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 246:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 247:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Disables the TCPWM_1.
 248:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 249:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 250:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 251:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 252:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 253:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 254:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 255:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 256:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_Stop(void)
 257:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 171              		.loc 1 257 0
 172              		.cfi_startproc
 173 0000 90B5     		push	{r4, r7, lr}
 174              		.cfi_def_cfa_offset 12
 175              		.cfi_offset 4, -12
 176              		.cfi_offset 7, -8
 177              		.cfi_offset 14, -4
 178 0002 83B0     		sub	sp, sp, #12
 179              		.cfi_def_cfa_offset 24
 180 0004 00AF     		add	r7, sp, #0
 181              		.cfi_def_cfa_register 7
 258:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 259:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 260:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 182              		.loc 1 260 0
 183 0006 FC1D     		add	r4, r7, #7
 184 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 185 000c 031C     		mov	r3, r0
 186 000e 2370     		strb	r3, [r4]
 261:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 262:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_BLOCK_CONTROL_REG &= (uint32)~TCPWM_1_MASK;
 187              		.loc 1 262 0
 188 0010 064B     		ldr	r3, .L12
 189 0012 064A     		ldr	r2, .L12
 190 0014 1268     		ldr	r2, [r2]
 191 0016 0121     		mov	r1, #1
 192 0018 8A43     		bic	r2, r1
 193 001a 1A60     		str	r2, [r3]
 263:.\Generated_Source\PSoC4/TCPWM_1.c **** 
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 9


 264:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 194              		.loc 1 264 0
 195 001c FB1D     		add	r3, r7, #7
 196 001e 1B78     		ldrb	r3, [r3]
 197 0020 181C     		mov	r0, r3
 198 0022 FFF7FEFF 		bl	CyExitCriticalSection
 265:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 199              		.loc 1 265 0
 200 0026 BD46     		mov	sp, r7
 201 0028 03B0     		add	sp, sp, #12
 202              		@ sp needed
 203 002a 90BD     		pop	{r4, r7, pc}
 204              	.L13:
 205              		.align	2
 206              	.L12:
 207 002c 00002040 		.word	1075838976
 208              		.cfi_endproc
 209              	.LFE5:
 210              		.size	TCPWM_1_Stop, .-TCPWM_1_Stop
 211              		.section	.text.TCPWM_1_SetMode,"ax",%progbits
 212              		.align	2
 213              		.global	TCPWM_1_SetMode
 214              		.code	16
 215              		.thumb_func
 216              		.type	TCPWM_1_SetMode, %function
 217              	TCPWM_1_SetMode:
 218              	.LFB6:
 266:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 267:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 268:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 269:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetMode
 270:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 271:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 272:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 273:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the operation mode of the TCPWM_1. This function is used when
 274:.\Generated_Source\PSoC4/TCPWM_1.c **** *  configured as a generic TCPWM_1 and the actual mode of operation is
 275:.\Generated_Source\PSoC4/TCPWM_1.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 277:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 278:.\Generated_Source\PSoC4/TCPWM_1.c **** *  mode: Mode for the TCPWM_1 to operate in
 279:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 280:.\Generated_Source\PSoC4/TCPWM_1.c **** *   - TCPWM_1_MODE_TIMER_COMPARE - Timer / Counter with
 281:.\Generated_Source\PSoC4/TCPWM_1.c **** *                                                 compare capability
 282:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_TIMER_CAPTURE - Timer / Counter with
 283:.\Generated_Source\PSoC4/TCPWM_1.c **** *                                                 capture capability
 284:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_QUAD - Quadrature decoder
 285:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_PWM - PWM
 286:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_PWM_DT - PWM with dead time
 287:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_PWM_PR - PWM with pseudo random capability
 288:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 289:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 290:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 291:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 292:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 293:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetMode(uint32 mode)
 294:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 219              		.loc 1 294 0
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 10


 220              		.cfi_startproc
 221 0000 90B5     		push	{r4, r7, lr}
 222              		.cfi_def_cfa_offset 12
 223              		.cfi_offset 4, -12
 224              		.cfi_offset 7, -8
 225              		.cfi_offset 14, -4
 226 0002 85B0     		sub	sp, sp, #20
 227              		.cfi_def_cfa_offset 32
 228 0004 00AF     		add	r7, sp, #0
 229              		.cfi_def_cfa_register 7
 230 0006 7860     		str	r0, [r7, #4]
 295:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 296:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 297:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 231              		.loc 1 297 0
 232 0008 0F23     		mov	r3, #15
 233 000a FC18     		add	r4, r7, r3
 234 000c FFF7FEFF 		bl	CyEnterCriticalSection
 235 0010 031C     		mov	r3, r0
 236 0012 2370     		strb	r3, [r4]
 298:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 299:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_MODE_MASK;
 237              		.loc 1 299 0
 238 0014 0A4B     		ldr	r3, .L15
 239 0016 0A4A     		ldr	r2, .L15
 240 0018 1268     		ldr	r2, [r2]
 241 001a 0A49     		ldr	r1, .L15+4
 242 001c 0A40     		and	r2, r1
 243 001e 1A60     		str	r2, [r3]
 300:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= mode;
 244              		.loc 1 300 0
 245 0020 074B     		ldr	r3, .L15
 246 0022 074A     		ldr	r2, .L15
 247 0024 1168     		ldr	r1, [r2]
 248 0026 7A68     		ldr	r2, [r7, #4]
 249 0028 0A43     		orr	r2, r1
 250 002a 1A60     		str	r2, [r3]
 301:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 302:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 251              		.loc 1 302 0
 252 002c 0F23     		mov	r3, #15
 253 002e FB18     		add	r3, r7, r3
 254 0030 1B78     		ldrb	r3, [r3]
 255 0032 181C     		mov	r0, r3
 256 0034 FFF7FEFF 		bl	CyExitCriticalSection
 303:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 257              		.loc 1 303 0
 258 0038 BD46     		mov	sp, r7
 259 003a 05B0     		add	sp, sp, #20
 260              		@ sp needed
 261 003c 90BD     		pop	{r4, r7, pc}
 262              	.L16:
 263 003e C046     		.align	2
 264              	.L15:
 265 0040 00012040 		.word	1075839232
 266 0044 FFFFFFF8 		.word	-117440513
 267              		.cfi_endproc
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 11


 268              	.LFE6:
 269              		.size	TCPWM_1_SetMode, .-TCPWM_1_SetMode
 270              		.section	.text.TCPWM_1_SetQDMode,"ax",%progbits
 271              		.align	2
 272              		.global	TCPWM_1_SetQDMode
 273              		.code	16
 274              		.thumb_func
 275              		.type	TCPWM_1_SetQDMode, %function
 276              	TCPWM_1_SetQDMode:
 277              	.LFB7:
 304:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 305:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 306:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 307:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetQDMode
 308:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 309:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 310:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 311:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 314:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 315:.\Generated_Source\PSoC4/TCPWM_1.c **** *  qdMode: Quadrature Decoder mode
 316:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 317:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_X1 - Counts on phi 1 rising
 318:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_X4 - Counts on both edges of phi1 and phi2
 320:.\Generated_Source\PSoC4/TCPWM_1.c **** *                                        (4x faster)
 321:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 322:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 323:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 324:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 325:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 326:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetQDMode(uint32 qdMode)
 327:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 278              		.loc 1 327 0
 279              		.cfi_startproc
 280 0000 90B5     		push	{r4, r7, lr}
 281              		.cfi_def_cfa_offset 12
 282              		.cfi_offset 4, -12
 283              		.cfi_offset 7, -8
 284              		.cfi_offset 14, -4
 285 0002 85B0     		sub	sp, sp, #20
 286              		.cfi_def_cfa_offset 32
 287 0004 00AF     		add	r7, sp, #0
 288              		.cfi_def_cfa_register 7
 289 0006 7860     		str	r0, [r7, #4]
 328:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 329:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 330:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 290              		.loc 1 330 0
 291 0008 0F23     		mov	r3, #15
 292 000a FC18     		add	r4, r7, r3
 293 000c FFF7FEFF 		bl	CyEnterCriticalSection
 294 0010 031C     		mov	r3, r0
 295 0012 2370     		strb	r3, [r4]
 331:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 332:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_QUAD_MODE_MASK;
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 12


 296              		.loc 1 332 0
 297 0014 0A4B     		ldr	r3, .L18
 298 0016 0A4A     		ldr	r2, .L18
 299 0018 1268     		ldr	r2, [r2]
 300 001a 0A49     		ldr	r1, .L18+4
 301 001c 0A40     		and	r2, r1
 302 001e 1A60     		str	r2, [r3]
 333:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= qdMode;
 303              		.loc 1 333 0
 304 0020 074B     		ldr	r3, .L18
 305 0022 074A     		ldr	r2, .L18
 306 0024 1168     		ldr	r1, [r2]
 307 0026 7A68     		ldr	r2, [r7, #4]
 308 0028 0A43     		orr	r2, r1
 309 002a 1A60     		str	r2, [r3]
 334:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 335:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 310              		.loc 1 335 0
 311 002c 0F23     		mov	r3, #15
 312 002e FB18     		add	r3, r7, r3
 313 0030 1B78     		ldrb	r3, [r3]
 314 0032 181C     		mov	r0, r3
 315 0034 FFF7FEFF 		bl	CyExitCriticalSection
 336:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 316              		.loc 1 336 0
 317 0038 BD46     		mov	sp, r7
 318 003a 05B0     		add	sp, sp, #20
 319              		@ sp needed
 320 003c 90BD     		pop	{r4, r7, pc}
 321              	.L19:
 322 003e C046     		.align	2
 323              	.L18:
 324 0040 00012040 		.word	1075839232
 325 0044 FFFF8FFF 		.word	-7340033
 326              		.cfi_endproc
 327              	.LFE7:
 328              		.size	TCPWM_1_SetQDMode, .-TCPWM_1_SetQDMode
 329              		.section	.text.TCPWM_1_SetPrescaler,"ax",%progbits
 330              		.align	2
 331              		.global	TCPWM_1_SetPrescaler
 332              		.code	16
 333              		.thumb_func
 334              		.type	TCPWM_1_SetPrescaler, %function
 335              	TCPWM_1_SetPrescaler:
 336              	.LFB8:
 337:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 338:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 339:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 340:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPrescaler
 341:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 342:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 343:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 344:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:.\Generated_Source\PSoC4/TCPWM_1.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 347:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 348:.\Generated_Source\PSoC4/TCPWM_1.c **** *  prescaler: Prescaler divider value
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 13


 349:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 350:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY2    - Divide by 2
 352:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY4    - Divide by 4
 353:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY8    - Divide by 8
 354:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY16   - Divide by 16
 355:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY32   - Divide by 32
 356:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY64   - Divide by 64
 357:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY128  - Divide by 128
 358:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 359:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 360:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 361:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 362:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 363:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPrescaler(uint32 prescaler)
 364:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 337              		.loc 1 364 0
 338              		.cfi_startproc
 339 0000 90B5     		push	{r4, r7, lr}
 340              		.cfi_def_cfa_offset 12
 341              		.cfi_offset 4, -12
 342              		.cfi_offset 7, -8
 343              		.cfi_offset 14, -4
 344 0002 85B0     		sub	sp, sp, #20
 345              		.cfi_def_cfa_offset 32
 346 0004 00AF     		add	r7, sp, #0
 347              		.cfi_def_cfa_register 7
 348 0006 7860     		str	r0, [r7, #4]
 365:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 366:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 367:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 349              		.loc 1 367 0
 350 0008 0F23     		mov	r3, #15
 351 000a FC18     		add	r4, r7, r3
 352 000c FFF7FEFF 		bl	CyEnterCriticalSection
 353 0010 031C     		mov	r3, r0
 354 0012 2370     		strb	r3, [r4]
 368:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 369:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_PRESCALER_MASK;
 355              		.loc 1 369 0
 356 0014 0A4B     		ldr	r3, .L21
 357 0016 0A4A     		ldr	r2, .L21
 358 0018 1268     		ldr	r2, [r2]
 359 001a 0A49     		ldr	r1, .L21+4
 360 001c 0A40     		and	r2, r1
 361 001e 1A60     		str	r2, [r3]
 370:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= prescaler;
 362              		.loc 1 370 0
 363 0020 074B     		ldr	r3, .L21
 364 0022 074A     		ldr	r2, .L21
 365 0024 1168     		ldr	r1, [r2]
 366 0026 7A68     		ldr	r2, [r7, #4]
 367 0028 0A43     		orr	r2, r1
 368 002a 1A60     		str	r2, [r3]
 371:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 372:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 369              		.loc 1 372 0
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 14


 370 002c 0F23     		mov	r3, #15
 371 002e FB18     		add	r3, r7, r3
 372 0030 1B78     		ldrb	r3, [r3]
 373 0032 181C     		mov	r0, r3
 374 0034 FFF7FEFF 		bl	CyExitCriticalSection
 373:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 375              		.loc 1 373 0
 376 0038 BD46     		mov	sp, r7
 377 003a 05B0     		add	sp, sp, #20
 378              		@ sp needed
 379 003c 90BD     		pop	{r4, r7, pc}
 380              	.L22:
 381 003e C046     		.align	2
 382              	.L21:
 383 0040 00012040 		.word	1075839232
 384 0044 FF00FFFF 		.word	-65281
 385              		.cfi_endproc
 386              	.LFE8:
 387              		.size	TCPWM_1_SetPrescaler, .-TCPWM_1_SetPrescaler
 388              		.section	.text.TCPWM_1_SetOneShot,"ax",%progbits
 389              		.align	2
 390              		.global	TCPWM_1_SetOneShot
 391              		.code	16
 392              		.thumb_func
 393              		.type	TCPWM_1_SetOneShot, %function
 394              	TCPWM_1_SetOneShot:
 395              	.LFB9:
 374:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 375:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 376:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 377:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetOneShot
 378:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 379:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 380:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 381:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the register that controls whether the TCPWM_1 runs
 382:.\Generated_Source\PSoC4/TCPWM_1.c **** *  continuously or stops when terminal count is reached.  By default the
 383:.\Generated_Source\PSoC4/TCPWM_1.c **** *  TCPWM_1 operates in the continuous mode.
 384:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 385:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 386:.\Generated_Source\PSoC4/TCPWM_1.c **** *  oneShotEnable
 387:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 388:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - 0 - Continuous
 389:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - 1 - Enable One Shot
 390:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 391:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 392:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 393:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 394:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 395:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetOneShot(uint32 oneShotEnable)
 396:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 396              		.loc 1 396 0
 397              		.cfi_startproc
 398 0000 90B5     		push	{r4, r7, lr}
 399              		.cfi_def_cfa_offset 12
 400              		.cfi_offset 4, -12
 401              		.cfi_offset 7, -8
 402              		.cfi_offset 14, -4
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 15


 403 0002 85B0     		sub	sp, sp, #20
 404              		.cfi_def_cfa_offset 32
 405 0004 00AF     		add	r7, sp, #0
 406              		.cfi_def_cfa_register 7
 407 0006 7860     		str	r0, [r7, #4]
 397:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 398:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 399:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 408              		.loc 1 399 0
 409 0008 0F23     		mov	r3, #15
 410 000a FC18     		add	r4, r7, r3
 411 000c FFF7FEFF 		bl	CyEnterCriticalSection
 412 0010 031C     		mov	r3, r0
 413 0012 2370     		strb	r3, [r4]
 400:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 401:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_ONESHOT_MASK;
 414              		.loc 1 401 0
 415 0014 0B4B     		ldr	r3, .L24
 416 0016 0B4A     		ldr	r2, .L24
 417 0018 1268     		ldr	r2, [r2]
 418 001a 0B49     		ldr	r1, .L24+4
 419 001c 0A40     		and	r2, r1
 420 001e 1A60     		str	r2, [r3]
 402:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((oneShotEnable & TCPWM_1_1BIT_MASK) <<
 421              		.loc 1 402 0
 422 0020 084B     		ldr	r3, .L24
 423 0022 084A     		ldr	r2, .L24
 424 0024 1168     		ldr	r1, [r2]
 425 0026 7A68     		ldr	r2, [r7, #4]
 426 0028 0120     		mov	r0, #1
 427 002a 0240     		and	r2, r0
 428 002c 9204     		lsl	r2, r2, #18
 429 002e 0A43     		orr	r2, r1
 430 0030 1A60     		str	r2, [r3]
 403:.\Generated_Source\PSoC4/TCPWM_1.c ****                                                                TCPWM_1_ONESHOT_SHIFT));
 404:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 405:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 431              		.loc 1 405 0
 432 0032 0F23     		mov	r3, #15
 433 0034 FB18     		add	r3, r7, r3
 434 0036 1B78     		ldrb	r3, [r3]
 435 0038 181C     		mov	r0, r3
 436 003a FFF7FEFF 		bl	CyExitCriticalSection
 406:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 437              		.loc 1 406 0
 438 003e BD46     		mov	sp, r7
 439 0040 05B0     		add	sp, sp, #20
 440              		@ sp needed
 441 0042 90BD     		pop	{r4, r7, pc}
 442              	.L25:
 443              		.align	2
 444              	.L24:
 445 0044 00012040 		.word	1075839232
 446 0048 FFFFFBFF 		.word	-262145
 447              		.cfi_endproc
 448              	.LFE9:
 449              		.size	TCPWM_1_SetOneShot, .-TCPWM_1_SetOneShot
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 16


 450              		.section	.text.TCPWM_1_SetPWMMode,"ax",%progbits
 451              		.align	2
 452              		.global	TCPWM_1_SetPWMMode
 453              		.code	16
 454              		.thumb_func
 455              		.type	TCPWM_1_SetPWMMode, %function
 456              	TCPWM_1_SetPWMMode:
 457              	.LFB10:
 407:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 408:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 409:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 410:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPWMMode
 411:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 412:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 413:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 414:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the control register that determines what mode of operation the PWM
 415:.\Generated_Source\PSoC4/TCPWM_1.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:.\Generated_Source\PSoC4/TCPWM_1.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:.\Generated_Source\PSoC4/TCPWM_1.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:.\Generated_Source\PSoC4/TCPWM_1.c **** *  the mode.
 419:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 420:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 421:.\Generated_Source\PSoC4/TCPWM_1.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:.\Generated_Source\PSoC4/TCPWM_1.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 424:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - OVERLOW_SET         - Set on overflow
 429:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:.\Generated_Source\PSoC4/TCPWM_1.c **** *                             with up counting mode
 438:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:.\Generated_Source\PSoC4/TCPWM_1.c **** *                             with down counting mode
 440:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:.\Generated_Source\PSoC4/TCPWM_1.c **** *                             combined with up/down 0 mode
 442:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:.\Generated_Source\PSoC4/TCPWM_1.c **** *                             with up/down 1 mode
 444:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 445:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 446:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 447:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 448:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 449:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPWMMode(uint32 modeMask)
 450:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 458              		.loc 1 450 0
 459              		.cfi_startproc
 460 0000 80B5     		push	{r7, lr}
 461              		.cfi_def_cfa_offset 8
 462              		.cfi_offset 7, -8
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 17


 463              		.cfi_offset 14, -4
 464 0002 82B0     		sub	sp, sp, #8
 465              		.cfi_def_cfa_offset 16
 466 0004 00AF     		add	r7, sp, #0
 467              		.cfi_def_cfa_register 7
 468 0006 7860     		str	r0, [r7, #4]
 451:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL2_REG = (modeMask & TCPWM_1_6BIT_MASK);
 469              		.loc 1 451 0
 470 0008 034B     		ldr	r3, .L27
 471 000a 7A68     		ldr	r2, [r7, #4]
 472 000c 3F21     		mov	r1, #63
 473 000e 0A40     		and	r2, r1
 474 0010 1A60     		str	r2, [r3]
 452:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 475              		.loc 1 452 0
 476 0012 BD46     		mov	sp, r7
 477 0014 02B0     		add	sp, sp, #8
 478              		@ sp needed
 479 0016 80BD     		pop	{r7, pc}
 480              	.L28:
 481              		.align	2
 482              	.L27:
 483 0018 28012040 		.word	1075839272
 484              		.cfi_endproc
 485              	.LFE10:
 486              		.size	TCPWM_1_SetPWMMode, .-TCPWM_1_SetPWMMode
 487              		.section	.text.TCPWM_1_SetPWMSyncKill,"ax",%progbits
 488              		.align	2
 489              		.global	TCPWM_1_SetPWMSyncKill
 490              		.code	16
 491              		.thumb_func
 492              		.type	TCPWM_1_SetPWMSyncKill, %function
 493              	TCPWM_1_SetPWMSyncKill:
 494              	.LFB11:
 453:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 454:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 455:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 456:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 457:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPWMSyncKill
 458:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 459:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 460:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 461:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:.\Generated_Source\PSoC4/TCPWM_1.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:.\Generated_Source\PSoC4/TCPWM_1.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:.\Generated_Source\PSoC4/TCPWM_1.c **** *  and PWM with dead time modes.
 465:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 466:.\Generated_Source\PSoC4/TCPWM_1.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:.\Generated_Source\PSoC4/TCPWM_1.c **** *  signals until the next terminal count.
 468:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 469:.\Generated_Source\PSoC4/TCPWM_1.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:.\Generated_Source\PSoC4/TCPWM_1.c **** *  signals when the kill signal is present.  This mode should only be used
 471:.\Generated_Source\PSoC4/TCPWM_1.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:.\Generated_Source\PSoC4/TCPWM_1.c **** *  (Level sensitive signal).
 473:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 474:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 475:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 18


 476:.\Generated_Source\PSoC4/TCPWM_1.c **** *  syncKillEnable
 477:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 478:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - 0 - Asynchronous
 479:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - 1 - Synchronous
 480:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 481:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 482:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 483:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 484:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 485:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPWMSyncKill(uint32 syncKillEnable)
 486:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 495              		.loc 1 486 0
 496              		.cfi_startproc
 497 0000 90B5     		push	{r4, r7, lr}
 498              		.cfi_def_cfa_offset 12
 499              		.cfi_offset 4, -12
 500              		.cfi_offset 7, -8
 501              		.cfi_offset 14, -4
 502 0002 85B0     		sub	sp, sp, #20
 503              		.cfi_def_cfa_offset 32
 504 0004 00AF     		add	r7, sp, #0
 505              		.cfi_def_cfa_register 7
 506 0006 7860     		str	r0, [r7, #4]
 487:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 488:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 489:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 507              		.loc 1 489 0
 508 0008 0F23     		mov	r3, #15
 509 000a FC18     		add	r4, r7, r3
 510 000c FFF7FEFF 		bl	CyEnterCriticalSection
 511 0010 031C     		mov	r3, r0
 512 0012 2370     		strb	r3, [r4]
 490:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 491:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_PWM_SYNC_KILL_MASK;
 513              		.loc 1 491 0
 514 0014 0B4B     		ldr	r3, .L30
 515 0016 0B4A     		ldr	r2, .L30
 516 0018 1268     		ldr	r2, [r2]
 517 001a 0421     		mov	r1, #4
 518 001c 8A43     		bic	r2, r1
 519 001e 1A60     		str	r2, [r3]
 492:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((syncKillEnable & TCPWM_1_1BIT_MASK)  <<
 520              		.loc 1 492 0
 521 0020 084B     		ldr	r3, .L30
 522 0022 084A     		ldr	r2, .L30
 523 0024 1168     		ldr	r1, [r2]
 524 0026 7A68     		ldr	r2, [r7, #4]
 525 0028 0120     		mov	r0, #1
 526 002a 0240     		and	r2, r0
 527 002c 9200     		lsl	r2, r2, #2
 528 002e 0A43     		orr	r2, r1
 529 0030 1A60     		str	r2, [r3]
 493:.\Generated_Source\PSoC4/TCPWM_1.c ****                                                TCPWM_1_PWM_SYNC_KILL_SHIFT));
 494:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 495:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 530              		.loc 1 495 0
 531 0032 0F23     		mov	r3, #15
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 19


 532 0034 FB18     		add	r3, r7, r3
 533 0036 1B78     		ldrb	r3, [r3]
 534 0038 181C     		mov	r0, r3
 535 003a FFF7FEFF 		bl	CyExitCriticalSection
 496:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 536              		.loc 1 496 0
 537 003e BD46     		mov	sp, r7
 538 0040 05B0     		add	sp, sp, #20
 539              		@ sp needed
 540 0042 90BD     		pop	{r4, r7, pc}
 541              	.L31:
 542              		.align	2
 543              	.L30:
 544 0044 00012040 		.word	1075839232
 545              		.cfi_endproc
 546              	.LFE11:
 547              		.size	TCPWM_1_SetPWMSyncKill, .-TCPWM_1_SetPWMSyncKill
 548              		.section	.text.TCPWM_1_SetPWMStopOnKill,"ax",%progbits
 549              		.align	2
 550              		.global	TCPWM_1_SetPWMStopOnKill
 551              		.code	16
 552              		.thumb_func
 553              		.type	TCPWM_1_SetPWMStopOnKill, %function
 554              	TCPWM_1_SetPWMStopOnKill:
 555              	.LFB12:
 497:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 498:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 499:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 500:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPWMStopOnKill
 501:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 502:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 503:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 504:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:.\Generated_Source\PSoC4/TCPWM_1.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:.\Generated_Source\PSoC4/TCPWM_1.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 508:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 509:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 510:.\Generated_Source\PSoC4/TCPWM_1.c **** *  stopOnKillEnable
 511:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 512:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - 0 - Don't stop
 513:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - 1 - Stop
 514:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 515:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 516:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 517:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 518:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 519:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 556              		.loc 1 520 0
 557              		.cfi_startproc
 558 0000 90B5     		push	{r4, r7, lr}
 559              		.cfi_def_cfa_offset 12
 560              		.cfi_offset 4, -12
 561              		.cfi_offset 7, -8
 562              		.cfi_offset 14, -4
 563 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 20


 564              		.cfi_def_cfa_offset 32
 565 0004 00AF     		add	r7, sp, #0
 566              		.cfi_def_cfa_register 7
 567 0006 7860     		str	r0, [r7, #4]
 521:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 522:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 523:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 568              		.loc 1 523 0
 569 0008 0F23     		mov	r3, #15
 570 000a FC18     		add	r4, r7, r3
 571 000c FFF7FEFF 		bl	CyEnterCriticalSection
 572 0010 031C     		mov	r3, r0
 573 0012 2370     		strb	r3, [r4]
 524:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 525:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_PWM_STOP_KILL_MASK;
 574              		.loc 1 525 0
 575 0014 0B4B     		ldr	r3, .L33
 576 0016 0B4A     		ldr	r2, .L33
 577 0018 1268     		ldr	r2, [r2]
 578 001a 0821     		mov	r1, #8
 579 001c 8A43     		bic	r2, r1
 580 001e 1A60     		str	r2, [r3]
 526:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((stopOnKillEnable & TCPWM_1_1BIT_MASK)  <<
 581              		.loc 1 526 0
 582 0020 084B     		ldr	r3, .L33
 583 0022 084A     		ldr	r2, .L33
 584 0024 1168     		ldr	r1, [r2]
 585 0026 7A68     		ldr	r2, [r7, #4]
 586 0028 0120     		mov	r0, #1
 587 002a 0240     		and	r2, r0
 588 002c D200     		lsl	r2, r2, #3
 589 002e 0A43     		orr	r2, r1
 590 0030 1A60     		str	r2, [r3]
 527:.\Generated_Source\PSoC4/TCPWM_1.c ****                                                          TCPWM_1_PWM_STOP_KILL_SHIFT));
 528:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 529:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 591              		.loc 1 529 0
 592 0032 0F23     		mov	r3, #15
 593 0034 FB18     		add	r3, r7, r3
 594 0036 1B78     		ldrb	r3, [r3]
 595 0038 181C     		mov	r0, r3
 596 003a FFF7FEFF 		bl	CyExitCriticalSection
 530:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 597              		.loc 1 530 0
 598 003e BD46     		mov	sp, r7
 599 0040 05B0     		add	sp, sp, #20
 600              		@ sp needed
 601 0042 90BD     		pop	{r4, r7, pc}
 602              	.L34:
 603              		.align	2
 604              	.L33:
 605 0044 00012040 		.word	1075839232
 606              		.cfi_endproc
 607              	.LFE12:
 608              		.size	TCPWM_1_SetPWMStopOnKill, .-TCPWM_1_SetPWMStopOnKill
 609              		.section	.text.TCPWM_1_SetPWMDeadTime,"ax",%progbits
 610              		.align	2
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 21


 611              		.global	TCPWM_1_SetPWMDeadTime
 612              		.code	16
 613              		.thumb_func
 614              		.type	TCPWM_1_SetPWMDeadTime, %function
 615              	TCPWM_1_SetPWMDeadTime:
 616              	.LFB13:
 531:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 532:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 533:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 534:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPWMDeadTime
 535:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 536:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 537:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 538:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:.\Generated_Source\PSoC4/TCPWM_1.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:.\Generated_Source\PSoC4/TCPWM_1.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:.\Generated_Source\PSoC4/TCPWM_1.c **** *  only applicable to the PWM in the dead time mode.
 542:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 543:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 544:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 545:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Dead time to insert
 546:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values: 0 to 255
 547:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 548:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 549:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 550:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 551:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 552:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPWMDeadTime(uint32 deadTime)
 553:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 617              		.loc 1 553 0
 618              		.cfi_startproc
 619 0000 90B5     		push	{r4, r7, lr}
 620              		.cfi_def_cfa_offset 12
 621              		.cfi_offset 4, -12
 622              		.cfi_offset 7, -8
 623              		.cfi_offset 14, -4
 624 0002 85B0     		sub	sp, sp, #20
 625              		.cfi_def_cfa_offset 32
 626 0004 00AF     		add	r7, sp, #0
 627              		.cfi_def_cfa_register 7
 628 0006 7860     		str	r0, [r7, #4]
 554:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 555:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 556:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 629              		.loc 1 556 0
 630 0008 0F23     		mov	r3, #15
 631 000a FC18     		add	r4, r7, r3
 632 000c FFF7FEFF 		bl	CyEnterCriticalSection
 633 0010 031C     		mov	r3, r0
 634 0012 2370     		strb	r3, [r4]
 557:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 558:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_PRESCALER_MASK;
 635              		.loc 1 558 0
 636 0014 0B4B     		ldr	r3, .L36
 637 0016 0B4A     		ldr	r2, .L36
 638 0018 1268     		ldr	r2, [r2]
 639 001a 0B49     		ldr	r1, .L36+4
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 22


 640 001c 0A40     		and	r2, r1
 641 001e 1A60     		str	r2, [r3]
 559:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((deadTime & TCPWM_1_8BIT_MASK) <<
 642              		.loc 1 559 0
 643 0020 084B     		ldr	r3, .L36
 644 0022 084A     		ldr	r2, .L36
 645 0024 1168     		ldr	r1, [r2]
 646 0026 7A68     		ldr	r2, [r7, #4]
 647 0028 1202     		lsl	r2, r2, #8
 648 002a 1204     		lsl	r2, r2, #16
 649 002c 120C     		lsr	r2, r2, #16
 650 002e 0A43     		orr	r2, r1
 651 0030 1A60     		str	r2, [r3]
 560:.\Generated_Source\PSoC4/TCPWM_1.c ****                                                           TCPWM_1_PRESCALER_SHIFT));
 561:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 562:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 652              		.loc 1 562 0
 653 0032 0F23     		mov	r3, #15
 654 0034 FB18     		add	r3, r7, r3
 655 0036 1B78     		ldrb	r3, [r3]
 656 0038 181C     		mov	r0, r3
 657 003a FFF7FEFF 		bl	CyExitCriticalSection
 563:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 658              		.loc 1 563 0
 659 003e BD46     		mov	sp, r7
 660 0040 05B0     		add	sp, sp, #20
 661              		@ sp needed
 662 0042 90BD     		pop	{r4, r7, pc}
 663              	.L37:
 664              		.align	2
 665              	.L36:
 666 0044 00012040 		.word	1075839232
 667 0048 FF00FFFF 		.word	-65281
 668              		.cfi_endproc
 669              	.LFE13:
 670              		.size	TCPWM_1_SetPWMDeadTime, .-TCPWM_1_SetPWMDeadTime
 671              		.section	.text.TCPWM_1_SetPWMInvert,"ax",%progbits
 672              		.align	2
 673              		.global	TCPWM_1_SetPWMInvert
 674              		.code	16
 675              		.thumb_func
 676              		.type	TCPWM_1_SetPWMInvert, %function
 677              	TCPWM_1_SetPWMInvert:
 678              	.LFB14:
 564:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 565:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 566:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 567:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPWMInvert
 568:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 569:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 570:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 571:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:.\Generated_Source\PSoC4/TCPWM_1.c **** *  inverted from their normal output values.  This functionality is only
 573:.\Generated_Source\PSoC4/TCPWM_1.c **** *  applicable to the three PWM modes.
 574:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 575:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 576:.\Generated_Source\PSoC4/TCPWM_1.c **** *  mask: Mask of outputs to invert.
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 23


 577:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 578:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_INVERT_LINE   - Inverts the line output
 579:.\Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_INVERT_LINE_N - Inverts the line_n output
 580:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 581:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 582:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 583:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 584:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 585:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPWMInvert(uint32 mask)
 586:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 679              		.loc 1 586 0
 680              		.cfi_startproc
 681 0000 90B5     		push	{r4, r7, lr}
 682              		.cfi_def_cfa_offset 12
 683              		.cfi_offset 4, -12
 684              		.cfi_offset 7, -8
 685              		.cfi_offset 14, -4
 686 0002 85B0     		sub	sp, sp, #20
 687              		.cfi_def_cfa_offset 32
 688 0004 00AF     		add	r7, sp, #0
 689              		.cfi_def_cfa_register 7
 690 0006 7860     		str	r0, [r7, #4]
 587:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 588:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 589:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 691              		.loc 1 589 0
 692 0008 0F23     		mov	r3, #15
 693 000a FC18     		add	r4, r7, r3
 694 000c FFF7FEFF 		bl	CyEnterCriticalSection
 695 0010 031C     		mov	r3, r0
 696 0012 2370     		strb	r3, [r4]
 590:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 591:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_INV_OUT_MASK;
 697              		.loc 1 591 0
 698 0014 0A4B     		ldr	r3, .L39
 699 0016 0A4A     		ldr	r2, .L39
 700 0018 1268     		ldr	r2, [r2]
 701 001a 0A49     		ldr	r1, .L39+4
 702 001c 0A40     		and	r2, r1
 703 001e 1A60     		str	r2, [r3]
 592:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= mask;
 704              		.loc 1 592 0
 705 0020 074B     		ldr	r3, .L39
 706 0022 074A     		ldr	r2, .L39
 707 0024 1168     		ldr	r1, [r2]
 708 0026 7A68     		ldr	r2, [r7, #4]
 709 0028 0A43     		orr	r2, r1
 710 002a 1A60     		str	r2, [r3]
 593:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 594:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 711              		.loc 1 594 0
 712 002c 0F23     		mov	r3, #15
 713 002e FB18     		add	r3, r7, r3
 714 0030 1B78     		ldrb	r3, [r3]
 715 0032 181C     		mov	r0, r3
 716 0034 FFF7FEFF 		bl	CyExitCriticalSection
 595:.\Generated_Source\PSoC4/TCPWM_1.c **** }
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 24


 717              		.loc 1 595 0
 718 0038 BD46     		mov	sp, r7
 719 003a 05B0     		add	sp, sp, #20
 720              		@ sp needed
 721 003c 90BD     		pop	{r4, r7, pc}
 722              	.L40:
 723 003e C046     		.align	2
 724              	.L39:
 725 0040 00012040 		.word	1075839232
 726 0044 FFFFCFFF 		.word	-3145729
 727              		.cfi_endproc
 728              	.LFE14:
 729              		.size	TCPWM_1_SetPWMInvert, .-TCPWM_1_SetPWMInvert
 730              		.section	.text.TCPWM_1_WriteCounter,"ax",%progbits
 731              		.align	2
 732              		.global	TCPWM_1_WriteCounter
 733              		.code	16
 734              		.thumb_func
 735              		.type	TCPWM_1_WriteCounter, %function
 736              	TCPWM_1_WriteCounter:
 737              	.LFB15:
 596:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 597:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 598:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 599:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 600:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_WriteCounter
 601:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 602:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 603:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 604:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:.\Generated_Source\PSoC4/TCPWM_1.c **** *  setting the counter (not the period) to the value written. It is not
 606:.\Generated_Source\PSoC4/TCPWM_1.c **** *  advised to write to this field when the counter is running.
 607:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 608:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 609:.\Generated_Source\PSoC4/TCPWM_1.c **** *  count: value to write
 610:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 611:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 612:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 613:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 614:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 615:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_WriteCounter(uint32 count)
 616:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 738              		.loc 1 616 0
 739              		.cfi_startproc
 740 0000 80B5     		push	{r7, lr}
 741              		.cfi_def_cfa_offset 8
 742              		.cfi_offset 7, -8
 743              		.cfi_offset 14, -4
 744 0002 82B0     		sub	sp, sp, #8
 745              		.cfi_def_cfa_offset 16
 746 0004 00AF     		add	r7, sp, #0
 747              		.cfi_def_cfa_register 7
 748 0006 7860     		str	r0, [r7, #4]
 617:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_COUNTER_REG = (count & TCPWM_1_16BIT_MASK);
 749              		.loc 1 617 0
 750 0008 034B     		ldr	r3, .L42
 751 000a 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 25


 752 000c 1204     		lsl	r2, r2, #16
 753 000e 120C     		lsr	r2, r2, #16
 754 0010 1A60     		str	r2, [r3]
 618:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 755              		.loc 1 618 0
 756 0012 BD46     		mov	sp, r7
 757 0014 02B0     		add	sp, sp, #8
 758              		@ sp needed
 759 0016 80BD     		pop	{r7, pc}
 760              	.L43:
 761              		.align	2
 762              	.L42:
 763 0018 08012040 		.word	1075839240
 764              		.cfi_endproc
 765              	.LFE15:
 766              		.size	TCPWM_1_WriteCounter, .-TCPWM_1_WriteCounter
 767              		.section	.text.TCPWM_1_ReadCounter,"ax",%progbits
 768              		.align	2
 769              		.global	TCPWM_1_ReadCounter
 770              		.code	16
 771              		.thumb_func
 772              		.type	TCPWM_1_ReadCounter, %function
 773              	TCPWM_1_ReadCounter:
 774              	.LFB16:
 619:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 620:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 621:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadCounter
 623:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 625:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 626:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the current counter value.
 627:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 628:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 629:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 630:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 631:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 632:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Current counter value
 633:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 634:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 635:.\Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadCounter(void)
 636:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 775              		.loc 1 636 0
 776              		.cfi_startproc
 777 0000 80B5     		push	{r7, lr}
 778              		.cfi_def_cfa_offset 8
 779              		.cfi_offset 7, -8
 780              		.cfi_offset 14, -4
 781 0002 00AF     		add	r7, sp, #0
 782              		.cfi_def_cfa_register 7
 637:.\Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_COUNTER_REG & TCPWM_1_16BIT_MASK);
 783              		.loc 1 637 0
 784 0004 034B     		ldr	r3, .L46
 785 0006 1B68     		ldr	r3, [r3]
 786 0008 1B04     		lsl	r3, r3, #16
 787 000a 1B0C     		lsr	r3, r3, #16
 638:.\Generated_Source\PSoC4/TCPWM_1.c **** }
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 26


 788              		.loc 1 638 0
 789 000c 181C     		mov	r0, r3
 790 000e BD46     		mov	sp, r7
 791              		@ sp needed
 792 0010 80BD     		pop	{r7, pc}
 793              	.L47:
 794 0012 C046     		.align	2
 795              	.L46:
 796 0014 08012040 		.word	1075839240
 797              		.cfi_endproc
 798              	.LFE16:
 799              		.size	TCPWM_1_ReadCounter, .-TCPWM_1_ReadCounter
 800              		.section	.text.TCPWM_1_SetCounterMode,"ax",%progbits
 801              		.align	2
 802              		.global	TCPWM_1_SetCounterMode
 803              		.code	16
 804              		.thumb_func
 805              		.type	TCPWM_1_SetCounterMode, %function
 806              	TCPWM_1_SetCounterMode:
 807              	.LFB17:
 639:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 640:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 641:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 642:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetCounterMode
 643:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 644:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 645:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 646:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:.\Generated_Source\PSoC4/TCPWM_1.c **** *  and the PWM with a pseudo random output.
 648:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 649:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 650:.\Generated_Source\PSoC4/TCPWM_1.c **** *  counterMode: Enumerated counter type values
 651:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 652:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_COUNT_UP       - Counts up
 653:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_COUNT_DOWN     - Counts down
 654:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:.\Generated_Source\PSoC4/TCPWM_1.c **** *                                         generated when counter reaches 0
 656:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:.\Generated_Source\PSoC4/TCPWM_1.c **** *                                         generated both when counter reaches 0
 658:.\Generated_Source\PSoC4/TCPWM_1.c **** *                                         and period
 659:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 660:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 661:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 662:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 663:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 664:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetCounterMode(uint32 counterMode)
 665:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 808              		.loc 1 665 0
 809              		.cfi_startproc
 810 0000 90B5     		push	{r4, r7, lr}
 811              		.cfi_def_cfa_offset 12
 812              		.cfi_offset 4, -12
 813              		.cfi_offset 7, -8
 814              		.cfi_offset 14, -4
 815 0002 85B0     		sub	sp, sp, #20
 816              		.cfi_def_cfa_offset 32
 817 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 27


 818              		.cfi_def_cfa_register 7
 819 0006 7860     		str	r0, [r7, #4]
 666:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 667:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 668:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 820              		.loc 1 668 0
 821 0008 0F23     		mov	r3, #15
 822 000a FC18     		add	r4, r7, r3
 823 000c FFF7FEFF 		bl	CyEnterCriticalSection
 824 0010 031C     		mov	r3, r0
 825 0012 2370     		strb	r3, [r4]
 669:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 670:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_UPDOWN_MASK;
 826              		.loc 1 670 0
 827 0014 0A4B     		ldr	r3, .L49
 828 0016 0A4A     		ldr	r2, .L49
 829 0018 1268     		ldr	r2, [r2]
 830 001a 0A49     		ldr	r1, .L49+4
 831 001c 0A40     		and	r2, r1
 832 001e 1A60     		str	r2, [r3]
 671:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= counterMode;
 833              		.loc 1 671 0
 834 0020 074B     		ldr	r3, .L49
 835 0022 074A     		ldr	r2, .L49
 836 0024 1168     		ldr	r1, [r2]
 837 0026 7A68     		ldr	r2, [r7, #4]
 838 0028 0A43     		orr	r2, r1
 839 002a 1A60     		str	r2, [r3]
 672:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 673:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 840              		.loc 1 673 0
 841 002c 0F23     		mov	r3, #15
 842 002e FB18     		add	r3, r7, r3
 843 0030 1B78     		ldrb	r3, [r3]
 844 0032 181C     		mov	r0, r3
 845 0034 FFF7FEFF 		bl	CyExitCriticalSection
 674:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 846              		.loc 1 674 0
 847 0038 BD46     		mov	sp, r7
 848 003a 05B0     		add	sp, sp, #20
 849              		@ sp needed
 850 003c 90BD     		pop	{r4, r7, pc}
 851              	.L50:
 852 003e C046     		.align	2
 853              	.L49:
 854 0040 00012040 		.word	1075839232
 855 0044 FFFFFCFF 		.word	-196609
 856              		.cfi_endproc
 857              	.LFE17:
 858              		.size	TCPWM_1_SetCounterMode, .-TCPWM_1_SetCounterMode
 859              		.section	.text.TCPWM_1_WritePeriod,"ax",%progbits
 860              		.align	2
 861              		.global	TCPWM_1_WritePeriod
 862              		.code	16
 863              		.thumb_func
 864              		.type	TCPWM_1_WritePeriod, %function
 865              	TCPWM_1_WritePeriod:
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 28


 866              	.LFB18:
 675:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 676:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 677:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 678:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_WritePeriod
 679:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 680:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 681:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 682:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the 16 bit period register with the new period value.
 683:.\Generated_Source\PSoC4/TCPWM_1.c **** *  To cause the counter to count for N cycles this register should be written
 684:.\Generated_Source\PSoC4/TCPWM_1.c **** *  with N-1 (counts from 0 to period inclusive).
 685:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 686:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 687:.\Generated_Source\PSoC4/TCPWM_1.c **** *  period: Period value
 688:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 689:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 690:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 691:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 692:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 693:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_WritePeriod(uint32 period)
 694:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 867              		.loc 1 694 0
 868              		.cfi_startproc
 869 0000 80B5     		push	{r7, lr}
 870              		.cfi_def_cfa_offset 8
 871              		.cfi_offset 7, -8
 872              		.cfi_offset 14, -4
 873 0002 82B0     		sub	sp, sp, #8
 874              		.cfi_def_cfa_offset 16
 875 0004 00AF     		add	r7, sp, #0
 876              		.cfi_def_cfa_register 7
 877 0006 7860     		str	r0, [r7, #4]
 695:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_PERIOD_REG = (period & TCPWM_1_16BIT_MASK);
 878              		.loc 1 695 0
 879 0008 034B     		ldr	r3, .L52
 880 000a 7A68     		ldr	r2, [r7, #4]
 881 000c 1204     		lsl	r2, r2, #16
 882 000e 120C     		lsr	r2, r2, #16
 883 0010 1A60     		str	r2, [r3]
 696:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 884              		.loc 1 696 0
 885 0012 BD46     		mov	sp, r7
 886 0014 02B0     		add	sp, sp, #8
 887              		@ sp needed
 888 0016 80BD     		pop	{r7, pc}
 889              	.L53:
 890              		.align	2
 891              	.L52:
 892 0018 14012040 		.word	1075839252
 893              		.cfi_endproc
 894              	.LFE18:
 895              		.size	TCPWM_1_WritePeriod, .-TCPWM_1_WritePeriod
 896              		.section	.text.TCPWM_1_ReadPeriod,"ax",%progbits
 897              		.align	2
 898              		.global	TCPWM_1_ReadPeriod
 899              		.code	16
 900              		.thumb_func
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 29


 901              		.type	TCPWM_1_ReadPeriod, %function
 902              	TCPWM_1_ReadPeriod:
 903              	.LFB19:
 697:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 698:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 699:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 700:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadPeriod
 701:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 702:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 703:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 704:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the 16 bit period register.
 705:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 706:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 707:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 708:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 709:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 710:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Period value
 711:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 712:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 713:.\Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadPeriod(void)
 714:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 904              		.loc 1 714 0
 905              		.cfi_startproc
 906 0000 80B5     		push	{r7, lr}
 907              		.cfi_def_cfa_offset 8
 908              		.cfi_offset 7, -8
 909              		.cfi_offset 14, -4
 910 0002 00AF     		add	r7, sp, #0
 911              		.cfi_def_cfa_register 7
 715:.\Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_PERIOD_REG & TCPWM_1_16BIT_MASK);
 912              		.loc 1 715 0
 913 0004 034B     		ldr	r3, .L56
 914 0006 1B68     		ldr	r3, [r3]
 915 0008 1B04     		lsl	r3, r3, #16
 916 000a 1B0C     		lsr	r3, r3, #16
 716:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 917              		.loc 1 716 0
 918 000c 181C     		mov	r0, r3
 919 000e BD46     		mov	sp, r7
 920              		@ sp needed
 921 0010 80BD     		pop	{r7, pc}
 922              	.L57:
 923 0012 C046     		.align	2
 924              	.L56:
 925 0014 14012040 		.word	1075839252
 926              		.cfi_endproc
 927              	.LFE19:
 928              		.size	TCPWM_1_ReadPeriod, .-TCPWM_1_ReadPeriod
 929              		.section	.text.TCPWM_1_SetCompareSwap,"ax",%progbits
 930              		.align	2
 931              		.global	TCPWM_1_SetCompareSwap
 932              		.code	16
 933              		.thumb_func
 934              		.type	TCPWM_1_SetCompareSwap, %function
 935              	TCPWM_1_SetCompareSwap:
 936              	.LFB20:
 717:.\Generated_Source\PSoC4/TCPWM_1.c **** 
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 30


 718:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 719:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 720:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetCompareSwap
 721:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 722:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 723:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 724:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the register that controls whether the compare registers are
 725:.\Generated_Source\PSoC4/TCPWM_1.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:.\Generated_Source\PSoC4/TCPWM_1.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:.\Generated_Source\PSoC4/TCPWM_1.c **** *  following a hardware switch event.
 728:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 729:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 730:.\Generated_Source\PSoC4/TCPWM_1.c **** *  swapEnable
 731:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 732:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - 0 - Disable swap
 733:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - 1 - Enable swap
 734:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 735:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 736:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 737:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 738:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 739:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetCompareSwap(uint32 swapEnable)
 740:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 937              		.loc 1 740 0
 938              		.cfi_startproc
 939 0000 90B5     		push	{r4, r7, lr}
 940              		.cfi_def_cfa_offset 12
 941              		.cfi_offset 4, -12
 942              		.cfi_offset 7, -8
 943              		.cfi_offset 14, -4
 944 0002 85B0     		sub	sp, sp, #20
 945              		.cfi_def_cfa_offset 32
 946 0004 00AF     		add	r7, sp, #0
 947              		.cfi_def_cfa_register 7
 948 0006 7860     		str	r0, [r7, #4]
 741:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 742:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 743:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 949              		.loc 1 743 0
 950 0008 0F23     		mov	r3, #15
 951 000a FC18     		add	r4, r7, r3
 952 000c FFF7FEFF 		bl	CyEnterCriticalSection
 953 0010 031C     		mov	r3, r0
 954 0012 2370     		strb	r3, [r4]
 744:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 745:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_RELOAD_CC_MASK;
 955              		.loc 1 745 0
 956 0014 0B4B     		ldr	r3, .L59
 957 0016 0B4A     		ldr	r2, .L59
 958 0018 1268     		ldr	r2, [r2]
 959 001a 0121     		mov	r1, #1
 960 001c 8A43     		bic	r2, r1
 961 001e 1A60     		str	r2, [r3]
 746:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= (swapEnable & TCPWM_1_1BIT_MASK);
 962              		.loc 1 746 0
 963 0020 084B     		ldr	r3, .L59
 964 0022 084A     		ldr	r2, .L59
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 31


 965 0024 1168     		ldr	r1, [r2]
 966 0026 7A68     		ldr	r2, [r7, #4]
 967 0028 0120     		mov	r0, #1
 968 002a 0240     		and	r2, r0
 969 002c 0A43     		orr	r2, r1
 970 002e 1A60     		str	r2, [r3]
 747:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 748:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 971              		.loc 1 748 0
 972 0030 0F23     		mov	r3, #15
 973 0032 FB18     		add	r3, r7, r3
 974 0034 1B78     		ldrb	r3, [r3]
 975 0036 181C     		mov	r0, r3
 976 0038 FFF7FEFF 		bl	CyExitCriticalSection
 749:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 977              		.loc 1 749 0
 978 003c BD46     		mov	sp, r7
 979 003e 05B0     		add	sp, sp, #20
 980              		@ sp needed
 981 0040 90BD     		pop	{r4, r7, pc}
 982              	.L60:
 983 0042 C046     		.align	2
 984              	.L59:
 985 0044 00012040 		.word	1075839232
 986              		.cfi_endproc
 987              	.LFE20:
 988              		.size	TCPWM_1_SetCompareSwap, .-TCPWM_1_SetCompareSwap
 989              		.section	.text.TCPWM_1_WritePeriodBuf,"ax",%progbits
 990              		.align	2
 991              		.global	TCPWM_1_WritePeriodBuf
 992              		.code	16
 993              		.thumb_func
 994              		.type	TCPWM_1_WritePeriodBuf, %function
 995              	TCPWM_1_WritePeriodBuf:
 996              	.LFB21:
 750:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 751:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 752:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 753:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_WritePeriodBuf
 754:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 755:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 756:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 757:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the 16 bit period buf register with the new period value.
 758:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 759:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 760:.\Generated_Source\PSoC4/TCPWM_1.c **** *  periodBuf: Period value
 761:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 762:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 763:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 764:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 765:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 766:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_WritePeriodBuf(uint32 periodBuf)
 767:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 997              		.loc 1 767 0
 998              		.cfi_startproc
 999 0000 80B5     		push	{r7, lr}
 1000              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 32


 1001              		.cfi_offset 7, -8
 1002              		.cfi_offset 14, -4
 1003 0002 82B0     		sub	sp, sp, #8
 1004              		.cfi_def_cfa_offset 16
 1005 0004 00AF     		add	r7, sp, #0
 1006              		.cfi_def_cfa_register 7
 1007 0006 7860     		str	r0, [r7, #4]
 768:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_PERIOD_BUF_REG = (periodBuf & TCPWM_1_16BIT_MASK);
 1008              		.loc 1 768 0
 1009 0008 034B     		ldr	r3, .L62
 1010 000a 7A68     		ldr	r2, [r7, #4]
 1011 000c 1204     		lsl	r2, r2, #16
 1012 000e 120C     		lsr	r2, r2, #16
 1013 0010 1A60     		str	r2, [r3]
 769:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1014              		.loc 1 769 0
 1015 0012 BD46     		mov	sp, r7
 1016 0014 02B0     		add	sp, sp, #8
 1017              		@ sp needed
 1018 0016 80BD     		pop	{r7, pc}
 1019              	.L63:
 1020              		.align	2
 1021              	.L62:
 1022 0018 18012040 		.word	1075839256
 1023              		.cfi_endproc
 1024              	.LFE21:
 1025              		.size	TCPWM_1_WritePeriodBuf, .-TCPWM_1_WritePeriodBuf
 1026              		.section	.text.TCPWM_1_ReadPeriodBuf,"ax",%progbits
 1027              		.align	2
 1028              		.global	TCPWM_1_ReadPeriodBuf
 1029              		.code	16
 1030              		.thumb_func
 1031              		.type	TCPWM_1_ReadPeriodBuf, %function
 1032              	TCPWM_1_ReadPeriodBuf:
 1033              	.LFB22:
 770:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 771:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 772:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 773:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadPeriodBuf
 774:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 775:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 776:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 777:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the 16 bit period buf register.
 778:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 779:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 780:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 781:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 782:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 783:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Period value
 784:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 785:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 786:.\Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadPeriodBuf(void)
 787:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1034              		.loc 1 787 0
 1035              		.cfi_startproc
 1036 0000 80B5     		push	{r7, lr}
 1037              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 33


 1038              		.cfi_offset 7, -8
 1039              		.cfi_offset 14, -4
 1040 0002 00AF     		add	r7, sp, #0
 1041              		.cfi_def_cfa_register 7
 788:.\Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_PERIOD_BUF_REG & TCPWM_1_16BIT_MASK);
 1042              		.loc 1 788 0
 1043 0004 034B     		ldr	r3, .L66
 1044 0006 1B68     		ldr	r3, [r3]
 1045 0008 1B04     		lsl	r3, r3, #16
 1046 000a 1B0C     		lsr	r3, r3, #16
 789:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1047              		.loc 1 789 0
 1048 000c 181C     		mov	r0, r3
 1049 000e BD46     		mov	sp, r7
 1050              		@ sp needed
 1051 0010 80BD     		pop	{r7, pc}
 1052              	.L67:
 1053 0012 C046     		.align	2
 1054              	.L66:
 1055 0014 18012040 		.word	1075839256
 1056              		.cfi_endproc
 1057              	.LFE22:
 1058              		.size	TCPWM_1_ReadPeriodBuf, .-TCPWM_1_ReadPeriodBuf
 1059              		.section	.text.TCPWM_1_SetPeriodSwap,"ax",%progbits
 1060              		.align	2
 1061              		.global	TCPWM_1_SetPeriodSwap
 1062              		.code	16
 1063              		.thumb_func
 1064              		.type	TCPWM_1_SetPeriodSwap, %function
 1065              	TCPWM_1_SetPeriodSwap:
 1066              	.LFB23:
 790:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 791:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 792:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 793:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPeriodSwap
 794:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 795:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 796:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 797:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the register that controls whether the period registers are
 798:.\Generated_Source\PSoC4/TCPWM_1.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:.\Generated_Source\PSoC4/TCPWM_1.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:.\Generated_Source\PSoC4/TCPWM_1.c **** *  switch event.
 801:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 802:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 803:.\Generated_Source\PSoC4/TCPWM_1.c **** *  swapEnable
 804:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 805:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - 0 - Disable swap
 806:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - 1 - Enable swap
 807:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 808:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 809:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 810:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 811:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 812:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPeriodSwap(uint32 swapEnable)
 813:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1067              		.loc 1 813 0
 1068              		.cfi_startproc
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 34


 1069 0000 90B5     		push	{r4, r7, lr}
 1070              		.cfi_def_cfa_offset 12
 1071              		.cfi_offset 4, -12
 1072              		.cfi_offset 7, -8
 1073              		.cfi_offset 14, -4
 1074 0002 85B0     		sub	sp, sp, #20
 1075              		.cfi_def_cfa_offset 32
 1076 0004 00AF     		add	r7, sp, #0
 1077              		.cfi_def_cfa_register 7
 1078 0006 7860     		str	r0, [r7, #4]
 814:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 815:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 816:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1079              		.loc 1 816 0
 1080 0008 0F23     		mov	r3, #15
 1081 000a FC18     		add	r4, r7, r3
 1082 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1083 0010 031C     		mov	r3, r0
 1084 0012 2370     		strb	r3, [r4]
 817:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 818:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_RELOAD_PERIOD_MASK;
 1085              		.loc 1 818 0
 1086 0014 0B4B     		ldr	r3, .L69
 1087 0016 0B4A     		ldr	r2, .L69
 1088 0018 1268     		ldr	r2, [r2]
 1089 001a 0221     		mov	r1, #2
 1090 001c 8A43     		bic	r2, r1
 1091 001e 1A60     		str	r2, [r3]
 819:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((swapEnable & TCPWM_1_1BIT_MASK) <<
 1092              		.loc 1 819 0
 1093 0020 084B     		ldr	r3, .L69
 1094 0022 084A     		ldr	r2, .L69
 1095 0024 1168     		ldr	r1, [r2]
 1096 0026 7A68     		ldr	r2, [r7, #4]
 1097 0028 0120     		mov	r0, #1
 1098 002a 0240     		and	r2, r0
 1099 002c 5200     		lsl	r2, r2, #1
 1100 002e 0A43     		orr	r2, r1
 1101 0030 1A60     		str	r2, [r3]
 820:.\Generated_Source\PSoC4/TCPWM_1.c ****                                                             TCPWM_1_RELOAD_PERIOD_SHIFT));
 821:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 822:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1102              		.loc 1 822 0
 1103 0032 0F23     		mov	r3, #15
 1104 0034 FB18     		add	r3, r7, r3
 1105 0036 1B78     		ldrb	r3, [r3]
 1106 0038 181C     		mov	r0, r3
 1107 003a FFF7FEFF 		bl	CyExitCriticalSection
 823:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1108              		.loc 1 823 0
 1109 003e BD46     		mov	sp, r7
 1110 0040 05B0     		add	sp, sp, #20
 1111              		@ sp needed
 1112 0042 90BD     		pop	{r4, r7, pc}
 1113              	.L70:
 1114              		.align	2
 1115              	.L69:
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 35


 1116 0044 00012040 		.word	1075839232
 1117              		.cfi_endproc
 1118              	.LFE23:
 1119              		.size	TCPWM_1_SetPeriodSwap, .-TCPWM_1_SetPeriodSwap
 1120              		.section	.text.TCPWM_1_WriteCompare,"ax",%progbits
 1121              		.align	2
 1122              		.global	TCPWM_1_WriteCompare
 1123              		.code	16
 1124              		.thumb_func
 1125              		.type	TCPWM_1_WriteCompare, %function
 1126              	TCPWM_1_WriteCompare:
 1127              	.LFB24:
 824:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 825:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 826:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 827:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_WriteCompare
 828:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 829:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 830:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 831:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:.\Generated_Source\PSoC4/TCPWM_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 834:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 835:.\Generated_Source\PSoC4/TCPWM_1.c **** *  compare: Compare value
 836:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 837:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 838:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 839:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 840:.\Generated_Source\PSoC4/TCPWM_1.c **** * Note:
 841:.\Generated_Source\PSoC4/TCPWM_1.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:.\Generated_Source\PSoC4/TCPWM_1.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:.\Generated_Source\PSoC4/TCPWM_1.c **** *  PSoC 4100/PSoC 4200 devices.
 844:.\Generated_Source\PSoC4/TCPWM_1.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:.\Generated_Source\PSoC4/TCPWM_1.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:.\Generated_Source\PSoC4/TCPWM_1.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 848:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 849:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_WriteCompare(uint32 compare)
 850:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1128              		.loc 1 850 0
 1129              		.cfi_startproc
 1130 0000 80B5     		push	{r7, lr}
 1131              		.cfi_def_cfa_offset 8
 1132              		.cfi_offset 7, -8
 1133              		.cfi_offset 14, -4
 1134 0002 82B0     		sub	sp, sp, #8
 1135              		.cfi_def_cfa_offset 16
 1136 0004 00AF     		add	r7, sp, #0
 1137              		.cfi_def_cfa_register 7
 1138 0006 7860     		str	r0, [r7, #4]
 851:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 852:.\Generated_Source\PSoC4/TCPWM_1.c ****         uint32 currentMode;
 853:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 854:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 855:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 856:.\Generated_Source\PSoC4/TCPWM_1.c ****         currentMode = ((TCPWM_1_CONTROL_REG & TCPWM_1_UPDOWN_MASK) >> TCPWM_1_UPDOWN_SHIFT);
 857:.\Generated_Source\PSoC4/TCPWM_1.c **** 
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 36


 858:.\Generated_Source\PSoC4/TCPWM_1.c ****         if (((uint32)TCPWM_1__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:.\Generated_Source\PSoC4/TCPWM_1.c ****         {
 860:.\Generated_Source\PSoC4/TCPWM_1.c ****             compare++;
 861:.\Generated_Source\PSoC4/TCPWM_1.c ****         }
 862:.\Generated_Source\PSoC4/TCPWM_1.c ****         else if (((uint32)TCPWM_1__COUNT_UP == currentMode) && (0u != compare))
 863:.\Generated_Source\PSoC4/TCPWM_1.c ****         {
 864:.\Generated_Source\PSoC4/TCPWM_1.c ****             compare--;
 865:.\Generated_Source\PSoC4/TCPWM_1.c ****         }
 866:.\Generated_Source\PSoC4/TCPWM_1.c ****         else
 867:.\Generated_Source\PSoC4/TCPWM_1.c ****         {
 868:.\Generated_Source\PSoC4/TCPWM_1.c ****         }
 869:.\Generated_Source\PSoC4/TCPWM_1.c ****         
 870:.\Generated_Source\PSoC4/TCPWM_1.c ****     
 871:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 872:.\Generated_Source\PSoC4/TCPWM_1.c ****     
 873:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_COMP_CAP_REG = (compare & TCPWM_1_16BIT_MASK);
 1139              		.loc 1 873 0
 1140 0008 034B     		ldr	r3, .L72
 1141 000a 7A68     		ldr	r2, [r7, #4]
 1142 000c 1204     		lsl	r2, r2, #16
 1143 000e 120C     		lsr	r2, r2, #16
 1144 0010 1A60     		str	r2, [r3]
 874:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1145              		.loc 1 874 0
 1146 0012 BD46     		mov	sp, r7
 1147 0014 02B0     		add	sp, sp, #8
 1148              		@ sp needed
 1149 0016 80BD     		pop	{r7, pc}
 1150              	.L73:
 1151              		.align	2
 1152              	.L72:
 1153 0018 0C012040 		.word	1075839244
 1154              		.cfi_endproc
 1155              	.LFE24:
 1156              		.size	TCPWM_1_WriteCompare, .-TCPWM_1_WriteCompare
 1157              		.section	.text.TCPWM_1_ReadCompare,"ax",%progbits
 1158              		.align	2
 1159              		.global	TCPWM_1_ReadCompare
 1160              		.code	16
 1161              		.thumb_func
 1162              		.type	TCPWM_1_ReadCompare, %function
 1163              	TCPWM_1_ReadCompare:
 1164              	.LFB25:
 875:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 876:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 877:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 878:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadCompare
 879:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 880:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 881:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 882:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:.\Generated_Source\PSoC4/TCPWM_1.c **** *  or in Quadrature Decoder modes.
 884:.\Generated_Source\PSoC4/TCPWM_1.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Down counting mode (except 0x0u).
 887:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 888:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 37


 889:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 890:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 891:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 892:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Compare value
 893:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 894:.\Generated_Source\PSoC4/TCPWM_1.c **** * Note:
 895:.\Generated_Source\PSoC4/TCPWM_1.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Down counting mode (except 0x0u).
 898:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 899:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 900:.\Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadCompare(void)
 901:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1165              		.loc 1 901 0
 1166              		.cfi_startproc
 1167 0000 80B5     		push	{r7, lr}
 1168              		.cfi_def_cfa_offset 8
 1169              		.cfi_offset 7, -8
 1170              		.cfi_offset 14, -4
 1171 0002 00AF     		add	r7, sp, #0
 1172              		.cfi_def_cfa_register 7
 902:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 903:.\Generated_Source\PSoC4/TCPWM_1.c ****         uint32 currentMode;
 904:.\Generated_Source\PSoC4/TCPWM_1.c ****         uint32 regVal;
 905:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 907:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 908:.\Generated_Source\PSoC4/TCPWM_1.c ****         currentMode = ((TCPWM_1_CONTROL_REG & TCPWM_1_UPDOWN_MASK) >> TCPWM_1_UPDOWN_SHIFT);
 909:.\Generated_Source\PSoC4/TCPWM_1.c ****         
 910:.\Generated_Source\PSoC4/TCPWM_1.c ****         regVal = TCPWM_1_COMP_CAP_REG;
 911:.\Generated_Source\PSoC4/TCPWM_1.c ****         
 912:.\Generated_Source\PSoC4/TCPWM_1.c ****         if (((uint32)TCPWM_1__COUNT_DOWN == currentMode) && (0u != regVal))
 913:.\Generated_Source\PSoC4/TCPWM_1.c ****         {
 914:.\Generated_Source\PSoC4/TCPWM_1.c ****             regVal--;
 915:.\Generated_Source\PSoC4/TCPWM_1.c ****         }
 916:.\Generated_Source\PSoC4/TCPWM_1.c ****         else if (((uint32)TCPWM_1__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:.\Generated_Source\PSoC4/TCPWM_1.c ****         {
 918:.\Generated_Source\PSoC4/TCPWM_1.c ****             regVal++;
 919:.\Generated_Source\PSoC4/TCPWM_1.c ****         }
 920:.\Generated_Source\PSoC4/TCPWM_1.c ****         else
 921:.\Generated_Source\PSoC4/TCPWM_1.c ****         {
 922:.\Generated_Source\PSoC4/TCPWM_1.c ****         }
 923:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 924:.\Generated_Source\PSoC4/TCPWM_1.c ****         return (regVal & TCPWM_1_16BIT_MASK);
 925:.\Generated_Source\PSoC4/TCPWM_1.c ****     #else
 926:.\Generated_Source\PSoC4/TCPWM_1.c ****         return (TCPWM_1_COMP_CAP_REG & TCPWM_1_16BIT_MASK);
 1173              		.loc 1 926 0
 1174 0004 034B     		ldr	r3, .L76
 1175 0006 1B68     		ldr	r3, [r3]
 1176 0008 1B04     		lsl	r3, r3, #16
 1177 000a 1B0C     		lsr	r3, r3, #16
 927:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 928:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1178              		.loc 1 928 0
 1179 000c 181C     		mov	r0, r3
 1180 000e BD46     		mov	sp, r7
 1181              		@ sp needed
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 38


 1182 0010 80BD     		pop	{r7, pc}
 1183              	.L77:
 1184 0012 C046     		.align	2
 1185              	.L76:
 1186 0014 0C012040 		.word	1075839244
 1187              		.cfi_endproc
 1188              	.LFE25:
 1189              		.size	TCPWM_1_ReadCompare, .-TCPWM_1_ReadCompare
 1190              		.section	.text.TCPWM_1_WriteCompareBuf,"ax",%progbits
 1191              		.align	2
 1192              		.global	TCPWM_1_WriteCompareBuf
 1193              		.code	16
 1194              		.thumb_func
 1195              		.type	TCPWM_1_WriteCompareBuf, %function
 1196              	TCPWM_1_WriteCompareBuf:
 1197              	.LFB26:
 929:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 930:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 931:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 932:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_WriteCompareBuf
 933:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 934:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 935:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 936:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:.\Generated_Source\PSoC4/TCPWM_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 939:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 940:.\Generated_Source\PSoC4/TCPWM_1.c **** *  compareBuf: Compare value
 941:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 942:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 943:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
 944:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 945:.\Generated_Source\PSoC4/TCPWM_1.c **** * Note:
 946:.\Generated_Source\PSoC4/TCPWM_1.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:.\Generated_Source\PSoC4/TCPWM_1.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:.\Generated_Source\PSoC4/TCPWM_1.c **** *  PSoC 4100/PSoC 4200 devices.
 949:.\Generated_Source\PSoC4/TCPWM_1.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:.\Generated_Source\PSoC4/TCPWM_1.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:.\Generated_Source\PSoC4/TCPWM_1.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 953:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 954:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_WriteCompareBuf(uint32 compareBuf)
 955:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1198              		.loc 1 955 0
 1199              		.cfi_startproc
 1200 0000 80B5     		push	{r7, lr}
 1201              		.cfi_def_cfa_offset 8
 1202              		.cfi_offset 7, -8
 1203              		.cfi_offset 14, -4
 1204 0002 82B0     		sub	sp, sp, #8
 1205              		.cfi_def_cfa_offset 16
 1206 0004 00AF     		add	r7, sp, #0
 1207              		.cfi_def_cfa_register 7
 1208 0006 7860     		str	r0, [r7, #4]
 956:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 957:.\Generated_Source\PSoC4/TCPWM_1.c ****         uint32 currentMode;
 958:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 39


 959:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 960:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 961:.\Generated_Source\PSoC4/TCPWM_1.c ****         currentMode = ((TCPWM_1_CONTROL_REG & TCPWM_1_UPDOWN_MASK) >> TCPWM_1_UPDOWN_SHIFT);
 962:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 963:.\Generated_Source\PSoC4/TCPWM_1.c ****         if (((uint32)TCPWM_1__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:.\Generated_Source\PSoC4/TCPWM_1.c ****         {
 965:.\Generated_Source\PSoC4/TCPWM_1.c ****             compareBuf++;
 966:.\Generated_Source\PSoC4/TCPWM_1.c ****         }
 967:.\Generated_Source\PSoC4/TCPWM_1.c ****         else if (((uint32)TCPWM_1__COUNT_UP == currentMode) && (0u != compareBuf))
 968:.\Generated_Source\PSoC4/TCPWM_1.c ****         {
 969:.\Generated_Source\PSoC4/TCPWM_1.c ****             compareBuf --;
 970:.\Generated_Source\PSoC4/TCPWM_1.c ****         }
 971:.\Generated_Source\PSoC4/TCPWM_1.c ****         else
 972:.\Generated_Source\PSoC4/TCPWM_1.c ****         {
 973:.\Generated_Source\PSoC4/TCPWM_1.c ****         }
 974:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 975:.\Generated_Source\PSoC4/TCPWM_1.c ****     
 976:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_COMP_CAP_BUF_REG = (compareBuf & TCPWM_1_16BIT_MASK);
 1209              		.loc 1 976 0
 1210 0008 034B     		ldr	r3, .L79
 1211 000a 7A68     		ldr	r2, [r7, #4]
 1212 000c 1204     		lsl	r2, r2, #16
 1213 000e 120C     		lsr	r2, r2, #16
 1214 0010 1A60     		str	r2, [r3]
 977:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1215              		.loc 1 977 0
 1216 0012 BD46     		mov	sp, r7
 1217 0014 02B0     		add	sp, sp, #8
 1218              		@ sp needed
 1219 0016 80BD     		pop	{r7, pc}
 1220              	.L80:
 1221              		.align	2
 1222              	.L79:
 1223 0018 10012040 		.word	1075839248
 1224              		.cfi_endproc
 1225              	.LFE26:
 1226              		.size	TCPWM_1_WriteCompareBuf, .-TCPWM_1_WriteCompareBuf
 1227              		.section	.text.TCPWM_1_ReadCompareBuf,"ax",%progbits
 1228              		.align	2
 1229              		.global	TCPWM_1_ReadCompareBuf
 1230              		.code	16
 1231              		.thumb_func
 1232              		.type	TCPWM_1_ReadCompareBuf, %function
 1233              	TCPWM_1_ReadCompareBuf:
 1234              	.LFB27:
 978:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 979:.\Generated_Source\PSoC4/TCPWM_1.c **** 
 980:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 981:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadCompareBuf
 982:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 983:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 984:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 985:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Capture or in Quadrature Decoder modes.
 987:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 988:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 989:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 40


 990:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 991:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 992:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Compare buffer value
 993:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 994:.\Generated_Source\PSoC4/TCPWM_1.c **** * Note:
 995:.\Generated_Source\PSoC4/TCPWM_1.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Down counting mode (except 0x0u).
 998:.\Generated_Source\PSoC4/TCPWM_1.c **** *
 999:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1000:.\Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadCompareBuf(void)
1001:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1235              		.loc 1 1001 0
 1236              		.cfi_startproc
 1237 0000 80B5     		push	{r7, lr}
 1238              		.cfi_def_cfa_offset 8
 1239              		.cfi_offset 7, -8
 1240              		.cfi_offset 14, -4
 1241 0002 00AF     		add	r7, sp, #0
 1242              		.cfi_def_cfa_register 7
1002:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
1003:.\Generated_Source\PSoC4/TCPWM_1.c ****         uint32 currentMode;
1004:.\Generated_Source\PSoC4/TCPWM_1.c ****         uint32 regVal;
1005:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
1006:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1007:.\Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
1008:.\Generated_Source\PSoC4/TCPWM_1.c ****         currentMode = ((TCPWM_1_CONTROL_REG & TCPWM_1_UPDOWN_MASK) >> TCPWM_1_UPDOWN_SHIFT);
1009:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1010:.\Generated_Source\PSoC4/TCPWM_1.c ****         regVal = TCPWM_1_COMP_CAP_BUF_REG;
1011:.\Generated_Source\PSoC4/TCPWM_1.c ****         
1012:.\Generated_Source\PSoC4/TCPWM_1.c ****         if (((uint32)TCPWM_1__COUNT_DOWN == currentMode) && (0u != regVal))
1013:.\Generated_Source\PSoC4/TCPWM_1.c ****         {
1014:.\Generated_Source\PSoC4/TCPWM_1.c ****             regVal--;
1015:.\Generated_Source\PSoC4/TCPWM_1.c ****         }
1016:.\Generated_Source\PSoC4/TCPWM_1.c ****         else if (((uint32)TCPWM_1__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:.\Generated_Source\PSoC4/TCPWM_1.c ****         {
1018:.\Generated_Source\PSoC4/TCPWM_1.c ****             regVal++;
1019:.\Generated_Source\PSoC4/TCPWM_1.c ****         }
1020:.\Generated_Source\PSoC4/TCPWM_1.c ****         else
1021:.\Generated_Source\PSoC4/TCPWM_1.c ****         {
1022:.\Generated_Source\PSoC4/TCPWM_1.c ****         }
1023:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1024:.\Generated_Source\PSoC4/TCPWM_1.c ****         return (regVal & TCPWM_1_16BIT_MASK);
1025:.\Generated_Source\PSoC4/TCPWM_1.c ****     #else
1026:.\Generated_Source\PSoC4/TCPWM_1.c ****         return (TCPWM_1_COMP_CAP_BUF_REG & TCPWM_1_16BIT_MASK);
 1243              		.loc 1 1026 0
 1244 0004 034B     		ldr	r3, .L83
 1245 0006 1B68     		ldr	r3, [r3]
 1246 0008 1B04     		lsl	r3, r3, #16
 1247 000a 1B0C     		lsr	r3, r3, #16
1027:.\Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
1028:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1248              		.loc 1 1028 0
 1249 000c 181C     		mov	r0, r3
 1250 000e BD46     		mov	sp, r7
 1251              		@ sp needed
 1252 0010 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 41


 1253              	.L84:
 1254 0012 C046     		.align	2
 1255              	.L83:
 1256 0014 10012040 		.word	1075839248
 1257              		.cfi_endproc
 1258              	.LFE27:
 1259              		.size	TCPWM_1_ReadCompareBuf, .-TCPWM_1_ReadCompareBuf
 1260              		.section	.text.TCPWM_1_ReadCapture,"ax",%progbits
 1261              		.align	2
 1262              		.global	TCPWM_1_ReadCapture
 1263              		.code	16
 1264              		.thumb_func
 1265              		.type	TCPWM_1_ReadCapture, %function
 1266              	TCPWM_1_ReadCapture:
 1267              	.LFB28:
1029:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1030:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1031:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1032:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadCapture
1033:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1034:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1035:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1036:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the captured counter value. This API is applicable only for
1037:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1039:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1040:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1041:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1042:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1043:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Capture value
1044:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1045:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1046:.\Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadCapture(void)
1047:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1268              		.loc 1 1047 0
 1269              		.cfi_startproc
 1270 0000 80B5     		push	{r7, lr}
 1271              		.cfi_def_cfa_offset 8
 1272              		.cfi_offset 7, -8
 1273              		.cfi_offset 14, -4
 1274 0002 00AF     		add	r7, sp, #0
 1275              		.cfi_def_cfa_register 7
1048:.\Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_COMP_CAP_REG & TCPWM_1_16BIT_MASK);
 1276              		.loc 1 1048 0
 1277 0004 034B     		ldr	r3, .L87
 1278 0006 1B68     		ldr	r3, [r3]
 1279 0008 1B04     		lsl	r3, r3, #16
 1280 000a 1B0C     		lsr	r3, r3, #16
1049:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1281              		.loc 1 1049 0
 1282 000c 181C     		mov	r0, r3
 1283 000e BD46     		mov	sp, r7
 1284              		@ sp needed
 1285 0010 80BD     		pop	{r7, pc}
 1286              	.L88:
 1287 0012 C046     		.align	2
 1288              	.L87:
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 42


 1289 0014 0C012040 		.word	1075839244
 1290              		.cfi_endproc
 1291              	.LFE28:
 1292              		.size	TCPWM_1_ReadCapture, .-TCPWM_1_ReadCapture
 1293              		.section	.text.TCPWM_1_ReadCaptureBuf,"ax",%progbits
 1294              		.align	2
 1295              		.global	TCPWM_1_ReadCaptureBuf
 1296              		.code	16
 1297              		.thumb_func
 1298              		.type	TCPWM_1_ReadCaptureBuf, %function
 1299              	TCPWM_1_ReadCaptureBuf:
 1300              	.LFB29:
1050:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1051:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1052:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1053:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadCaptureBuf
1054:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1055:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1056:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1057:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the capture buffer register. This API is applicable only for
1058:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1060:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1061:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1062:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1063:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1064:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Capture buffer value
1065:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1066:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1067:.\Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadCaptureBuf(void)
1068:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1301              		.loc 1 1068 0
 1302              		.cfi_startproc
 1303 0000 80B5     		push	{r7, lr}
 1304              		.cfi_def_cfa_offset 8
 1305              		.cfi_offset 7, -8
 1306              		.cfi_offset 14, -4
 1307 0002 00AF     		add	r7, sp, #0
 1308              		.cfi_def_cfa_register 7
1069:.\Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_COMP_CAP_BUF_REG & TCPWM_1_16BIT_MASK);
 1309              		.loc 1 1069 0
 1310 0004 034B     		ldr	r3, .L91
 1311 0006 1B68     		ldr	r3, [r3]
 1312 0008 1B04     		lsl	r3, r3, #16
 1313 000a 1B0C     		lsr	r3, r3, #16
1070:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1314              		.loc 1 1070 0
 1315 000c 181C     		mov	r0, r3
 1316 000e BD46     		mov	sp, r7
 1317              		@ sp needed
 1318 0010 80BD     		pop	{r7, pc}
 1319              	.L92:
 1320 0012 C046     		.align	2
 1321              	.L91:
 1322 0014 10012040 		.word	1075839248
 1323              		.cfi_endproc
 1324              	.LFE29:
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 43


 1325              		.size	TCPWM_1_ReadCaptureBuf, .-TCPWM_1_ReadCaptureBuf
 1326              		.section	.text.TCPWM_1_SetCaptureMode,"ax",%progbits
 1327              		.align	2
 1328              		.global	TCPWM_1_SetCaptureMode
 1329              		.code	16
 1330              		.thumb_func
 1331              		.type	TCPWM_1_SetCaptureMode, %function
 1332              	TCPWM_1_SetCaptureMode:
 1333              	.LFB30:
1071:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1072:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1073:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1074:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetCaptureMode
1075:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1076:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1077:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1078:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:.\Generated_Source\PSoC4/TCPWM_1.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Quadrature Decoder modes.
1081:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1082:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1083:.\Generated_Source\PSoC4/TCPWM_1.c **** *  triggerMode: Enumerated trigger mode value
1084:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1085:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_LEVEL     - Level
1086:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_RISING    - Rising edge
1087:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_FALLING   - Falling edge
1088:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_BOTH      - Both rising and falling edge
1089:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1090:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1091:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1092:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1093:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1094:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetCaptureMode(uint32 triggerMode)
1095:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1334              		.loc 1 1095 0
 1335              		.cfi_startproc
 1336 0000 90B5     		push	{r4, r7, lr}
 1337              		.cfi_def_cfa_offset 12
 1338              		.cfi_offset 4, -12
 1339              		.cfi_offset 7, -8
 1340              		.cfi_offset 14, -4
 1341 0002 85B0     		sub	sp, sp, #20
 1342              		.cfi_def_cfa_offset 32
 1343 0004 00AF     		add	r7, sp, #0
 1344              		.cfi_def_cfa_register 7
 1345 0006 7860     		str	r0, [r7, #4]
1096:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
1097:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1098:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1346              		.loc 1 1098 0
 1347 0008 0F23     		mov	r3, #15
 1348 000a FC18     		add	r4, r7, r3
 1349 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1350 0010 031C     		mov	r3, r0
 1351 0012 2370     		strb	r3, [r4]
1099:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1100:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG &= (uint32)~TCPWM_1_CAPTURE_MASK;
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 44


 1352              		.loc 1 1100 0
 1353 0014 0A4B     		ldr	r3, .L94
 1354 0016 0A4A     		ldr	r2, .L94
 1355 0018 1268     		ldr	r2, [r2]
 1356 001a 0321     		mov	r1, #3
 1357 001c 8A43     		bic	r2, r1
 1358 001e 1A60     		str	r2, [r3]
1101:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= triggerMode;
 1359              		.loc 1 1101 0
 1360 0020 074B     		ldr	r3, .L94
 1361 0022 074A     		ldr	r2, .L94
 1362 0024 1168     		ldr	r1, [r2]
 1363 0026 7A68     		ldr	r2, [r7, #4]
 1364 0028 0A43     		orr	r2, r1
 1365 002a 1A60     		str	r2, [r3]
1102:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1103:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1366              		.loc 1 1103 0
 1367 002c 0F23     		mov	r3, #15
 1368 002e FB18     		add	r3, r7, r3
 1369 0030 1B78     		ldrb	r3, [r3]
 1370 0032 181C     		mov	r0, r3
 1371 0034 FFF7FEFF 		bl	CyExitCriticalSection
1104:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1372              		.loc 1 1104 0
 1373 0038 BD46     		mov	sp, r7
 1374 003a 05B0     		add	sp, sp, #20
 1375              		@ sp needed
 1376 003c 90BD     		pop	{r4, r7, pc}
 1377              	.L95:
 1378 003e C046     		.align	2
 1379              	.L94:
 1380 0040 24012040 		.word	1075839268
 1381              		.cfi_endproc
 1382              	.LFE30:
 1383              		.size	TCPWM_1_SetCaptureMode, .-TCPWM_1_SetCaptureMode
 1384              		.section	.text.TCPWM_1_SetReloadMode,"ax",%progbits
 1385              		.align	2
 1386              		.global	TCPWM_1_SetReloadMode
 1387              		.code	16
 1388              		.thumb_func
 1389              		.type	TCPWM_1_SetReloadMode, %function
 1390              	TCPWM_1_SetReloadMode:
 1391              	.LFB31:
1105:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1106:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1107:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1108:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetReloadMode
1109:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1110:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1111:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1112:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:.\Generated_Source\PSoC4/TCPWM_1.c **** *  input.
1114:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1115:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1116:.\Generated_Source\PSoC4/TCPWM_1.c **** *  triggerMode: Enumerated trigger mode value
1117:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 45


1118:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_LEVEL     - Level
1119:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_RISING    - Rising edge
1120:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_FALLING   - Falling edge
1121:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_BOTH      - Both rising and falling edge
1122:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1123:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1124:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1125:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1126:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1127:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetReloadMode(uint32 triggerMode)
1128:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1392              		.loc 1 1128 0
 1393              		.cfi_startproc
 1394 0000 90B5     		push	{r4, r7, lr}
 1395              		.cfi_def_cfa_offset 12
 1396              		.cfi_offset 4, -12
 1397              		.cfi_offset 7, -8
 1398              		.cfi_offset 14, -4
 1399 0002 85B0     		sub	sp, sp, #20
 1400              		.cfi_def_cfa_offset 32
 1401 0004 00AF     		add	r7, sp, #0
 1402              		.cfi_def_cfa_register 7
 1403 0006 7860     		str	r0, [r7, #4]
1129:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
1130:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1131:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1404              		.loc 1 1131 0
 1405 0008 0F23     		mov	r3, #15
 1406 000a FC18     		add	r4, r7, r3
 1407 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1408 0010 031C     		mov	r3, r0
 1409 0012 2370     		strb	r3, [r4]
1132:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1133:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG &= (uint32)~TCPWM_1_RELOAD_MASK;
 1410              		.loc 1 1133 0
 1411 0014 0A4B     		ldr	r3, .L97
 1412 0016 0A4A     		ldr	r2, .L97
 1413 0018 1268     		ldr	r2, [r2]
 1414 001a 3021     		mov	r1, #48
 1415 001c 8A43     		bic	r2, r1
 1416 001e 1A60     		str	r2, [r3]
1134:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_1_RELOAD_SHIFT));
 1417              		.loc 1 1134 0
 1418 0020 074B     		ldr	r3, .L97
 1419 0022 074A     		ldr	r2, .L97
 1420 0024 1168     		ldr	r1, [r2]
 1421 0026 7A68     		ldr	r2, [r7, #4]
 1422 0028 1201     		lsl	r2, r2, #4
 1423 002a 0A43     		orr	r2, r1
 1424 002c 1A60     		str	r2, [r3]
1135:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1136:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1425              		.loc 1 1136 0
 1426 002e 0F23     		mov	r3, #15
 1427 0030 FB18     		add	r3, r7, r3
 1428 0032 1B78     		ldrb	r3, [r3]
 1429 0034 181C     		mov	r0, r3
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 46


 1430 0036 FFF7FEFF 		bl	CyExitCriticalSection
1137:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1431              		.loc 1 1137 0
 1432 003a BD46     		mov	sp, r7
 1433 003c 05B0     		add	sp, sp, #20
 1434              		@ sp needed
 1435 003e 90BD     		pop	{r4, r7, pc}
 1436              	.L98:
 1437              		.align	2
 1438              	.L97:
 1439 0040 24012040 		.word	1075839268
 1440              		.cfi_endproc
 1441              	.LFE31:
 1442              		.size	TCPWM_1_SetReloadMode, .-TCPWM_1_SetReloadMode
 1443              		.section	.text.TCPWM_1_SetStartMode,"ax",%progbits
 1444              		.align	2
 1445              		.global	TCPWM_1_SetStartMode
 1446              		.code	16
 1447              		.thumb_func
 1448              		.type	TCPWM_1_SetStartMode, %function
 1449              	TCPWM_1_SetStartMode:
 1450              	.LFB32:
1138:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1139:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1140:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1141:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetStartMode
1142:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1143:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1144:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1145:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:.\Generated_Source\PSoC4/TCPWM_1.c **** *  phiB input.
1147:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1148:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1149:.\Generated_Source\PSoC4/TCPWM_1.c **** *  triggerMode: Enumerated trigger mode value
1150:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1151:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_LEVEL     - Level
1152:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_RISING    - Rising edge
1153:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_FALLING   - Falling edge
1154:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_BOTH      - Both rising and falling edge
1155:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1156:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1157:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1158:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1159:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1160:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetStartMode(uint32 triggerMode)
1161:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1451              		.loc 1 1161 0
 1452              		.cfi_startproc
 1453 0000 90B5     		push	{r4, r7, lr}
 1454              		.cfi_def_cfa_offset 12
 1455              		.cfi_offset 4, -12
 1456              		.cfi_offset 7, -8
 1457              		.cfi_offset 14, -4
 1458 0002 85B0     		sub	sp, sp, #20
 1459              		.cfi_def_cfa_offset 32
 1460 0004 00AF     		add	r7, sp, #0
 1461              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 47


 1462 0006 7860     		str	r0, [r7, #4]
1162:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
1163:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1164:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1463              		.loc 1 1164 0
 1464 0008 0F23     		mov	r3, #15
 1465 000a FC18     		add	r4, r7, r3
 1466 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1467 0010 031C     		mov	r3, r0
 1468 0012 2370     		strb	r3, [r4]
1165:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1166:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG &= (uint32)~TCPWM_1_START_MASK;
 1469              		.loc 1 1166 0
 1470 0014 0A4B     		ldr	r3, .L100
 1471 0016 0A4A     		ldr	r2, .L100
 1472 0018 1268     		ldr	r2, [r2]
 1473 001a 0A49     		ldr	r1, .L100+4
 1474 001c 0A40     		and	r2, r1
 1475 001e 1A60     		str	r2, [r3]
1167:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_1_START_SHIFT));
 1476              		.loc 1 1167 0
 1477 0020 074B     		ldr	r3, .L100
 1478 0022 074A     		ldr	r2, .L100
 1479 0024 1168     		ldr	r1, [r2]
 1480 0026 7A68     		ldr	r2, [r7, #4]
 1481 0028 1202     		lsl	r2, r2, #8
 1482 002a 0A43     		orr	r2, r1
 1483 002c 1A60     		str	r2, [r3]
1168:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1169:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1484              		.loc 1 1169 0
 1485 002e 0F23     		mov	r3, #15
 1486 0030 FB18     		add	r3, r7, r3
 1487 0032 1B78     		ldrb	r3, [r3]
 1488 0034 181C     		mov	r0, r3
 1489 0036 FFF7FEFF 		bl	CyExitCriticalSection
1170:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1490              		.loc 1 1170 0
 1491 003a BD46     		mov	sp, r7
 1492 003c 05B0     		add	sp, sp, #20
 1493              		@ sp needed
 1494 003e 90BD     		pop	{r4, r7, pc}
 1495              	.L101:
 1496              		.align	2
 1497              	.L100:
 1498 0040 24012040 		.word	1075839268
 1499 0044 FFFCFFFF 		.word	-769
 1500              		.cfi_endproc
 1501              	.LFE32:
 1502              		.size	TCPWM_1_SetStartMode, .-TCPWM_1_SetStartMode
 1503              		.section	.text.TCPWM_1_SetStopMode,"ax",%progbits
 1504              		.align	2
 1505              		.global	TCPWM_1_SetStopMode
 1506              		.code	16
 1507              		.thumb_func
 1508              		.type	TCPWM_1_SetStopMode, %function
 1509              	TCPWM_1_SetStopMode:
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 48


 1510              	.LFB33:
1171:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1172:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1173:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1174:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetStopMode
1175:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1176:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1177:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1178:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1180:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1181:.\Generated_Source\PSoC4/TCPWM_1.c **** *  triggerMode: Enumerated trigger mode value
1182:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1183:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_LEVEL     - Level
1184:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_RISING    - Rising edge
1185:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_FALLING   - Falling edge
1186:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_BOTH      - Both rising and falling edge
1187:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1188:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1189:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1190:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1191:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1192:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetStopMode(uint32 triggerMode)
1193:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1511              		.loc 1 1193 0
 1512              		.cfi_startproc
 1513 0000 90B5     		push	{r4, r7, lr}
 1514              		.cfi_def_cfa_offset 12
 1515              		.cfi_offset 4, -12
 1516              		.cfi_offset 7, -8
 1517              		.cfi_offset 14, -4
 1518 0002 85B0     		sub	sp, sp, #20
 1519              		.cfi_def_cfa_offset 32
 1520 0004 00AF     		add	r7, sp, #0
 1521              		.cfi_def_cfa_register 7
 1522 0006 7860     		str	r0, [r7, #4]
1194:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
1195:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1196:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1523              		.loc 1 1196 0
 1524 0008 0F23     		mov	r3, #15
 1525 000a FC18     		add	r4, r7, r3
 1526 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1527 0010 031C     		mov	r3, r0
 1528 0012 2370     		strb	r3, [r4]
1197:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1198:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG &= (uint32)~TCPWM_1_STOP_MASK;
 1529              		.loc 1 1198 0
 1530 0014 0A4B     		ldr	r3, .L103
 1531 0016 0A4A     		ldr	r2, .L103
 1532 0018 1268     		ldr	r2, [r2]
 1533 001a C021     		mov	r1, #192
 1534 001c 8A43     		bic	r2, r1
 1535 001e 1A60     		str	r2, [r3]
1199:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_1_STOP_SHIFT));
 1536              		.loc 1 1199 0
 1537 0020 074B     		ldr	r3, .L103
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 49


 1538 0022 074A     		ldr	r2, .L103
 1539 0024 1168     		ldr	r1, [r2]
 1540 0026 7A68     		ldr	r2, [r7, #4]
 1541 0028 9201     		lsl	r2, r2, #6
 1542 002a 0A43     		orr	r2, r1
 1543 002c 1A60     		str	r2, [r3]
1200:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1201:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1544              		.loc 1 1201 0
 1545 002e 0F23     		mov	r3, #15
 1546 0030 FB18     		add	r3, r7, r3
 1547 0032 1B78     		ldrb	r3, [r3]
 1548 0034 181C     		mov	r0, r3
 1549 0036 FFF7FEFF 		bl	CyExitCriticalSection
1202:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1550              		.loc 1 1202 0
 1551 003a BD46     		mov	sp, r7
 1552 003c 05B0     		add	sp, sp, #20
 1553              		@ sp needed
 1554 003e 90BD     		pop	{r4, r7, pc}
 1555              	.L104:
 1556              		.align	2
 1557              	.L103:
 1558 0040 24012040 		.word	1075839268
 1559              		.cfi_endproc
 1560              	.LFE33:
 1561              		.size	TCPWM_1_SetStopMode, .-TCPWM_1_SetStopMode
 1562              		.section	.text.TCPWM_1_SetCountMode,"ax",%progbits
 1563              		.align	2
 1564              		.global	TCPWM_1_SetCountMode
 1565              		.code	16
 1566              		.thumb_func
 1567              		.type	TCPWM_1_SetCountMode, %function
 1568              	TCPWM_1_SetCountMode:
 1569              	.LFB34:
1203:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1204:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1205:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1206:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetCountMode
1207:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1208:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1209:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1210:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:.\Generated_Source\PSoC4/TCPWM_1.c **** *  input.
1212:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1213:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1214:.\Generated_Source\PSoC4/TCPWM_1.c **** *  triggerMode: Enumerated trigger mode value
1215:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1216:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_LEVEL     - Level
1217:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_RISING    - Rising edge
1218:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_FALLING   - Falling edge
1219:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_BOTH      - Both rising and falling edge
1220:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1221:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1222:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1223:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1224:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 50


1225:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetCountMode(uint32 triggerMode)
1226:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1570              		.loc 1 1226 0
 1571              		.cfi_startproc
 1572 0000 90B5     		push	{r4, r7, lr}
 1573              		.cfi_def_cfa_offset 12
 1574              		.cfi_offset 4, -12
 1575              		.cfi_offset 7, -8
 1576              		.cfi_offset 14, -4
 1577 0002 85B0     		sub	sp, sp, #20
 1578              		.cfi_def_cfa_offset 32
 1579 0004 00AF     		add	r7, sp, #0
 1580              		.cfi_def_cfa_register 7
 1581 0006 7860     		str	r0, [r7, #4]
1227:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
1228:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1229:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1582              		.loc 1 1229 0
 1583 0008 0F23     		mov	r3, #15
 1584 000a FC18     		add	r4, r7, r3
 1585 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1586 0010 031C     		mov	r3, r0
 1587 0012 2370     		strb	r3, [r4]
1230:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1231:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG &= (uint32)~TCPWM_1_COUNT_MASK;
 1588              		.loc 1 1231 0
 1589 0014 0A4B     		ldr	r3, .L106
 1590 0016 0A4A     		ldr	r2, .L106
 1591 0018 1268     		ldr	r2, [r2]
 1592 001a 0C21     		mov	r1, #12
 1593 001c 8A43     		bic	r2, r1
 1594 001e 1A60     		str	r2, [r3]
1232:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_1_COUNT_SHIFT));
 1595              		.loc 1 1232 0
 1596 0020 074B     		ldr	r3, .L106
 1597 0022 074A     		ldr	r2, .L106
 1598 0024 1168     		ldr	r1, [r2]
 1599 0026 7A68     		ldr	r2, [r7, #4]
 1600 0028 9200     		lsl	r2, r2, #2
 1601 002a 0A43     		orr	r2, r1
 1602 002c 1A60     		str	r2, [r3]
1233:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1234:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1603              		.loc 1 1234 0
 1604 002e 0F23     		mov	r3, #15
 1605 0030 FB18     		add	r3, r7, r3
 1606 0032 1B78     		ldrb	r3, [r3]
 1607 0034 181C     		mov	r0, r3
 1608 0036 FFF7FEFF 		bl	CyExitCriticalSection
1235:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1609              		.loc 1 1235 0
 1610 003a BD46     		mov	sp, r7
 1611 003c 05B0     		add	sp, sp, #20
 1612              		@ sp needed
 1613 003e 90BD     		pop	{r4, r7, pc}
 1614              	.L107:
 1615              		.align	2
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 51


 1616              	.L106:
 1617 0040 24012040 		.word	1075839268
 1618              		.cfi_endproc
 1619              	.LFE34:
 1620              		.size	TCPWM_1_SetCountMode, .-TCPWM_1_SetCountMode
 1621              		.section	.text.TCPWM_1_TriggerCommand,"ax",%progbits
 1622              		.align	2
 1623              		.global	TCPWM_1_TriggerCommand
 1624              		.code	16
 1625              		.thumb_func
 1626              		.type	TCPWM_1_TriggerCommand, %function
 1627              	TCPWM_1_TriggerCommand:
 1628              	.LFB35:
1236:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1237:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1238:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1239:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_TriggerCommand
1240:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1241:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1242:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1243:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:.\Generated_Source\PSoC4/TCPWM_1.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:.\Generated_Source\PSoC4/TCPWM_1.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1247:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1248:.\Generated_Source\PSoC4/TCPWM_1.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:.\Generated_Source\PSoC4/TCPWM_1.c **** *        command should apply to.  This function from one instance can be used
1250:.\Generated_Source\PSoC4/TCPWM_1.c **** *        to apply the command to any of the instances in the design.
1251:.\Generated_Source\PSoC4/TCPWM_1.c **** *        The mask value for a specific instance is available with the MASK
1252:.\Generated_Source\PSoC4/TCPWM_1.c **** *        define.
1253:.\Generated_Source\PSoC4/TCPWM_1.c **** *  command: Enumerated command values. Capture command only applicable for
1254:.\Generated_Source\PSoC4/TCPWM_1.c **** *           Timer/Counter with Capture and PWM modes.
1255:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1256:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_CMD_CAPTURE    - Trigger Capture/Switch command
1257:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_CMD_RELOAD     - Trigger Reload/Index command
1258:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_CMD_STOP       - Trigger Stop/Kill command
1259:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_CMD_START      - Trigger Start/phiB command
1260:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1261:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1262:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1263:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1264:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1265:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_TriggerCommand(uint32 mask, uint32 command)
1266:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1629              		.loc 1 1266 0
 1630              		.cfi_startproc
 1631 0000 90B5     		push	{r4, r7, lr}
 1632              		.cfi_def_cfa_offset 12
 1633              		.cfi_offset 4, -12
 1634              		.cfi_offset 7, -8
 1635              		.cfi_offset 14, -4
 1636 0002 85B0     		sub	sp, sp, #20
 1637              		.cfi_def_cfa_offset 32
 1638 0004 00AF     		add	r7, sp, #0
 1639              		.cfi_def_cfa_register 7
 1640 0006 7860     		str	r0, [r7, #4]
 1641 0008 3960     		str	r1, [r7]
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 52


1267:.\Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
1268:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1269:.\Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1642              		.loc 1 1269 0
 1643 000a 0F23     		mov	r3, #15
 1644 000c FC18     		add	r4, r7, r3
 1645 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1646 0012 031C     		mov	r3, r0
 1647 0014 2370     		strb	r3, [r4]
1270:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1271:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_COMMAND_REG = ((uint32)(mask << command));
 1648              		.loc 1 1271 0
 1649 0016 074B     		ldr	r3, .L109
 1650 0018 3A68     		ldr	r2, [r7]
 1651 001a 7968     		ldr	r1, [r7, #4]
 1652 001c 9140     		lsl	r1, r1, r2
 1653 001e 0A1C     		mov	r2, r1
 1654 0020 1A60     		str	r2, [r3]
1272:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1273:.\Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1655              		.loc 1 1273 0
 1656 0022 0F23     		mov	r3, #15
 1657 0024 FB18     		add	r3, r7, r3
 1658 0026 1B78     		ldrb	r3, [r3]
 1659 0028 181C     		mov	r0, r3
 1660 002a FFF7FEFF 		bl	CyExitCriticalSection
1274:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1661              		.loc 1 1274 0
 1662 002e BD46     		mov	sp, r7
 1663 0030 05B0     		add	sp, sp, #20
 1664              		@ sp needed
 1665 0032 90BD     		pop	{r4, r7, pc}
 1666              	.L110:
 1667              		.align	2
 1668              	.L109:
 1669 0034 08002040 		.word	1075838984
 1670              		.cfi_endproc
 1671              	.LFE35:
 1672              		.size	TCPWM_1_TriggerCommand, .-TCPWM_1_TriggerCommand
 1673              		.section	.text.TCPWM_1_ReadStatus,"ax",%progbits
 1674              		.align	2
 1675              		.global	TCPWM_1_ReadStatus
 1676              		.code	16
 1677              		.thumb_func
 1678              		.type	TCPWM_1_ReadStatus, %function
 1679              	TCPWM_1_ReadStatus:
 1680              	.LFB36:
1275:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1276:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1277:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1278:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadStatus
1279:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1280:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1281:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1282:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the status of the TCPWM_1.
1283:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1284:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 53


1285:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1286:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1287:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1288:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Status
1289:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1290:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_STATUS_DOWN    - Set if counting down
1291:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_STATUS_RUNNING - Set if counter is running
1292:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1293:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1294:.\Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadStatus(void)
1295:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1681              		.loc 1 1295 0
 1682              		.cfi_startproc
 1683 0000 80B5     		push	{r7, lr}
 1684              		.cfi_def_cfa_offset 8
 1685              		.cfi_offset 7, -8
 1686              		.cfi_offset 14, -4
 1687 0002 00AF     		add	r7, sp, #0
 1688              		.cfi_def_cfa_register 7
1296:.\Generated_Source\PSoC4/TCPWM_1.c ****     return ((TCPWM_1_STATUS_REG >> TCPWM_1_RUNNING_STATUS_SHIFT) |
 1689              		.loc 1 1296 0
 1690 0004 054B     		ldr	r3, .L113
 1691 0006 1B68     		ldr	r3, [r3]
 1692 0008 9A0F     		lsr	r2, r3, #30
1297:.\Generated_Source\PSoC4/TCPWM_1.c ****             (TCPWM_1_STATUS_REG & TCPWM_1_STATUS_DOWN));
 1693              		.loc 1 1297 0
 1694 000a 044B     		ldr	r3, .L113
 1695 000c 1B68     		ldr	r3, [r3]
 1696 000e 0121     		mov	r1, #1
 1697 0010 0B40     		and	r3, r1
1296:.\Generated_Source\PSoC4/TCPWM_1.c ****     return ((TCPWM_1_STATUS_REG >> TCPWM_1_RUNNING_STATUS_SHIFT) |
 1698              		.loc 1 1296 0
 1699 0012 1343     		orr	r3, r2
1298:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1700              		.loc 1 1298 0
 1701 0014 181C     		mov	r0, r3
 1702 0016 BD46     		mov	sp, r7
 1703              		@ sp needed
 1704 0018 80BD     		pop	{r7, pc}
 1705              	.L114:
 1706 001a C046     		.align	2
 1707              	.L113:
 1708 001c 04012040 		.word	1075839236
 1709              		.cfi_endproc
 1710              	.LFE36:
 1711              		.size	TCPWM_1_ReadStatus, .-TCPWM_1_ReadStatus
 1712              		.section	.text.TCPWM_1_SetInterruptMode,"ax",%progbits
 1713              		.align	2
 1714              		.global	TCPWM_1_SetInterruptMode
 1715              		.code	16
 1716              		.thumb_func
 1717              		.type	TCPWM_1_SetInterruptMode, %function
 1718              	TCPWM_1_SetInterruptMode:
 1719              	.LFB37:
1299:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1300:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1301:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 54


1302:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetInterruptMode
1303:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1304:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1305:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1306:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the interrupt mask to control which interrupt
1307:.\Generated_Source\PSoC4/TCPWM_1.c **** *  requests generate the interrupt signal.
1308:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1309:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1310:.\Generated_Source\PSoC4/TCPWM_1.c **** *   interruptMask: Mask of bits to be enabled
1311:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1312:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_TC       - Terminal count mask
1313:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1315:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1316:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1317:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1318:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1319:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetInterruptMode(uint32 interruptMask)
1320:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1720              		.loc 1 1320 0
 1721              		.cfi_startproc
 1722 0000 80B5     		push	{r7, lr}
 1723              		.cfi_def_cfa_offset 8
 1724              		.cfi_offset 7, -8
 1725              		.cfi_offset 14, -4
 1726 0002 82B0     		sub	sp, sp, #8
 1727              		.cfi_def_cfa_offset 16
 1728 0004 00AF     		add	r7, sp, #0
 1729              		.cfi_def_cfa_register 7
 1730 0006 7860     		str	r0, [r7, #4]
1321:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_INTERRUPT_MASK_REG =  interruptMask;
 1731              		.loc 1 1321 0
 1732 0008 024B     		ldr	r3, .L116
 1733 000a 7A68     		ldr	r2, [r7, #4]
 1734 000c 1A60     		str	r2, [r3]
1322:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1735              		.loc 1 1322 0
 1736 000e BD46     		mov	sp, r7
 1737 0010 02B0     		add	sp, sp, #8
 1738              		@ sp needed
 1739 0012 80BD     		pop	{r7, pc}
 1740              	.L117:
 1741              		.align	2
 1742              	.L116:
 1743 0014 38012040 		.word	1075839288
 1744              		.cfi_endproc
 1745              	.LFE37:
 1746              		.size	TCPWM_1_SetInterruptMode, .-TCPWM_1_SetInterruptMode
 1747              		.section	.text.TCPWM_1_GetInterruptSourceMasked,"ax",%progbits
 1748              		.align	2
 1749              		.global	TCPWM_1_GetInterruptSourceMasked
 1750              		.code	16
 1751              		.thumb_func
 1752              		.type	TCPWM_1_GetInterruptSourceMasked, %function
 1753              	TCPWM_1_GetInterruptSourceMasked:
 1754              	.LFB38:
1323:.\Generated_Source\PSoC4/TCPWM_1.c **** 
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 55


1324:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1325:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1326:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_GetInterruptSourceMasked
1327:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1328:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1329:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1330:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1332:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1333:.\Generated_Source\PSoC4/TCPWM_1.c **** *   None
1334:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1335:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1336:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Masked interrupt source
1337:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1338:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_TC       - Terminal count mask
1339:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1341:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1342:.\Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_GetInterruptSourceMasked(void)
1343:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1755              		.loc 1 1343 0
 1756              		.cfi_startproc
 1757 0000 80B5     		push	{r7, lr}
 1758              		.cfi_def_cfa_offset 8
 1759              		.cfi_offset 7, -8
 1760              		.cfi_offset 14, -4
 1761 0002 00AF     		add	r7, sp, #0
 1762              		.cfi_def_cfa_register 7
1344:.\Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_INTERRUPT_MASKED_REG);
 1763              		.loc 1 1344 0
 1764 0004 024B     		ldr	r3, .L120
 1765 0006 1B68     		ldr	r3, [r3]
1345:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1766              		.loc 1 1345 0
 1767 0008 181C     		mov	r0, r3
 1768 000a BD46     		mov	sp, r7
 1769              		@ sp needed
 1770 000c 80BD     		pop	{r7, pc}
 1771              	.L121:
 1772 000e C046     		.align	2
 1773              	.L120:
 1774 0010 3C012040 		.word	1075839292
 1775              		.cfi_endproc
 1776              	.LFE38:
 1777              		.size	TCPWM_1_GetInterruptSourceMasked, .-TCPWM_1_GetInterruptSourceMasked
 1778              		.section	.text.TCPWM_1_GetInterruptSource,"ax",%progbits
 1779              		.align	2
 1780              		.global	TCPWM_1_GetInterruptSource
 1781              		.code	16
 1782              		.thumb_func
 1783              		.type	TCPWM_1_GetInterruptSource, %function
 1784              	TCPWM_1_GetInterruptSource:
 1785              	.LFB39:
1346:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1347:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1348:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1349:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_GetInterruptSource
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 56


1350:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1351:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1352:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1353:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Gets the interrupt requests (without masking).
1354:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1355:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1356:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1357:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1358:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1359:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Interrupt request value
1360:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1361:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_TC       - Terminal count mask
1362:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1364:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1365:.\Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_GetInterruptSource(void)
1366:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1786              		.loc 1 1366 0
 1787              		.cfi_startproc
 1788 0000 80B5     		push	{r7, lr}
 1789              		.cfi_def_cfa_offset 8
 1790              		.cfi_offset 7, -8
 1791              		.cfi_offset 14, -4
 1792 0002 00AF     		add	r7, sp, #0
 1793              		.cfi_def_cfa_register 7
1367:.\Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_INTERRUPT_REQ_REG);
 1794              		.loc 1 1367 0
 1795 0004 024B     		ldr	r3, .L124
 1796 0006 1B68     		ldr	r3, [r3]
1368:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1797              		.loc 1 1368 0
 1798 0008 181C     		mov	r0, r3
 1799 000a BD46     		mov	sp, r7
 1800              		@ sp needed
 1801 000c 80BD     		pop	{r7, pc}
 1802              	.L125:
 1803 000e C046     		.align	2
 1804              	.L124:
 1805 0010 30012040 		.word	1075839280
 1806              		.cfi_endproc
 1807              	.LFE39:
 1808              		.size	TCPWM_1_GetInterruptSource, .-TCPWM_1_GetInterruptSource
 1809              		.section	.text.TCPWM_1_ClearInterrupt,"ax",%progbits
 1810              		.align	2
 1811              		.global	TCPWM_1_ClearInterrupt
 1812              		.code	16
 1813              		.thumb_func
 1814              		.type	TCPWM_1_ClearInterrupt, %function
 1815              	TCPWM_1_ClearInterrupt:
 1816              	.LFB40:
1369:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1370:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1371:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1372:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ClearInterrupt
1373:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1374:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1375:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 57


1376:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Clears the interrupt request.
1377:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1378:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1379:.\Generated_Source\PSoC4/TCPWM_1.c **** *   interruptMask: Mask of interrupts to clear
1380:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1381:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_TC       - Terminal count mask
1382:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1384:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1385:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1386:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1387:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1388:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_ClearInterrupt(uint32 interruptMask)
1389:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1817              		.loc 1 1389 0
 1818              		.cfi_startproc
 1819 0000 80B5     		push	{r7, lr}
 1820              		.cfi_def_cfa_offset 8
 1821              		.cfi_offset 7, -8
 1822              		.cfi_offset 14, -4
 1823 0002 82B0     		sub	sp, sp, #8
 1824              		.cfi_def_cfa_offset 16
 1825 0004 00AF     		add	r7, sp, #0
 1826              		.cfi_def_cfa_register 7
 1827 0006 7860     		str	r0, [r7, #4]
1390:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_INTERRUPT_REQ_REG = interruptMask;
 1828              		.loc 1 1390 0
 1829 0008 024B     		ldr	r3, .L127
 1830 000a 7A68     		ldr	r2, [r7, #4]
 1831 000c 1A60     		str	r2, [r3]
1391:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1832              		.loc 1 1391 0
 1833 000e BD46     		mov	sp, r7
 1834 0010 02B0     		add	sp, sp, #8
 1835              		@ sp needed
 1836 0012 80BD     		pop	{r7, pc}
 1837              	.L128:
 1838              		.align	2
 1839              	.L127:
 1840 0014 30012040 		.word	1075839280
 1841              		.cfi_endproc
 1842              	.LFE40:
 1843              		.size	TCPWM_1_ClearInterrupt, .-TCPWM_1_ClearInterrupt
 1844              		.section	.text.TCPWM_1_SetInterrupt,"ax",%progbits
 1845              		.align	2
 1846              		.global	TCPWM_1_SetInterrupt
 1847              		.code	16
 1848              		.thumb_func
 1849              		.type	TCPWM_1_SetInterrupt, %function
 1850              	TCPWM_1_SetInterrupt:
 1851              	.LFB41:
1392:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1393:.\Generated_Source\PSoC4/TCPWM_1.c **** 
1394:.\Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1395:.\Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetInterrupt
1396:.\Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1397:.\Generated_Source\PSoC4/TCPWM_1.c **** *
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 58


1398:.\Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1399:.\Generated_Source\PSoC4/TCPWM_1.c **** *  Sets a software interrupt request.
1400:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1401:.\Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1402:.\Generated_Source\PSoC4/TCPWM_1.c **** *   interruptMask: Mask of interrupts to set
1403:.\Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1404:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_TC       - Terminal count mask
1405:.\Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1407:.\Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1408:.\Generated_Source\PSoC4/TCPWM_1.c **** *  None
1409:.\Generated_Source\PSoC4/TCPWM_1.c **** *
1410:.\Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1411:.\Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetInterrupt(uint32 interruptMask)
1412:.\Generated_Source\PSoC4/TCPWM_1.c **** {
 1852              		.loc 1 1412 0
 1853              		.cfi_startproc
 1854 0000 80B5     		push	{r7, lr}
 1855              		.cfi_def_cfa_offset 8
 1856              		.cfi_offset 7, -8
 1857              		.cfi_offset 14, -4
 1858 0002 82B0     		sub	sp, sp, #8
 1859              		.cfi_def_cfa_offset 16
 1860 0004 00AF     		add	r7, sp, #0
 1861              		.cfi_def_cfa_register 7
 1862 0006 7860     		str	r0, [r7, #4]
1413:.\Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_INTERRUPT_SET_REG = interruptMask;
 1863              		.loc 1 1413 0
 1864 0008 024B     		ldr	r3, .L130
 1865 000a 7A68     		ldr	r2, [r7, #4]
 1866 000c 1A60     		str	r2, [r3]
1414:.\Generated_Source\PSoC4/TCPWM_1.c **** }
 1867              		.loc 1 1414 0
 1868 000e BD46     		mov	sp, r7
 1869 0010 02B0     		add	sp, sp, #8
 1870              		@ sp needed
 1871 0012 80BD     		pop	{r7, pc}
 1872              	.L131:
 1873              		.align	2
 1874              	.L130:
 1875 0014 34012040 		.word	1075839284
 1876              		.cfi_endproc
 1877              	.LFE41:
 1878              		.size	TCPWM_1_SetInterrupt, .-TCPWM_1_SetInterrupt
 1879              		.text
 1880              	.Letext0:
 1881              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1882              		.section	.debug_info,"",%progbits
 1883              	.Ldebug_info0:
 1884 0000 F0060000 		.4byte	0x6f0
 1885 0004 0400     		.2byte	0x4
 1886 0006 00000000 		.4byte	.Ldebug_abbrev0
 1887 000a 04       		.byte	0x4
 1888 000b 01       		.uleb128 0x1
 1889 000c 04050000 		.4byte	.LASF76
 1890 0010 01       		.byte	0x1
 1891 0011 FB010000 		.4byte	.LASF77
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 59


 1892 0015 C2030000 		.4byte	.LASF78
 1893 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1894 001d 00000000 		.4byte	0
 1895 0021 00000000 		.4byte	.Ldebug_line0
 1896 0025 02       		.uleb128 0x2
 1897 0026 01       		.byte	0x1
 1898 0027 06       		.byte	0x6
 1899 0028 D3000000 		.4byte	.LASF0
 1900 002c 02       		.uleb128 0x2
 1901 002d 01       		.byte	0x1
 1902 002e 08       		.byte	0x8
 1903 002f 53030000 		.4byte	.LASF1
 1904 0033 02       		.uleb128 0x2
 1905 0034 02       		.byte	0x2
 1906 0035 05       		.byte	0x5
 1907 0036 A2030000 		.4byte	.LASF2
 1908 003a 02       		.uleb128 0x2
 1909 003b 02       		.byte	0x2
 1910 003c 07       		.byte	0x7
 1911 003d 1E020000 		.4byte	.LASF3
 1912 0041 02       		.uleb128 0x2
 1913 0042 04       		.byte	0x4
 1914 0043 05       		.byte	0x5
 1915 0044 FA000000 		.4byte	.LASF4
 1916 0048 02       		.uleb128 0x2
 1917 0049 04       		.byte	0x4
 1918 004a 07       		.byte	0x7
 1919 004b E0010000 		.4byte	.LASF5
 1920 004f 02       		.uleb128 0x2
 1921 0050 08       		.byte	0x8
 1922 0051 05       		.byte	0x5
 1923 0052 C5000000 		.4byte	.LASF6
 1924 0056 02       		.uleb128 0x2
 1925 0057 08       		.byte	0x8
 1926 0058 07       		.byte	0x7
 1927 0059 7A000000 		.4byte	.LASF7
 1928 005d 03       		.uleb128 0x3
 1929 005e 04       		.byte	0x4
 1930 005f 05       		.byte	0x5
 1931 0060 696E7400 		.ascii	"int\000"
 1932 0064 02       		.uleb128 0x2
 1933 0065 04       		.byte	0x4
 1934 0066 07       		.byte	0x7
 1935 0067 B4010000 		.4byte	.LASF8
 1936 006b 04       		.uleb128 0x4
 1937 006c 1B010000 		.4byte	.LASF9
 1938 0070 02       		.byte	0x2
 1939 0071 3801     		.2byte	0x138
 1940 0073 2C000000 		.4byte	0x2c
 1941 0077 04       		.uleb128 0x4
 1942 0078 3F010000 		.4byte	.LASF10
 1943 007c 02       		.byte	0x2
 1944 007d 3A01     		.2byte	0x13a
 1945 007f 48000000 		.4byte	0x48
 1946 0083 02       		.uleb128 0x2
 1947 0084 04       		.byte	0x4
 1948 0085 04       		.byte	0x4
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 60


 1949 0086 0A030000 		.4byte	.LASF11
 1950 008a 02       		.uleb128 0x2
 1951 008b 08       		.byte	0x8
 1952 008c 04       		.byte	0x4
 1953 008d 38010000 		.4byte	.LASF12
 1954 0091 02       		.uleb128 0x2
 1955 0092 01       		.byte	0x1
 1956 0093 08       		.byte	0x8
 1957 0094 29040000 		.4byte	.LASF13
 1958 0098 04       		.uleb128 0x4
 1959 0099 67020000 		.4byte	.LASF14
 1960 009d 02       		.byte	0x2
 1961 009e E401     		.2byte	0x1e4
 1962 00a0 A4000000 		.4byte	0xa4
 1963 00a4 05       		.uleb128 0x5
 1964 00a5 77000000 		.4byte	0x77
 1965 00a9 02       		.uleb128 0x2
 1966 00aa 04       		.byte	0x4
 1967 00ab 07       		.byte	0x7
 1968 00ac 90020000 		.4byte	.LASF15
 1969 00b0 06       		.uleb128 0x6
 1970 00b1 A8020000 		.4byte	.LASF16
 1971 00b5 01       		.byte	0x1
 1972 00b6 26       		.byte	0x26
 1973 00b7 00000000 		.4byte	.LFB2
 1974 00bb 30000000 		.4byte	.LFE2-.LFB2
 1975 00bf 01       		.uleb128 0x1
 1976 00c0 9C       		.byte	0x9c
 1977 00c1 07       		.uleb128 0x7
 1978 00c2 81020000 		.4byte	.LASF18
 1979 00c6 01       		.byte	0x1
 1980 00c7 B1       		.byte	0xb1
 1981 00c8 00000000 		.4byte	.LFB3
 1982 00cc 38000000 		.4byte	.LFE3-.LFB3
 1983 00d0 01       		.uleb128 0x1
 1984 00d1 9C       		.byte	0x9c
 1985 00d2 E5000000 		.4byte	0xe5
 1986 00d6 08       		.uleb128 0x8
 1987 00d7 89040000 		.4byte	.LASF20
 1988 00db 01       		.byte	0x1
 1989 00dc B3       		.byte	0xb3
 1990 00dd 6B000000 		.4byte	0x6b
 1991 00e1 02       		.uleb128 0x2
 1992 00e2 91       		.byte	0x91
 1993 00e3 6F       		.sleb128 -17
 1994 00e4 00       		.byte	0
 1995 00e5 06       		.uleb128 0x6
 1996 00e6 E7020000 		.4byte	.LASF17
 1997 00ea 01       		.byte	0x1
 1998 00eb E6       		.byte	0xe6
 1999 00ec 00000000 		.4byte	.LFB4
 2000 00f0 24000000 		.4byte	.LFE4-.LFB4
 2001 00f4 01       		.uleb128 0x1
 2002 00f5 9C       		.byte	0x9c
 2003 00f6 09       		.uleb128 0x9
 2004 00f7 A1000000 		.4byte	.LASF19
 2005 00fb 01       		.byte	0x1
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 61


 2006 00fc 0001     		.2byte	0x100
 2007 00fe 00000000 		.4byte	.LFB5
 2008 0102 30000000 		.4byte	.LFE5-.LFB5
 2009 0106 01       		.uleb128 0x1
 2010 0107 9C       		.byte	0x9c
 2011 0108 1C010000 		.4byte	0x11c
 2012 010c 0A       		.uleb128 0xa
 2013 010d 89040000 		.4byte	.LASF20
 2014 0111 01       		.byte	0x1
 2015 0112 0201     		.2byte	0x102
 2016 0114 6B000000 		.4byte	0x6b
 2017 0118 02       		.uleb128 0x2
 2018 0119 91       		.byte	0x91
 2019 011a 6F       		.sleb128 -17
 2020 011b 00       		.byte	0
 2021 011c 09       		.uleb128 0x9
 2022 011d 2E000000 		.4byte	.LASF21
 2023 0121 01       		.byte	0x1
 2024 0122 2501     		.2byte	0x125
 2025 0124 00000000 		.4byte	.LFB6
 2026 0128 48000000 		.4byte	.LFE6-.LFB6
 2027 012c 01       		.uleb128 0x1
 2028 012d 9C       		.byte	0x9c
 2029 012e 51010000 		.4byte	0x151
 2030 0132 0B       		.uleb128 0xb
 2031 0133 2E040000 		.4byte	.LASF23
 2032 0137 01       		.byte	0x1
 2033 0138 2501     		.2byte	0x125
 2034 013a 77000000 		.4byte	0x77
 2035 013e 02       		.uleb128 0x2
 2036 013f 91       		.byte	0x91
 2037 0140 64       		.sleb128 -28
 2038 0141 0A       		.uleb128 0xa
 2039 0142 89040000 		.4byte	.LASF20
 2040 0146 01       		.byte	0x1
 2041 0147 2701     		.2byte	0x127
 2042 0149 6B000000 		.4byte	0x6b
 2043 014d 02       		.uleb128 0x2
 2044 014e 91       		.byte	0x91
 2045 014f 6F       		.sleb128 -17
 2046 0150 00       		.byte	0
 2047 0151 09       		.uleb128 0x9
 2048 0152 3E000000 		.4byte	.LASF22
 2049 0156 01       		.byte	0x1
 2050 0157 4601     		.2byte	0x146
 2051 0159 00000000 		.4byte	.LFB7
 2052 015d 48000000 		.4byte	.LFE7-.LFB7
 2053 0161 01       		.uleb128 0x1
 2054 0162 9C       		.byte	0x9c
 2055 0163 86010000 		.4byte	0x186
 2056 0167 0B       		.uleb128 0xb
 2057 0168 F3000000 		.4byte	.LASF24
 2058 016c 01       		.byte	0x1
 2059 016d 4601     		.2byte	0x146
 2060 016f 77000000 		.4byte	0x77
 2061 0173 02       		.uleb128 0x2
 2062 0174 91       		.byte	0x91
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 62


 2063 0175 64       		.sleb128 -28
 2064 0176 0A       		.uleb128 0xa
 2065 0177 89040000 		.4byte	.LASF20
 2066 017b 01       		.byte	0x1
 2067 017c 4801     		.2byte	0x148
 2068 017e 6B000000 		.4byte	0x6b
 2069 0182 02       		.uleb128 0x2
 2070 0183 91       		.byte	0x91
 2071 0184 6F       		.sleb128 -17
 2072 0185 00       		.byte	0
 2073 0186 09       		.uleb128 0x9
 2074 0187 50000000 		.4byte	.LASF25
 2075 018b 01       		.byte	0x1
 2076 018c 6B01     		.2byte	0x16b
 2077 018e 00000000 		.4byte	.LFB8
 2078 0192 48000000 		.4byte	.LFE8-.LFB8
 2079 0196 01       		.uleb128 0x1
 2080 0197 9C       		.byte	0x9c
 2081 0198 BB010000 		.4byte	0x1bb
 2082 019c 0B       		.uleb128 0xb
 2083 019d 1E030000 		.4byte	.LASF26
 2084 01a1 01       		.byte	0x1
 2085 01a2 6B01     		.2byte	0x16b
 2086 01a4 77000000 		.4byte	0x77
 2087 01a8 02       		.uleb128 0x2
 2088 01a9 91       		.byte	0x91
 2089 01aa 64       		.sleb128 -28
 2090 01ab 0A       		.uleb128 0xa
 2091 01ac 89040000 		.4byte	.LASF20
 2092 01b0 01       		.byte	0x1
 2093 01b1 6D01     		.2byte	0x16d
 2094 01b3 6B000000 		.4byte	0x6b
 2095 01b7 02       		.uleb128 0x2
 2096 01b8 91       		.byte	0x91
 2097 01b9 6F       		.sleb128 -17
 2098 01ba 00       		.byte	0
 2099 01bb 09       		.uleb128 0x9
 2100 01bc 54020000 		.4byte	.LASF27
 2101 01c0 01       		.byte	0x1
 2102 01c1 8B01     		.2byte	0x18b
 2103 01c3 00000000 		.4byte	.LFB9
 2104 01c7 4C000000 		.4byte	.LFE9-.LFB9
 2105 01cb 01       		.uleb128 0x1
 2106 01cc 9C       		.byte	0x9c
 2107 01cd F0010000 		.4byte	0x1f0
 2108 01d1 0B       		.uleb128 0xb
 2109 01d2 31020000 		.4byte	.LASF28
 2110 01d6 01       		.byte	0x1
 2111 01d7 8B01     		.2byte	0x18b
 2112 01d9 77000000 		.4byte	0x77
 2113 01dd 02       		.uleb128 0x2
 2114 01de 91       		.byte	0x91
 2115 01df 64       		.sleb128 -28
 2116 01e0 0A       		.uleb128 0xa
 2117 01e1 89040000 		.4byte	.LASF20
 2118 01e5 01       		.byte	0x1
 2119 01e6 8D01     		.2byte	0x18d
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 63


 2120 01e8 6B000000 		.4byte	0x6b
 2121 01ec 02       		.uleb128 0x2
 2122 01ed 91       		.byte	0x91
 2123 01ee 6F       		.sleb128 -17
 2124 01ef 00       		.byte	0
 2125 01f0 0C       		.uleb128 0xc
 2126 01f1 B1040000 		.4byte	.LASF29
 2127 01f5 01       		.byte	0x1
 2128 01f6 C101     		.2byte	0x1c1
 2129 01f8 00000000 		.4byte	.LFB10
 2130 01fc 1C000000 		.4byte	.LFE10-.LFB10
 2131 0200 01       		.uleb128 0x1
 2132 0201 9C       		.byte	0x9c
 2133 0202 16020000 		.4byte	0x216
 2134 0206 0B       		.uleb128 0xb
 2135 0207 F2010000 		.4byte	.LASF30
 2136 020b 01       		.byte	0x1
 2137 020c C101     		.2byte	0x1c1
 2138 020e 77000000 		.4byte	0x77
 2139 0212 02       		.uleb128 0x2
 2140 0213 91       		.byte	0x91
 2141 0214 74       		.sleb128 -12
 2142 0215 00       		.byte	0
 2143 0216 09       		.uleb128 0x9
 2144 0217 00000000 		.4byte	.LASF31
 2145 021b 01       		.byte	0x1
 2146 021c E501     		.2byte	0x1e5
 2147 021e 00000000 		.4byte	.LFB11
 2148 0222 48000000 		.4byte	.LFE11-.LFB11
 2149 0226 01       		.uleb128 0x1
 2150 0227 9C       		.byte	0x9c
 2151 0228 4B020000 		.4byte	0x24b
 2152 022c 0B       		.uleb128 0xb
 2153 022d 99020000 		.4byte	.LASF32
 2154 0231 01       		.byte	0x1
 2155 0232 E501     		.2byte	0x1e5
 2156 0234 77000000 		.4byte	0x77
 2157 0238 02       		.uleb128 0x2
 2158 0239 91       		.byte	0x91
 2159 023a 64       		.sleb128 -28
 2160 023b 0A       		.uleb128 0xa
 2161 023c 89040000 		.4byte	.LASF20
 2162 0240 01       		.byte	0x1
 2163 0241 E701     		.2byte	0x1e7
 2164 0243 6B000000 		.4byte	0x6b
 2165 0247 02       		.uleb128 0x2
 2166 0248 91       		.byte	0x91
 2167 0249 6F       		.sleb128 -17
 2168 024a 00       		.byte	0
 2169 024b 09       		.uleb128 0x9
 2170 024c 5D010000 		.4byte	.LASF33
 2171 0250 01       		.byte	0x1
 2172 0251 0702     		.2byte	0x207
 2173 0253 00000000 		.4byte	.LFB12
 2174 0257 48000000 		.4byte	.LFE12-.LFB12
 2175 025b 01       		.uleb128 0x1
 2176 025c 9C       		.byte	0x9c
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 64


 2177 025d 80020000 		.4byte	0x280
 2178 0261 0B       		.uleb128 0xb
 2179 0262 76030000 		.4byte	.LASF34
 2180 0266 01       		.byte	0x1
 2181 0267 0702     		.2byte	0x207
 2182 0269 77000000 		.4byte	0x77
 2183 026d 02       		.uleb128 0x2
 2184 026e 91       		.byte	0x91
 2185 026f 64       		.sleb128 -28
 2186 0270 0A       		.uleb128 0xa
 2187 0271 89040000 		.4byte	.LASF20
 2188 0275 01       		.byte	0x1
 2189 0276 0902     		.2byte	0x209
 2190 0278 6B000000 		.4byte	0x6b
 2191 027c 02       		.uleb128 0x2
 2192 027d 91       		.byte	0x91
 2193 027e 6F       		.sleb128 -17
 2194 027f 00       		.byte	0
 2195 0280 09       		.uleb128 0x9
 2196 0281 B5020000 		.4byte	.LASF35
 2197 0285 01       		.byte	0x1
 2198 0286 2802     		.2byte	0x228
 2199 0288 00000000 		.4byte	.LFB13
 2200 028c 4C000000 		.4byte	.LFE13-.LFB13
 2201 0290 01       		.uleb128 0x1
 2202 0291 9C       		.byte	0x9c
 2203 0292 B5020000 		.4byte	0x2b5
 2204 0296 0B       		.uleb128 0xb
 2205 0297 8A010000 		.4byte	.LASF36
 2206 029b 01       		.byte	0x1
 2207 029c 2802     		.2byte	0x228
 2208 029e 77000000 		.4byte	0x77
 2209 02a2 02       		.uleb128 0x2
 2210 02a3 91       		.byte	0x91
 2211 02a4 64       		.sleb128 -28
 2212 02a5 0A       		.uleb128 0xa
 2213 02a6 89040000 		.4byte	.LASF20
 2214 02aa 01       		.byte	0x1
 2215 02ab 2A02     		.2byte	0x22a
 2216 02ad 6B000000 		.4byte	0x6b
 2217 02b1 02       		.uleb128 0x2
 2218 02b2 91       		.byte	0x91
 2219 02b3 6F       		.sleb128 -17
 2220 02b4 00       		.byte	0
 2221 02b5 09       		.uleb128 0x9
 2222 02b6 C4040000 		.4byte	.LASF37
 2223 02ba 01       		.byte	0x1
 2224 02bb 4902     		.2byte	0x249
 2225 02bd 00000000 		.4byte	.LFB14
 2226 02c1 48000000 		.4byte	.LFE14-.LFB14
 2227 02c5 01       		.uleb128 0x1
 2228 02c6 9C       		.byte	0x9c
 2229 02c7 EA020000 		.4byte	0x2ea
 2230 02cb 0B       		.uleb128 0xb
 2231 02cc 58010000 		.4byte	.LASF38
 2232 02d0 01       		.byte	0x1
 2233 02d1 4902     		.2byte	0x249
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 65


 2234 02d3 77000000 		.4byte	0x77
 2235 02d7 02       		.uleb128 0x2
 2236 02d8 91       		.byte	0x91
 2237 02d9 64       		.sleb128 -28
 2238 02da 0A       		.uleb128 0xa
 2239 02db 89040000 		.4byte	.LASF20
 2240 02df 01       		.byte	0x1
 2241 02e0 4B02     		.2byte	0x24b
 2242 02e2 6B000000 		.4byte	0x6b
 2243 02e6 02       		.uleb128 0x2
 2244 02e7 91       		.byte	0x91
 2245 02e8 6F       		.sleb128 -17
 2246 02e9 00       		.byte	0
 2247 02ea 0C       		.uleb128 0xc
 2248 02eb 65000000 		.4byte	.LASF39
 2249 02ef 01       		.byte	0x1
 2250 02f0 6702     		.2byte	0x267
 2251 02f2 00000000 		.4byte	.LFB15
 2252 02f6 1C000000 		.4byte	.LFE15-.LFB15
 2253 02fa 01       		.uleb128 0x1
 2254 02fb 9C       		.byte	0x9c
 2255 02fc 10030000 		.4byte	0x310
 2256 0300 0B       		.uleb128 0xb
 2257 0301 46010000 		.4byte	.LASF40
 2258 0305 01       		.byte	0x1
 2259 0306 6702     		.2byte	0x267
 2260 0308 77000000 		.4byte	0x77
 2261 030c 02       		.uleb128 0x2
 2262 030d 91       		.byte	0x91
 2263 030e 74       		.sleb128 -12
 2264 030f 00       		.byte	0
 2265 0310 0D       		.uleb128 0xd
 2266 0311 76010000 		.4byte	.LASF45
 2267 0315 01       		.byte	0x1
 2268 0316 7B02     		.2byte	0x27b
 2269 0318 77000000 		.4byte	0x77
 2270 031c 00000000 		.4byte	.LFB16
 2271 0320 18000000 		.4byte	.LFE16-.LFB16
 2272 0324 01       		.uleb128 0x1
 2273 0325 9C       		.byte	0x9c
 2274 0326 09       		.uleb128 0x9
 2275 0327 9A040000 		.4byte	.LASF41
 2276 032b 01       		.byte	0x1
 2277 032c 9802     		.2byte	0x298
 2278 032e 00000000 		.4byte	.LFB17
 2279 0332 48000000 		.4byte	.LFE17-.LFB17
 2280 0336 01       		.uleb128 0x1
 2281 0337 9C       		.byte	0x9c
 2282 0338 5B030000 		.4byte	0x35b
 2283 033c 0B       		.uleb128 0xb
 2284 033d 47040000 		.4byte	.LASF42
 2285 0341 01       		.byte	0x1
 2286 0342 9802     		.2byte	0x298
 2287 0344 77000000 		.4byte	0x77
 2288 0348 02       		.uleb128 0x2
 2289 0349 91       		.byte	0x91
 2290 034a 64       		.sleb128 -28
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 66


 2291 034b 0A       		.uleb128 0xa
 2292 034c 89040000 		.4byte	.LASF20
 2293 0350 01       		.byte	0x1
 2294 0351 9A02     		.2byte	0x29a
 2295 0353 6B000000 		.4byte	0x6b
 2296 0357 02       		.uleb128 0x2
 2297 0358 91       		.byte	0x91
 2298 0359 6F       		.sleb128 -17
 2299 035a 00       		.byte	0
 2300 035b 0C       		.uleb128 0xc
 2301 035c 28030000 		.4byte	.LASF43
 2302 0360 01       		.byte	0x1
 2303 0361 B502     		.2byte	0x2b5
 2304 0363 00000000 		.4byte	.LFB18
 2305 0367 1C000000 		.4byte	.LFE18-.LFB18
 2306 036b 01       		.uleb128 0x1
 2307 036c 9C       		.byte	0x9c
 2308 036d 81030000 		.4byte	0x381
 2309 0371 0B       		.uleb128 0xb
 2310 0372 53040000 		.4byte	.LASF44
 2311 0376 01       		.byte	0x1
 2312 0377 B502     		.2byte	0x2b5
 2313 0379 77000000 		.4byte	0x77
 2314 037d 02       		.uleb128 0x2
 2315 037e 91       		.byte	0x91
 2316 037f 74       		.sleb128 -12
 2317 0380 00       		.byte	0
 2318 0381 0D       		.uleb128 0xd
 2319 0382 00040000 		.4byte	.LASF46
 2320 0386 01       		.byte	0x1
 2321 0387 C902     		.2byte	0x2c9
 2322 0389 77000000 		.4byte	0x77
 2323 038d 00000000 		.4byte	.LFB19
 2324 0391 18000000 		.4byte	.LFE19-.LFB19
 2325 0395 01       		.uleb128 0x1
 2326 0396 9C       		.byte	0x9c
 2327 0397 09       		.uleb128 0x9
 2328 0398 AE000000 		.4byte	.LASF47
 2329 039c 01       		.byte	0x1
 2330 039d E302     		.2byte	0x2e3
 2331 039f 00000000 		.4byte	.LFB20
 2332 03a3 48000000 		.4byte	.LFE20-.LFB20
 2333 03a7 01       		.uleb128 0x1
 2334 03a8 9C       		.byte	0x9c
 2335 03a9 CC030000 		.4byte	0x3cc
 2336 03ad 0B       		.uleb128 0xb
 2337 03ae 5A040000 		.4byte	.LASF48
 2338 03b2 01       		.byte	0x1
 2339 03b3 E302     		.2byte	0x2e3
 2340 03b5 77000000 		.4byte	0x77
 2341 03b9 02       		.uleb128 0x2
 2342 03ba 91       		.byte	0x91
 2343 03bb 64       		.sleb128 -28
 2344 03bc 0A       		.uleb128 0xa
 2345 03bd 89040000 		.4byte	.LASF20
 2346 03c1 01       		.byte	0x1
 2347 03c2 E502     		.2byte	0x2e5
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 67


 2348 03c4 6B000000 		.4byte	0x6b
 2349 03c8 02       		.uleb128 0x2
 2350 03c9 91       		.byte	0x91
 2351 03ca 6F       		.sleb128 -17
 2352 03cb 00       		.byte	0
 2353 03cc 0C       		.uleb128 0xc
 2354 03cd 3C030000 		.4byte	.LASF49
 2355 03d1 01       		.byte	0x1
 2356 03d2 FE02     		.2byte	0x2fe
 2357 03d4 00000000 		.4byte	.LFB21
 2358 03d8 1C000000 		.4byte	.LFE21-.LFB21
 2359 03dc 01       		.uleb128 0x1
 2360 03dd 9C       		.byte	0x9c
 2361 03de F2030000 		.4byte	0x3f2
 2362 03e2 0B       		.uleb128 0xb
 2363 03e3 92050000 		.4byte	.LASF50
 2364 03e7 01       		.byte	0x1
 2365 03e8 FE02     		.2byte	0x2fe
 2366 03ea 77000000 		.4byte	0x77
 2367 03ee 02       		.uleb128 0x2
 2368 03ef 91       		.byte	0x91
 2369 03f0 74       		.sleb128 -12
 2370 03f1 00       		.byte	0
 2371 03f2 0D       		.uleb128 0xd
 2372 03f3 AC030000 		.4byte	.LASF51
 2373 03f7 01       		.byte	0x1
 2374 03f8 1203     		.2byte	0x312
 2375 03fa 77000000 		.4byte	0x77
 2376 03fe 00000000 		.4byte	.LFB22
 2377 0402 18000000 		.4byte	.LFE22-.LFB22
 2378 0406 01       		.uleb128 0x1
 2379 0407 9C       		.byte	0x9c
 2380 0408 09       		.uleb128 0x9
 2381 0409 13040000 		.4byte	.LASF52
 2382 040d 01       		.byte	0x1
 2383 040e 2C03     		.2byte	0x32c
 2384 0410 00000000 		.4byte	.LFB23
 2385 0414 48000000 		.4byte	.LFE23-.LFB23
 2386 0418 01       		.uleb128 0x1
 2387 0419 9C       		.byte	0x9c
 2388 041a 3D040000 		.4byte	0x43d
 2389 041e 0B       		.uleb128 0xb
 2390 041f 5A040000 		.4byte	.LASF48
 2391 0423 01       		.byte	0x1
 2392 0424 2C03     		.2byte	0x32c
 2393 0426 77000000 		.4byte	0x77
 2394 042a 02       		.uleb128 0x2
 2395 042b 91       		.byte	0x91
 2396 042c 64       		.sleb128 -28
 2397 042d 0A       		.uleb128 0xa
 2398 042e 89040000 		.4byte	.LASF20
 2399 0432 01       		.byte	0x1
 2400 0433 2E03     		.2byte	0x32e
 2401 0435 6B000000 		.4byte	0x6b
 2402 0439 02       		.uleb128 0x2
 2403 043a 91       		.byte	0x91
 2404 043b 6F       		.sleb128 -17
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 68


 2405 043c 00       		.byte	0
 2406 043d 0C       		.uleb128 0xc
 2407 043e 61030000 		.4byte	.LASF53
 2408 0442 01       		.byte	0x1
 2409 0443 5103     		.2byte	0x351
 2410 0445 00000000 		.4byte	.LFB24
 2411 0449 1C000000 		.4byte	.LFE24-.LFB24
 2412 044d 01       		.uleb128 0x1
 2413 044e 9C       		.byte	0x9c
 2414 044f 63040000 		.4byte	0x463
 2415 0453 0B       		.uleb128 0xb
 2416 0454 DF020000 		.4byte	.LASF54
 2417 0458 01       		.byte	0x1
 2418 0459 5103     		.2byte	0x351
 2419 045b 77000000 		.4byte	0x77
 2420 045f 02       		.uleb128 0x2
 2421 0460 91       		.byte	0x91
 2422 0461 74       		.sleb128 -12
 2423 0462 00       		.byte	0
 2424 0463 0D       		.uleb128 0xd
 2425 0464 DF000000 		.4byte	.LASF55
 2426 0468 01       		.byte	0x1
 2427 0469 8403     		.2byte	0x384
 2428 046b 77000000 		.4byte	0x77
 2429 046f 00000000 		.4byte	.LFB25
 2430 0473 18000000 		.4byte	.LFE25-.LFB25
 2431 0477 01       		.uleb128 0x1
 2432 0478 9C       		.byte	0x9c
 2433 0479 0C       		.uleb128 0xc
 2434 047a 03010000 		.4byte	.LASF56
 2435 047e 01       		.byte	0x1
 2436 047f BA03     		.2byte	0x3ba
 2437 0481 00000000 		.4byte	.LFB26
 2438 0485 1C000000 		.4byte	.LFE26-.LFB26
 2439 0489 01       		.uleb128 0x1
 2440 048a 9C       		.byte	0x9c
 2441 048b 9F040000 		.4byte	0x49f
 2442 048f 0B       		.uleb128 0xb
 2443 0490 7E040000 		.4byte	.LASF57
 2444 0494 01       		.byte	0x1
 2445 0495 BA03     		.2byte	0x3ba
 2446 0497 77000000 		.4byte	0x77
 2447 049b 02       		.uleb128 0x2
 2448 049c 91       		.byte	0x91
 2449 049d 74       		.sleb128 -12
 2450 049e 00       		.byte	0
 2451 049f 0D       		.uleb128 0xd
 2452 04a0 E9030000 		.4byte	.LASF58
 2453 04a4 01       		.byte	0x1
 2454 04a5 E803     		.2byte	0x3e8
 2455 04a7 77000000 		.4byte	0x77
 2456 04ab 00000000 		.4byte	.LFB27
 2457 04af 18000000 		.4byte	.LFE27-.LFB27
 2458 04b3 01       		.uleb128 0x1
 2459 04b4 9C       		.byte	0x9c
 2460 04b5 0D       		.uleb128 0xd
 2461 04b6 33040000 		.4byte	.LASF59
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 69


 2462 04ba 01       		.byte	0x1
 2463 04bb 1604     		.2byte	0x416
 2464 04bd 77000000 		.4byte	0x77
 2465 04c1 00000000 		.4byte	.LFB28
 2466 04c5 18000000 		.4byte	.LFE28-.LFB28
 2467 04c9 01       		.uleb128 0x1
 2468 04ca 9C       		.byte	0x9c
 2469 04cb 0D       		.uleb128 0xd
 2470 04cc 17000000 		.4byte	.LASF60
 2471 04d0 01       		.byte	0x1
 2472 04d1 2B04     		.2byte	0x42b
 2473 04d3 77000000 		.4byte	0x77
 2474 04d7 00000000 		.4byte	.LFB29
 2475 04db 18000000 		.4byte	.LFE29-.LFB29
 2476 04df 01       		.uleb128 0x1
 2477 04e0 9C       		.byte	0x9c
 2478 04e1 09       		.uleb128 0x9
 2479 04e2 9C050000 		.4byte	.LASF61
 2480 04e6 01       		.byte	0x1
 2481 04e7 4604     		.2byte	0x446
 2482 04e9 00000000 		.4byte	.LFB30
 2483 04ed 44000000 		.4byte	.LFE30-.LFB30
 2484 04f1 01       		.uleb128 0x1
 2485 04f2 9C       		.byte	0x9c
 2486 04f3 16050000 		.4byte	0x516
 2487 04f7 0B       		.uleb128 0xb
 2488 04f8 4C010000 		.4byte	.LASF62
 2489 04fc 01       		.byte	0x1
 2490 04fd 4604     		.2byte	0x446
 2491 04ff 77000000 		.4byte	0x77
 2492 0503 02       		.uleb128 0x2
 2493 0504 91       		.byte	0x91
 2494 0505 64       		.sleb128 -28
 2495 0506 0A       		.uleb128 0xa
 2496 0507 89040000 		.4byte	.LASF20
 2497 050b 01       		.byte	0x1
 2498 050c 4804     		.2byte	0x448
 2499 050e 6B000000 		.4byte	0x6b
 2500 0512 02       		.uleb128 0x2
 2501 0513 91       		.byte	0x91
 2502 0514 6F       		.sleb128 -17
 2503 0515 00       		.byte	0
 2504 0516 09       		.uleb128 0x9
 2505 0517 D9040000 		.4byte	.LASF63
 2506 051b 01       		.byte	0x1
 2507 051c 6704     		.2byte	0x467
 2508 051e 00000000 		.4byte	.LFB31
 2509 0522 44000000 		.4byte	.LFE31-.LFB31
 2510 0526 01       		.uleb128 0x1
 2511 0527 9C       		.byte	0x9c
 2512 0528 4B050000 		.4byte	0x54b
 2513 052c 0B       		.uleb128 0xb
 2514 052d 4C010000 		.4byte	.LASF62
 2515 0531 01       		.byte	0x1
 2516 0532 6704     		.2byte	0x467
 2517 0534 77000000 		.4byte	0x77
 2518 0538 02       		.uleb128 0x2
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 70


 2519 0539 91       		.byte	0x91
 2520 053a 64       		.sleb128 -28
 2521 053b 0A       		.uleb128 0xa
 2522 053c 89040000 		.4byte	.LASF20
 2523 0540 01       		.byte	0x1
 2524 0541 6904     		.2byte	0x469
 2525 0543 6B000000 		.4byte	0x6b
 2526 0547 02       		.uleb128 0x2
 2527 0548 91       		.byte	0x91
 2528 0549 6F       		.sleb128 -17
 2529 054a 00       		.byte	0
 2530 054b 09       		.uleb128 0x9
 2531 054c EF040000 		.4byte	.LASF64
 2532 0550 01       		.byte	0x1
 2533 0551 8804     		.2byte	0x488
 2534 0553 00000000 		.4byte	.LFB32
 2535 0557 48000000 		.4byte	.LFE32-.LFB32
 2536 055b 01       		.uleb128 0x1
 2537 055c 9C       		.byte	0x9c
 2538 055d 80050000 		.4byte	0x580
 2539 0561 0B       		.uleb128 0xb
 2540 0562 4C010000 		.4byte	.LASF62
 2541 0566 01       		.byte	0x1
 2542 0567 8804     		.2byte	0x488
 2543 0569 77000000 		.4byte	0x77
 2544 056d 02       		.uleb128 0x2
 2545 056e 91       		.byte	0x91
 2546 056f 64       		.sleb128 -28
 2547 0570 0A       		.uleb128 0xa
 2548 0571 89040000 		.4byte	.LASF20
 2549 0575 01       		.byte	0x1
 2550 0576 8A04     		.2byte	0x48a
 2551 0578 6B000000 		.4byte	0x6b
 2552 057c 02       		.uleb128 0x2
 2553 057d 91       		.byte	0x91
 2554 057e 6F       		.sleb128 -17
 2555 057f 00       		.byte	0
 2556 0580 09       		.uleb128 0x9
 2557 0581 6D020000 		.4byte	.LASF65
 2558 0585 01       		.byte	0x1
 2559 0586 A804     		.2byte	0x4a8
 2560 0588 00000000 		.4byte	.LFB33
 2561 058c 44000000 		.4byte	.LFE33-.LFB33
 2562 0590 01       		.uleb128 0x1
 2563 0591 9C       		.byte	0x9c
 2564 0592 B5050000 		.4byte	0x5b5
 2565 0596 0B       		.uleb128 0xb
 2566 0597 4C010000 		.4byte	.LASF62
 2567 059b 01       		.byte	0x1
 2568 059c A804     		.2byte	0x4a8
 2569 059e 77000000 		.4byte	0x77
 2570 05a2 02       		.uleb128 0x2
 2571 05a3 91       		.byte	0x91
 2572 05a4 64       		.sleb128 -28
 2573 05a5 0A       		.uleb128 0xa
 2574 05a6 89040000 		.4byte	.LASF20
 2575 05aa 01       		.byte	0x1
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 71


 2576 05ab AA04     		.2byte	0x4aa
 2577 05ad 6B000000 		.4byte	0x6b
 2578 05b1 02       		.uleb128 0x2
 2579 05b2 91       		.byte	0x91
 2580 05b3 6F       		.sleb128 -17
 2581 05b4 00       		.byte	0
 2582 05b5 09       		.uleb128 0x9
 2583 05b6 F5020000 		.4byte	.LASF66
 2584 05ba 01       		.byte	0x1
 2585 05bb C904     		.2byte	0x4c9
 2586 05bd 00000000 		.4byte	.LFB34
 2587 05c1 44000000 		.4byte	.LFE34-.LFB34
 2588 05c5 01       		.uleb128 0x1
 2589 05c6 9C       		.byte	0x9c
 2590 05c7 EA050000 		.4byte	0x5ea
 2591 05cb 0B       		.uleb128 0xb
 2592 05cc 4C010000 		.4byte	.LASF62
 2593 05d0 01       		.byte	0x1
 2594 05d1 C904     		.2byte	0x4c9
 2595 05d3 77000000 		.4byte	0x77
 2596 05d7 02       		.uleb128 0x2
 2597 05d8 91       		.byte	0x91
 2598 05d9 64       		.sleb128 -28
 2599 05da 0A       		.uleb128 0xa
 2600 05db 89040000 		.4byte	.LASF20
 2601 05df 01       		.byte	0x1
 2602 05e0 CB04     		.2byte	0x4cb
 2603 05e2 6B000000 		.4byte	0x6b
 2604 05e6 02       		.uleb128 0x2
 2605 05e7 91       		.byte	0x91
 2606 05e8 6F       		.sleb128 -17
 2607 05e9 00       		.byte	0
 2608 05ea 09       		.uleb128 0x9
 2609 05eb C1010000 		.4byte	.LASF67
 2610 05ef 01       		.byte	0x1
 2611 05f0 F104     		.2byte	0x4f1
 2612 05f2 00000000 		.4byte	.LFB35
 2613 05f6 38000000 		.4byte	.LFE35-.LFB35
 2614 05fa 01       		.uleb128 0x1
 2615 05fb 9C       		.byte	0x9c
 2616 05fc 2E060000 		.4byte	0x62e
 2617 0600 0B       		.uleb128 0xb
 2618 0601 58010000 		.4byte	.LASF38
 2619 0605 01       		.byte	0x1
 2620 0606 F104     		.2byte	0x4f1
 2621 0608 77000000 		.4byte	0x77
 2622 060c 02       		.uleb128 0x2
 2623 060d 91       		.byte	0x91
 2624 060e 64       		.sleb128 -28
 2625 060f 0B       		.uleb128 0xb
 2626 0610 D8010000 		.4byte	.LASF68
 2627 0614 01       		.byte	0x1
 2628 0615 F104     		.2byte	0x4f1
 2629 0617 77000000 		.4byte	0x77
 2630 061b 02       		.uleb128 0x2
 2631 061c 91       		.byte	0x91
 2632 061d 60       		.sleb128 -32
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 72


 2633 061e 0A       		.uleb128 0xa
 2634 061f 89040000 		.4byte	.LASF20
 2635 0623 01       		.byte	0x1
 2636 0624 F304     		.2byte	0x4f3
 2637 0626 6B000000 		.4byte	0x6b
 2638 062a 02       		.uleb128 0x2
 2639 062b 91       		.byte	0x91
 2640 062c 6F       		.sleb128 -17
 2641 062d 00       		.byte	0
 2642 062e 0D       		.uleb128 0xd
 2643 062f CC020000 		.4byte	.LASF69
 2644 0633 01       		.byte	0x1
 2645 0634 0E05     		.2byte	0x50e
 2646 0636 77000000 		.4byte	0x77
 2647 063a 00000000 		.4byte	.LFB36
 2648 063e 20000000 		.4byte	.LFE36-.LFB36
 2649 0642 01       		.uleb128 0x1
 2650 0643 9C       		.byte	0x9c
 2651 0644 0C       		.uleb128 0xc
 2652 0645 65040000 		.4byte	.LASF70
 2653 0649 01       		.byte	0x1
 2654 064a 2705     		.2byte	0x527
 2655 064c 00000000 		.4byte	.LFB37
 2656 0650 18000000 		.4byte	.LFE37-.LFB37
 2657 0654 01       		.uleb128 0x1
 2658 0655 9C       		.byte	0x9c
 2659 0656 6A060000 		.4byte	0x66a
 2660 065a 0B       		.uleb128 0xb
 2661 065b 10030000 		.4byte	.LASF71
 2662 065f 01       		.byte	0x1
 2663 0660 2705     		.2byte	0x527
 2664 0662 77000000 		.4byte	0x77
 2665 0666 02       		.uleb128 0x2
 2666 0667 91       		.byte	0x91
 2667 0668 74       		.sleb128 -12
 2668 0669 00       		.byte	0
 2669 066a 0D       		.uleb128 0xd
 2670 066b 93010000 		.4byte	.LASF72
 2671 066f 01       		.byte	0x1
 2672 0670 3E05     		.2byte	0x53e
 2673 0672 77000000 		.4byte	0x77
 2674 0676 00000000 		.4byte	.LFB38
 2675 067a 14000000 		.4byte	.LFE38-.LFB38
 2676 067e 01       		.uleb128 0x1
 2677 067f 9C       		.byte	0x9c
 2678 0680 0D       		.uleb128 0xd
 2679 0681 87030000 		.4byte	.LASF73
 2680 0685 01       		.byte	0x1
 2681 0686 5505     		.2byte	0x555
 2682 0688 77000000 		.4byte	0x77
 2683 068c 00000000 		.4byte	.LFB39
 2684 0690 14000000 		.4byte	.LFE39-.LFB39
 2685 0694 01       		.uleb128 0x1
 2686 0695 9C       		.byte	0x9c
 2687 0696 0C       		.uleb128 0xc
 2688 0697 21010000 		.4byte	.LASF74
 2689 069b 01       		.byte	0x1
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 73


 2690 069c 6C05     		.2byte	0x56c
 2691 069e 00000000 		.4byte	.LFB40
 2692 06a2 18000000 		.4byte	.LFE40-.LFB40
 2693 06a6 01       		.uleb128 0x1
 2694 06a7 9C       		.byte	0x9c
 2695 06a8 BC060000 		.4byte	0x6bc
 2696 06ac 0B       		.uleb128 0xb
 2697 06ad 10030000 		.4byte	.LASF71
 2698 06b1 01       		.byte	0x1
 2699 06b2 6C05     		.2byte	0x56c
 2700 06b4 77000000 		.4byte	0x77
 2701 06b8 02       		.uleb128 0x2
 2702 06b9 91       		.byte	0x91
 2703 06ba 74       		.sleb128 -12
 2704 06bb 00       		.byte	0
 2705 06bc 0C       		.uleb128 0xc
 2706 06bd 3F020000 		.4byte	.LASF75
 2707 06c1 01       		.byte	0x1
 2708 06c2 8305     		.2byte	0x583
 2709 06c4 00000000 		.4byte	.LFB41
 2710 06c8 18000000 		.4byte	.LFE41-.LFB41
 2711 06cc 01       		.uleb128 0x1
 2712 06cd 9C       		.byte	0x9c
 2713 06ce E2060000 		.4byte	0x6e2
 2714 06d2 0B       		.uleb128 0xb
 2715 06d3 10030000 		.4byte	.LASF71
 2716 06d7 01       		.byte	0x1
 2717 06d8 8305     		.2byte	0x583
 2718 06da 77000000 		.4byte	0x77
 2719 06de 02       		.uleb128 0x2
 2720 06df 91       		.byte	0x91
 2721 06e0 74       		.sleb128 -12
 2722 06e1 00       		.byte	0
 2723 06e2 0E       		.uleb128 0xe
 2724 06e3 91000000 		.4byte	.LASF79
 2725 06e7 01       		.byte	0x1
 2726 06e8 15       		.byte	0x15
 2727 06e9 6B000000 		.4byte	0x6b
 2728 06ed 05       		.uleb128 0x5
 2729 06ee 03       		.byte	0x3
 2730 06ef 00000000 		.4byte	TCPWM_1_initVar
 2731 06f3 00       		.byte	0
 2732              		.section	.debug_abbrev,"",%progbits
 2733              	.Ldebug_abbrev0:
 2734 0000 01       		.uleb128 0x1
 2735 0001 11       		.uleb128 0x11
 2736 0002 01       		.byte	0x1
 2737 0003 25       		.uleb128 0x25
 2738 0004 0E       		.uleb128 0xe
 2739 0005 13       		.uleb128 0x13
 2740 0006 0B       		.uleb128 0xb
 2741 0007 03       		.uleb128 0x3
 2742 0008 0E       		.uleb128 0xe
 2743 0009 1B       		.uleb128 0x1b
 2744 000a 0E       		.uleb128 0xe
 2745 000b 55       		.uleb128 0x55
 2746 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 74


 2747 000d 11       		.uleb128 0x11
 2748 000e 01       		.uleb128 0x1
 2749 000f 10       		.uleb128 0x10
 2750 0010 17       		.uleb128 0x17
 2751 0011 00       		.byte	0
 2752 0012 00       		.byte	0
 2753 0013 02       		.uleb128 0x2
 2754 0014 24       		.uleb128 0x24
 2755 0015 00       		.byte	0
 2756 0016 0B       		.uleb128 0xb
 2757 0017 0B       		.uleb128 0xb
 2758 0018 3E       		.uleb128 0x3e
 2759 0019 0B       		.uleb128 0xb
 2760 001a 03       		.uleb128 0x3
 2761 001b 0E       		.uleb128 0xe
 2762 001c 00       		.byte	0
 2763 001d 00       		.byte	0
 2764 001e 03       		.uleb128 0x3
 2765 001f 24       		.uleb128 0x24
 2766 0020 00       		.byte	0
 2767 0021 0B       		.uleb128 0xb
 2768 0022 0B       		.uleb128 0xb
 2769 0023 3E       		.uleb128 0x3e
 2770 0024 0B       		.uleb128 0xb
 2771 0025 03       		.uleb128 0x3
 2772 0026 08       		.uleb128 0x8
 2773 0027 00       		.byte	0
 2774 0028 00       		.byte	0
 2775 0029 04       		.uleb128 0x4
 2776 002a 16       		.uleb128 0x16
 2777 002b 00       		.byte	0
 2778 002c 03       		.uleb128 0x3
 2779 002d 0E       		.uleb128 0xe
 2780 002e 3A       		.uleb128 0x3a
 2781 002f 0B       		.uleb128 0xb
 2782 0030 3B       		.uleb128 0x3b
 2783 0031 05       		.uleb128 0x5
 2784 0032 49       		.uleb128 0x49
 2785 0033 13       		.uleb128 0x13
 2786 0034 00       		.byte	0
 2787 0035 00       		.byte	0
 2788 0036 05       		.uleb128 0x5
 2789 0037 35       		.uleb128 0x35
 2790 0038 00       		.byte	0
 2791 0039 49       		.uleb128 0x49
 2792 003a 13       		.uleb128 0x13
 2793 003b 00       		.byte	0
 2794 003c 00       		.byte	0
 2795 003d 06       		.uleb128 0x6
 2796 003e 2E       		.uleb128 0x2e
 2797 003f 00       		.byte	0
 2798 0040 3F       		.uleb128 0x3f
 2799 0041 19       		.uleb128 0x19
 2800 0042 03       		.uleb128 0x3
 2801 0043 0E       		.uleb128 0xe
 2802 0044 3A       		.uleb128 0x3a
 2803 0045 0B       		.uleb128 0xb
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 75


 2804 0046 3B       		.uleb128 0x3b
 2805 0047 0B       		.uleb128 0xb
 2806 0048 27       		.uleb128 0x27
 2807 0049 19       		.uleb128 0x19
 2808 004a 11       		.uleb128 0x11
 2809 004b 01       		.uleb128 0x1
 2810 004c 12       		.uleb128 0x12
 2811 004d 06       		.uleb128 0x6
 2812 004e 40       		.uleb128 0x40
 2813 004f 18       		.uleb128 0x18
 2814 0050 9642     		.uleb128 0x2116
 2815 0052 19       		.uleb128 0x19
 2816 0053 00       		.byte	0
 2817 0054 00       		.byte	0
 2818 0055 07       		.uleb128 0x7
 2819 0056 2E       		.uleb128 0x2e
 2820 0057 01       		.byte	0x1
 2821 0058 3F       		.uleb128 0x3f
 2822 0059 19       		.uleb128 0x19
 2823 005a 03       		.uleb128 0x3
 2824 005b 0E       		.uleb128 0xe
 2825 005c 3A       		.uleb128 0x3a
 2826 005d 0B       		.uleb128 0xb
 2827 005e 3B       		.uleb128 0x3b
 2828 005f 0B       		.uleb128 0xb
 2829 0060 27       		.uleb128 0x27
 2830 0061 19       		.uleb128 0x19
 2831 0062 11       		.uleb128 0x11
 2832 0063 01       		.uleb128 0x1
 2833 0064 12       		.uleb128 0x12
 2834 0065 06       		.uleb128 0x6
 2835 0066 40       		.uleb128 0x40
 2836 0067 18       		.uleb128 0x18
 2837 0068 9642     		.uleb128 0x2116
 2838 006a 19       		.uleb128 0x19
 2839 006b 01       		.uleb128 0x1
 2840 006c 13       		.uleb128 0x13
 2841 006d 00       		.byte	0
 2842 006e 00       		.byte	0
 2843 006f 08       		.uleb128 0x8
 2844 0070 34       		.uleb128 0x34
 2845 0071 00       		.byte	0
 2846 0072 03       		.uleb128 0x3
 2847 0073 0E       		.uleb128 0xe
 2848 0074 3A       		.uleb128 0x3a
 2849 0075 0B       		.uleb128 0xb
 2850 0076 3B       		.uleb128 0x3b
 2851 0077 0B       		.uleb128 0xb
 2852 0078 49       		.uleb128 0x49
 2853 0079 13       		.uleb128 0x13
 2854 007a 02       		.uleb128 0x2
 2855 007b 18       		.uleb128 0x18
 2856 007c 00       		.byte	0
 2857 007d 00       		.byte	0
 2858 007e 09       		.uleb128 0x9
 2859 007f 2E       		.uleb128 0x2e
 2860 0080 01       		.byte	0x1
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 76


 2861 0081 3F       		.uleb128 0x3f
 2862 0082 19       		.uleb128 0x19
 2863 0083 03       		.uleb128 0x3
 2864 0084 0E       		.uleb128 0xe
 2865 0085 3A       		.uleb128 0x3a
 2866 0086 0B       		.uleb128 0xb
 2867 0087 3B       		.uleb128 0x3b
 2868 0088 05       		.uleb128 0x5
 2869 0089 27       		.uleb128 0x27
 2870 008a 19       		.uleb128 0x19
 2871 008b 11       		.uleb128 0x11
 2872 008c 01       		.uleb128 0x1
 2873 008d 12       		.uleb128 0x12
 2874 008e 06       		.uleb128 0x6
 2875 008f 40       		.uleb128 0x40
 2876 0090 18       		.uleb128 0x18
 2877 0091 9642     		.uleb128 0x2116
 2878 0093 19       		.uleb128 0x19
 2879 0094 01       		.uleb128 0x1
 2880 0095 13       		.uleb128 0x13
 2881 0096 00       		.byte	0
 2882 0097 00       		.byte	0
 2883 0098 0A       		.uleb128 0xa
 2884 0099 34       		.uleb128 0x34
 2885 009a 00       		.byte	0
 2886 009b 03       		.uleb128 0x3
 2887 009c 0E       		.uleb128 0xe
 2888 009d 3A       		.uleb128 0x3a
 2889 009e 0B       		.uleb128 0xb
 2890 009f 3B       		.uleb128 0x3b
 2891 00a0 05       		.uleb128 0x5
 2892 00a1 49       		.uleb128 0x49
 2893 00a2 13       		.uleb128 0x13
 2894 00a3 02       		.uleb128 0x2
 2895 00a4 18       		.uleb128 0x18
 2896 00a5 00       		.byte	0
 2897 00a6 00       		.byte	0
 2898 00a7 0B       		.uleb128 0xb
 2899 00a8 05       		.uleb128 0x5
 2900 00a9 00       		.byte	0
 2901 00aa 03       		.uleb128 0x3
 2902 00ab 0E       		.uleb128 0xe
 2903 00ac 3A       		.uleb128 0x3a
 2904 00ad 0B       		.uleb128 0xb
 2905 00ae 3B       		.uleb128 0x3b
 2906 00af 05       		.uleb128 0x5
 2907 00b0 49       		.uleb128 0x49
 2908 00b1 13       		.uleb128 0x13
 2909 00b2 02       		.uleb128 0x2
 2910 00b3 18       		.uleb128 0x18
 2911 00b4 00       		.byte	0
 2912 00b5 00       		.byte	0
 2913 00b6 0C       		.uleb128 0xc
 2914 00b7 2E       		.uleb128 0x2e
 2915 00b8 01       		.byte	0x1
 2916 00b9 3F       		.uleb128 0x3f
 2917 00ba 19       		.uleb128 0x19
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 77


 2918 00bb 03       		.uleb128 0x3
 2919 00bc 0E       		.uleb128 0xe
 2920 00bd 3A       		.uleb128 0x3a
 2921 00be 0B       		.uleb128 0xb
 2922 00bf 3B       		.uleb128 0x3b
 2923 00c0 05       		.uleb128 0x5
 2924 00c1 27       		.uleb128 0x27
 2925 00c2 19       		.uleb128 0x19
 2926 00c3 11       		.uleb128 0x11
 2927 00c4 01       		.uleb128 0x1
 2928 00c5 12       		.uleb128 0x12
 2929 00c6 06       		.uleb128 0x6
 2930 00c7 40       		.uleb128 0x40
 2931 00c8 18       		.uleb128 0x18
 2932 00c9 9742     		.uleb128 0x2117
 2933 00cb 19       		.uleb128 0x19
 2934 00cc 01       		.uleb128 0x1
 2935 00cd 13       		.uleb128 0x13
 2936 00ce 00       		.byte	0
 2937 00cf 00       		.byte	0
 2938 00d0 0D       		.uleb128 0xd
 2939 00d1 2E       		.uleb128 0x2e
 2940 00d2 00       		.byte	0
 2941 00d3 3F       		.uleb128 0x3f
 2942 00d4 19       		.uleb128 0x19
 2943 00d5 03       		.uleb128 0x3
 2944 00d6 0E       		.uleb128 0xe
 2945 00d7 3A       		.uleb128 0x3a
 2946 00d8 0B       		.uleb128 0xb
 2947 00d9 3B       		.uleb128 0x3b
 2948 00da 05       		.uleb128 0x5
 2949 00db 27       		.uleb128 0x27
 2950 00dc 19       		.uleb128 0x19
 2951 00dd 49       		.uleb128 0x49
 2952 00de 13       		.uleb128 0x13
 2953 00df 11       		.uleb128 0x11
 2954 00e0 01       		.uleb128 0x1
 2955 00e1 12       		.uleb128 0x12
 2956 00e2 06       		.uleb128 0x6
 2957 00e3 40       		.uleb128 0x40
 2958 00e4 18       		.uleb128 0x18
 2959 00e5 9742     		.uleb128 0x2117
 2960 00e7 19       		.uleb128 0x19
 2961 00e8 00       		.byte	0
 2962 00e9 00       		.byte	0
 2963 00ea 0E       		.uleb128 0xe
 2964 00eb 34       		.uleb128 0x34
 2965 00ec 00       		.byte	0
 2966 00ed 03       		.uleb128 0x3
 2967 00ee 0E       		.uleb128 0xe
 2968 00ef 3A       		.uleb128 0x3a
 2969 00f0 0B       		.uleb128 0xb
 2970 00f1 3B       		.uleb128 0x3b
 2971 00f2 0B       		.uleb128 0xb
 2972 00f3 49       		.uleb128 0x49
 2973 00f4 13       		.uleb128 0x13
 2974 00f5 3F       		.uleb128 0x3f
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 78


 2975 00f6 19       		.uleb128 0x19
 2976 00f7 02       		.uleb128 0x2
 2977 00f8 18       		.uleb128 0x18
 2978 00f9 00       		.byte	0
 2979 00fa 00       		.byte	0
 2980 00fb 00       		.byte	0
 2981              		.section	.debug_aranges,"",%progbits
 2982 0000 54010000 		.4byte	0x154
 2983 0004 0200     		.2byte	0x2
 2984 0006 00000000 		.4byte	.Ldebug_info0
 2985 000a 04       		.byte	0x4
 2986 000b 00       		.byte	0
 2987 000c 0000     		.2byte	0
 2988 000e 0000     		.2byte	0
 2989 0010 00000000 		.4byte	.LFB2
 2990 0014 30000000 		.4byte	.LFE2-.LFB2
 2991 0018 00000000 		.4byte	.LFB3
 2992 001c 38000000 		.4byte	.LFE3-.LFB3
 2993 0020 00000000 		.4byte	.LFB4
 2994 0024 24000000 		.4byte	.LFE4-.LFB4
 2995 0028 00000000 		.4byte	.LFB5
 2996 002c 30000000 		.4byte	.LFE5-.LFB5
 2997 0030 00000000 		.4byte	.LFB6
 2998 0034 48000000 		.4byte	.LFE6-.LFB6
 2999 0038 00000000 		.4byte	.LFB7
 3000 003c 48000000 		.4byte	.LFE7-.LFB7
 3001 0040 00000000 		.4byte	.LFB8
 3002 0044 48000000 		.4byte	.LFE8-.LFB8
 3003 0048 00000000 		.4byte	.LFB9
 3004 004c 4C000000 		.4byte	.LFE9-.LFB9
 3005 0050 00000000 		.4byte	.LFB10
 3006 0054 1C000000 		.4byte	.LFE10-.LFB10
 3007 0058 00000000 		.4byte	.LFB11
 3008 005c 48000000 		.4byte	.LFE11-.LFB11
 3009 0060 00000000 		.4byte	.LFB12
 3010 0064 48000000 		.4byte	.LFE12-.LFB12
 3011 0068 00000000 		.4byte	.LFB13
 3012 006c 4C000000 		.4byte	.LFE13-.LFB13
 3013 0070 00000000 		.4byte	.LFB14
 3014 0074 48000000 		.4byte	.LFE14-.LFB14
 3015 0078 00000000 		.4byte	.LFB15
 3016 007c 1C000000 		.4byte	.LFE15-.LFB15
 3017 0080 00000000 		.4byte	.LFB16
 3018 0084 18000000 		.4byte	.LFE16-.LFB16
 3019 0088 00000000 		.4byte	.LFB17
 3020 008c 48000000 		.4byte	.LFE17-.LFB17
 3021 0090 00000000 		.4byte	.LFB18
 3022 0094 1C000000 		.4byte	.LFE18-.LFB18
 3023 0098 00000000 		.4byte	.LFB19
 3024 009c 18000000 		.4byte	.LFE19-.LFB19
 3025 00a0 00000000 		.4byte	.LFB20
 3026 00a4 48000000 		.4byte	.LFE20-.LFB20
 3027 00a8 00000000 		.4byte	.LFB21
 3028 00ac 1C000000 		.4byte	.LFE21-.LFB21
 3029 00b0 00000000 		.4byte	.LFB22
 3030 00b4 18000000 		.4byte	.LFE22-.LFB22
 3031 00b8 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 79


 3032 00bc 48000000 		.4byte	.LFE23-.LFB23
 3033 00c0 00000000 		.4byte	.LFB24
 3034 00c4 1C000000 		.4byte	.LFE24-.LFB24
 3035 00c8 00000000 		.4byte	.LFB25
 3036 00cc 18000000 		.4byte	.LFE25-.LFB25
 3037 00d0 00000000 		.4byte	.LFB26
 3038 00d4 1C000000 		.4byte	.LFE26-.LFB26
 3039 00d8 00000000 		.4byte	.LFB27
 3040 00dc 18000000 		.4byte	.LFE27-.LFB27
 3041 00e0 00000000 		.4byte	.LFB28
 3042 00e4 18000000 		.4byte	.LFE28-.LFB28
 3043 00e8 00000000 		.4byte	.LFB29
 3044 00ec 18000000 		.4byte	.LFE29-.LFB29
 3045 00f0 00000000 		.4byte	.LFB30
 3046 00f4 44000000 		.4byte	.LFE30-.LFB30
 3047 00f8 00000000 		.4byte	.LFB31
 3048 00fc 44000000 		.4byte	.LFE31-.LFB31
 3049 0100 00000000 		.4byte	.LFB32
 3050 0104 48000000 		.4byte	.LFE32-.LFB32
 3051 0108 00000000 		.4byte	.LFB33
 3052 010c 44000000 		.4byte	.LFE33-.LFB33
 3053 0110 00000000 		.4byte	.LFB34
 3054 0114 44000000 		.4byte	.LFE34-.LFB34
 3055 0118 00000000 		.4byte	.LFB35
 3056 011c 38000000 		.4byte	.LFE35-.LFB35
 3057 0120 00000000 		.4byte	.LFB36
 3058 0124 20000000 		.4byte	.LFE36-.LFB36
 3059 0128 00000000 		.4byte	.LFB37
 3060 012c 18000000 		.4byte	.LFE37-.LFB37
 3061 0130 00000000 		.4byte	.LFB38
 3062 0134 14000000 		.4byte	.LFE38-.LFB38
 3063 0138 00000000 		.4byte	.LFB39
 3064 013c 14000000 		.4byte	.LFE39-.LFB39
 3065 0140 00000000 		.4byte	.LFB40
 3066 0144 18000000 		.4byte	.LFE40-.LFB40
 3067 0148 00000000 		.4byte	.LFB41
 3068 014c 18000000 		.4byte	.LFE41-.LFB41
 3069 0150 00000000 		.4byte	0
 3070 0154 00000000 		.4byte	0
 3071              		.section	.debug_ranges,"",%progbits
 3072              	.Ldebug_ranges0:
 3073 0000 00000000 		.4byte	.LFB2
 3074 0004 30000000 		.4byte	.LFE2
 3075 0008 00000000 		.4byte	.LFB3
 3076 000c 38000000 		.4byte	.LFE3
 3077 0010 00000000 		.4byte	.LFB4
 3078 0014 24000000 		.4byte	.LFE4
 3079 0018 00000000 		.4byte	.LFB5
 3080 001c 30000000 		.4byte	.LFE5
 3081 0020 00000000 		.4byte	.LFB6
 3082 0024 48000000 		.4byte	.LFE6
 3083 0028 00000000 		.4byte	.LFB7
 3084 002c 48000000 		.4byte	.LFE7
 3085 0030 00000000 		.4byte	.LFB8
 3086 0034 48000000 		.4byte	.LFE8
 3087 0038 00000000 		.4byte	.LFB9
 3088 003c 4C000000 		.4byte	.LFE9
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 80


 3089 0040 00000000 		.4byte	.LFB10
 3090 0044 1C000000 		.4byte	.LFE10
 3091 0048 00000000 		.4byte	.LFB11
 3092 004c 48000000 		.4byte	.LFE11
 3093 0050 00000000 		.4byte	.LFB12
 3094 0054 48000000 		.4byte	.LFE12
 3095 0058 00000000 		.4byte	.LFB13
 3096 005c 4C000000 		.4byte	.LFE13
 3097 0060 00000000 		.4byte	.LFB14
 3098 0064 48000000 		.4byte	.LFE14
 3099 0068 00000000 		.4byte	.LFB15
 3100 006c 1C000000 		.4byte	.LFE15
 3101 0070 00000000 		.4byte	.LFB16
 3102 0074 18000000 		.4byte	.LFE16
 3103 0078 00000000 		.4byte	.LFB17
 3104 007c 48000000 		.4byte	.LFE17
 3105 0080 00000000 		.4byte	.LFB18
 3106 0084 1C000000 		.4byte	.LFE18
 3107 0088 00000000 		.4byte	.LFB19
 3108 008c 18000000 		.4byte	.LFE19
 3109 0090 00000000 		.4byte	.LFB20
 3110 0094 48000000 		.4byte	.LFE20
 3111 0098 00000000 		.4byte	.LFB21
 3112 009c 1C000000 		.4byte	.LFE21
 3113 00a0 00000000 		.4byte	.LFB22
 3114 00a4 18000000 		.4byte	.LFE22
 3115 00a8 00000000 		.4byte	.LFB23
 3116 00ac 48000000 		.4byte	.LFE23
 3117 00b0 00000000 		.4byte	.LFB24
 3118 00b4 1C000000 		.4byte	.LFE24
 3119 00b8 00000000 		.4byte	.LFB25
 3120 00bc 18000000 		.4byte	.LFE25
 3121 00c0 00000000 		.4byte	.LFB26
 3122 00c4 1C000000 		.4byte	.LFE26
 3123 00c8 00000000 		.4byte	.LFB27
 3124 00cc 18000000 		.4byte	.LFE27
 3125 00d0 00000000 		.4byte	.LFB28
 3126 00d4 18000000 		.4byte	.LFE28
 3127 00d8 00000000 		.4byte	.LFB29
 3128 00dc 18000000 		.4byte	.LFE29
 3129 00e0 00000000 		.4byte	.LFB30
 3130 00e4 44000000 		.4byte	.LFE30
 3131 00e8 00000000 		.4byte	.LFB31
 3132 00ec 44000000 		.4byte	.LFE31
 3133 00f0 00000000 		.4byte	.LFB32
 3134 00f4 48000000 		.4byte	.LFE32
 3135 00f8 00000000 		.4byte	.LFB33
 3136 00fc 44000000 		.4byte	.LFE33
 3137 0100 00000000 		.4byte	.LFB34
 3138 0104 44000000 		.4byte	.LFE34
 3139 0108 00000000 		.4byte	.LFB35
 3140 010c 38000000 		.4byte	.LFE35
 3141 0110 00000000 		.4byte	.LFB36
 3142 0114 20000000 		.4byte	.LFE36
 3143 0118 00000000 		.4byte	.LFB37
 3144 011c 18000000 		.4byte	.LFE37
 3145 0120 00000000 		.4byte	.LFB38
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 81


 3146 0124 14000000 		.4byte	.LFE38
 3147 0128 00000000 		.4byte	.LFB39
 3148 012c 14000000 		.4byte	.LFE39
 3149 0130 00000000 		.4byte	.LFB40
 3150 0134 18000000 		.4byte	.LFE40
 3151 0138 00000000 		.4byte	.LFB41
 3152 013c 18000000 		.4byte	.LFE41
 3153 0140 00000000 		.4byte	0
 3154 0144 00000000 		.4byte	0
 3155              		.section	.debug_line,"",%progbits
 3156              	.Ldebug_line0:
 3157 0000 6E030000 		.section	.debug_str,"MS",%progbits,1
 3157      02004600 
 3157      00000201 
 3157      FB0E0D00 
 3157      01010101 
 3158              	.LASF31:
 3159 0000 54435057 		.ascii	"TCPWM_1_SetPWMSyncKill\000"
 3159      4D5F315F 
 3159      53657450 
 3159      574D5379 
 3159      6E634B69 
 3160              	.LASF60:
 3161 0017 54435057 		.ascii	"TCPWM_1_ReadCaptureBuf\000"
 3161      4D5F315F 
 3161      52656164 
 3161      43617074 
 3161      75726542 
 3162              	.LASF21:
 3163 002e 54435057 		.ascii	"TCPWM_1_SetMode\000"
 3163      4D5F315F 
 3163      5365744D 
 3163      6F646500 
 3164              	.LASF22:
 3165 003e 54435057 		.ascii	"TCPWM_1_SetQDMode\000"
 3165      4D5F315F 
 3165      53657451 
 3165      444D6F64 
 3165      6500
 3166              	.LASF25:
 3167 0050 54435057 		.ascii	"TCPWM_1_SetPrescaler\000"
 3167      4D5F315F 
 3167      53657450 
 3167      72657363 
 3167      616C6572 
 3168              	.LASF39:
 3169 0065 54435057 		.ascii	"TCPWM_1_WriteCounter\000"
 3169      4D5F315F 
 3169      57726974 
 3169      65436F75 
 3169      6E746572 
 3170              	.LASF7:
 3171 007a 6C6F6E67 		.ascii	"long long unsigned int\000"
 3171      206C6F6E 
 3171      6720756E 
 3171      7369676E 
 3171      65642069 
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 82


 3172              	.LASF79:
 3173 0091 54435057 		.ascii	"TCPWM_1_initVar\000"
 3173      4D5F315F 
 3173      696E6974 
 3173      56617200 
 3174              	.LASF19:
 3175 00a1 54435057 		.ascii	"TCPWM_1_Stop\000"
 3175      4D5F315F 
 3175      53746F70 
 3175      00
 3176              	.LASF47:
 3177 00ae 54435057 		.ascii	"TCPWM_1_SetCompareSwap\000"
 3177      4D5F315F 
 3177      53657443 
 3177      6F6D7061 
 3177      72655377 
 3178              	.LASF6:
 3179 00c5 6C6F6E67 		.ascii	"long long int\000"
 3179      206C6F6E 
 3179      6720696E 
 3179      7400
 3180              	.LASF0:
 3181 00d3 7369676E 		.ascii	"signed char\000"
 3181      65642063 
 3181      68617200 
 3182              	.LASF55:
 3183 00df 54435057 		.ascii	"TCPWM_1_ReadCompare\000"
 3183      4D5F315F 
 3183      52656164 
 3183      436F6D70 
 3183      61726500 
 3184              	.LASF24:
 3185 00f3 71644D6F 		.ascii	"qdMode\000"
 3185      646500
 3186              	.LASF4:
 3187 00fa 6C6F6E67 		.ascii	"long int\000"
 3187      20696E74 
 3187      00
 3188              	.LASF56:
 3189 0103 54435057 		.ascii	"TCPWM_1_WriteCompareBuf\000"
 3189      4D5F315F 
 3189      57726974 
 3189      65436F6D 
 3189      70617265 
 3190              	.LASF9:
 3191 011b 75696E74 		.ascii	"uint8\000"
 3191      3800
 3192              	.LASF74:
 3193 0121 54435057 		.ascii	"TCPWM_1_ClearInterrupt\000"
 3193      4D5F315F 
 3193      436C6561 
 3193      72496E74 
 3193      65727275 
 3194              	.LASF12:
 3195 0138 646F7562 		.ascii	"double\000"
 3195      6C6500
 3196              	.LASF10:
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 83


 3197 013f 75696E74 		.ascii	"uint32\000"
 3197      333200
 3198              	.LASF40:
 3199 0146 636F756E 		.ascii	"count\000"
 3199      7400
 3200              	.LASF62:
 3201 014c 74726967 		.ascii	"triggerMode\000"
 3201      6765724D 
 3201      6F646500 
 3202              	.LASF38:
 3203 0158 6D61736B 		.ascii	"mask\000"
 3203      00
 3204              	.LASF33:
 3205 015d 54435057 		.ascii	"TCPWM_1_SetPWMStopOnKill\000"
 3205      4D5F315F 
 3205      53657450 
 3205      574D5374 
 3205      6F704F6E 
 3206              	.LASF45:
 3207 0176 54435057 		.ascii	"TCPWM_1_ReadCounter\000"
 3207      4D5F315F 
 3207      52656164 
 3207      436F756E 
 3207      74657200 
 3208              	.LASF36:
 3209 018a 64656164 		.ascii	"deadTime\000"
 3209      54696D65 
 3209      00
 3210              	.LASF72:
 3211 0193 54435057 		.ascii	"TCPWM_1_GetInterruptSourceMasked\000"
 3211      4D5F315F 
 3211      47657449 
 3211      6E746572 
 3211      72757074 
 3212              	.LASF8:
 3213 01b4 756E7369 		.ascii	"unsigned int\000"
 3213      676E6564 
 3213      20696E74 
 3213      00
 3214              	.LASF67:
 3215 01c1 54435057 		.ascii	"TCPWM_1_TriggerCommand\000"
 3215      4D5F315F 
 3215      54726967 
 3215      67657243 
 3215      6F6D6D61 
 3216              	.LASF68:
 3217 01d8 636F6D6D 		.ascii	"command\000"
 3217      616E6400 
 3218              	.LASF5:
 3219 01e0 6C6F6E67 		.ascii	"long unsigned int\000"
 3219      20756E73 
 3219      69676E65 
 3219      6420696E 
 3219      7400
 3220              	.LASF30:
 3221 01f2 6D6F6465 		.ascii	"modeMask\000"
 3221      4D61736B 
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 84


 3221      00
 3222              	.LASF77:
 3223 01fb 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\TCPWM_1.c\000"
 3223      6E657261 
 3223      7465645F 
 3223      536F7572 
 3223      63655C50 
 3224              	.LASF3:
 3225 021e 73686F72 		.ascii	"short unsigned int\000"
 3225      7420756E 
 3225      7369676E 
 3225      65642069 
 3225      6E7400
 3226              	.LASF28:
 3227 0231 6F6E6553 		.ascii	"oneShotEnable\000"
 3227      686F7445 
 3227      6E61626C 
 3227      6500
 3228              	.LASF75:
 3229 023f 54435057 		.ascii	"TCPWM_1_SetInterrupt\000"
 3229      4D5F315F 
 3229      53657449 
 3229      6E746572 
 3229      72757074 
 3230              	.LASF27:
 3231 0254 54435057 		.ascii	"TCPWM_1_SetOneShot\000"
 3231      4D5F315F 
 3231      5365744F 
 3231      6E655368 
 3231      6F7400
 3232              	.LASF14:
 3233 0267 72656733 		.ascii	"reg32\000"
 3233      3200
 3234              	.LASF65:
 3235 026d 54435057 		.ascii	"TCPWM_1_SetStopMode\000"
 3235      4D5F315F 
 3235      53657453 
 3235      746F704D 
 3235      6F646500 
 3236              	.LASF18:
 3237 0281 54435057 		.ascii	"TCPWM_1_Enable\000"
 3237      4D5F315F 
 3237      456E6162 
 3237      6C6500
 3238              	.LASF15:
 3239 0290 73697A65 		.ascii	"sizetype\000"
 3239      74797065 
 3239      00
 3240              	.LASF32:
 3241 0299 73796E63 		.ascii	"syncKillEnable\000"
 3241      4B696C6C 
 3241      456E6162 
 3241      6C6500
 3242              	.LASF16:
 3243 02a8 54435057 		.ascii	"TCPWM_1_Init\000"
 3243      4D5F315F 
 3243      496E6974 
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 85


 3243      00
 3244              	.LASF35:
 3245 02b5 54435057 		.ascii	"TCPWM_1_SetPWMDeadTime\000"
 3245      4D5F315F 
 3245      53657450 
 3245      574D4465 
 3245      61645469 
 3246              	.LASF69:
 3247 02cc 54435057 		.ascii	"TCPWM_1_ReadStatus\000"
 3247      4D5F315F 
 3247      52656164 
 3247      53746174 
 3247      757300
 3248              	.LASF54:
 3249 02df 636F6D70 		.ascii	"compare\000"
 3249      61726500 
 3250              	.LASF17:
 3251 02e7 54435057 		.ascii	"TCPWM_1_Start\000"
 3251      4D5F315F 
 3251      53746172 
 3251      7400
 3252              	.LASF66:
 3253 02f5 54435057 		.ascii	"TCPWM_1_SetCountMode\000"
 3253      4D5F315F 
 3253      53657443 
 3253      6F756E74 
 3253      4D6F6465 
 3254              	.LASF11:
 3255 030a 666C6F61 		.ascii	"float\000"
 3255      7400
 3256              	.LASF71:
 3257 0310 696E7465 		.ascii	"interruptMask\000"
 3257      72727570 
 3257      744D6173 
 3257      6B00
 3258              	.LASF26:
 3259 031e 70726573 		.ascii	"prescaler\000"
 3259      63616C65 
 3259      7200
 3260              	.LASF43:
 3261 0328 54435057 		.ascii	"TCPWM_1_WritePeriod\000"
 3261      4D5F315F 
 3261      57726974 
 3261      65506572 
 3261      696F6400 
 3262              	.LASF49:
 3263 033c 54435057 		.ascii	"TCPWM_1_WritePeriodBuf\000"
 3263      4D5F315F 
 3263      57726974 
 3263      65506572 
 3263      696F6442 
 3264              	.LASF1:
 3265 0353 756E7369 		.ascii	"unsigned char\000"
 3265      676E6564 
 3265      20636861 
 3265      7200
 3266              	.LASF53:
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 86


 3267 0361 54435057 		.ascii	"TCPWM_1_WriteCompare\000"
 3267      4D5F315F 
 3267      57726974 
 3267      65436F6D 
 3267      70617265 
 3268              	.LASF34:
 3269 0376 73746F70 		.ascii	"stopOnKillEnable\000"
 3269      4F6E4B69 
 3269      6C6C456E 
 3269      61626C65 
 3269      00
 3270              	.LASF73:
 3271 0387 54435057 		.ascii	"TCPWM_1_GetInterruptSource\000"
 3271      4D5F315F 
 3271      47657449 
 3271      6E746572 
 3271      72757074 
 3272              	.LASF2:
 3273 03a2 73686F72 		.ascii	"short int\000"
 3273      7420696E 
 3273      7400
 3274              	.LASF51:
 3275 03ac 54435057 		.ascii	"TCPWM_1_ReadPeriodBuf\000"
 3275      4D5F315F 
 3275      52656164 
 3275      50657269 
 3275      6F644275 
 3276              	.LASF78:
 3277 03c2 453A5C43 		.ascii	"E:\\Cypress\\FirstApp\\TransferByte.cydsn\000"
 3277      79707265 
 3277      73735C46 
 3277      69727374 
 3277      4170705C 
 3278              	.LASF58:
 3279 03e9 54435057 		.ascii	"TCPWM_1_ReadCompareBuf\000"
 3279      4D5F315F 
 3279      52656164 
 3279      436F6D70 
 3279      61726542 
 3280              	.LASF46:
 3281 0400 54435057 		.ascii	"TCPWM_1_ReadPeriod\000"
 3281      4D5F315F 
 3281      52656164 
 3281      50657269 
 3281      6F6400
 3282              	.LASF52:
 3283 0413 54435057 		.ascii	"TCPWM_1_SetPeriodSwap\000"
 3283      4D5F315F 
 3283      53657450 
 3283      6572696F 
 3283      64537761 
 3284              	.LASF13:
 3285 0429 63686172 		.ascii	"char\000"
 3285      00
 3286              	.LASF23:
 3287 042e 6D6F6465 		.ascii	"mode\000"
 3287      00
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 87


 3288              	.LASF59:
 3289 0433 54435057 		.ascii	"TCPWM_1_ReadCapture\000"
 3289      4D5F315F 
 3289      52656164 
 3289      43617074 
 3289      75726500 
 3290              	.LASF42:
 3291 0447 636F756E 		.ascii	"counterMode\000"
 3291      7465724D 
 3291      6F646500 
 3292              	.LASF44:
 3293 0453 70657269 		.ascii	"period\000"
 3293      6F6400
 3294              	.LASF48:
 3295 045a 73776170 		.ascii	"swapEnable\000"
 3295      456E6162 
 3295      6C6500
 3296              	.LASF70:
 3297 0465 54435057 		.ascii	"TCPWM_1_SetInterruptMode\000"
 3297      4D5F315F 
 3297      53657449 
 3297      6E746572 
 3297      72757074 
 3298              	.LASF57:
 3299 047e 636F6D70 		.ascii	"compareBuf\000"
 3299      61726542 
 3299      756600
 3300              	.LASF20:
 3301 0489 656E6162 		.ascii	"enableInterrupts\000"
 3301      6C65496E 
 3301      74657272 
 3301      75707473 
 3301      00
 3302              	.LASF41:
 3303 049a 54435057 		.ascii	"TCPWM_1_SetCounterMode\000"
 3303      4D5F315F 
 3303      53657443 
 3303      6F756E74 
 3303      65724D6F 
 3304              	.LASF29:
 3305 04b1 54435057 		.ascii	"TCPWM_1_SetPWMMode\000"
 3305      4D5F315F 
 3305      53657450 
 3305      574D4D6F 
 3305      646500
 3306              	.LASF37:
 3307 04c4 54435057 		.ascii	"TCPWM_1_SetPWMInvert\000"
 3307      4D5F315F 
 3307      53657450 
 3307      574D496E 
 3307      76657274 
 3308              	.LASF63:
 3309 04d9 54435057 		.ascii	"TCPWM_1_SetReloadMode\000"
 3309      4D5F315F 
 3309      53657452 
 3309      656C6F61 
 3309      644D6F64 
ARM GAS  C:\Users\ilias\AppData\Local\Temp\ccKWaVTM.s 			page 88


 3310              	.LASF64:
 3311 04ef 54435057 		.ascii	"TCPWM_1_SetStartMode\000"
 3311      4D5F315F 
 3311      53657453 
 3311      74617274 
 3311      4D6F6465 
 3312              	.LASF76:
 3313 0504 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3313      4320342E 
 3313      392E3320 
 3313      32303135 
 3313      30333033 
 3314 0537 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3314      20726576 
 3314      6973696F 
 3314      6E203232 
 3314      31323230 
 3315 056a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3315      66756E63 
 3315      74696F6E 
 3315      2D736563 
 3315      74696F6E 
 3316              	.LASF50:
 3317 0592 70657269 		.ascii	"periodBuf\000"
 3317      6F644275 
 3317      6600
 3318              	.LASF61:
 3319 059c 54435057 		.ascii	"TCPWM_1_SetCaptureMode\000"
 3319      4D5F315F 
 3319      53657443 
 3319      61707475 
 3319      72654D6F 
 3320              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
